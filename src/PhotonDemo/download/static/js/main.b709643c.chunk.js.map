{"version":3,"sources":["shared/index.ts","reducers/api.ts","reducers/index.ts","assets/ue_logo.svg","components/ConnectionStatus.tsx","components/controls/ColorPicker.tsx","components/controls/Button.tsx","utilities/WidgetUtilities.ts","components/controls/Dial.tsx","components/controls/ColorPickerList.tsx","components/controls/DialsWrapper.tsx","components/controls/Joystick.tsx","components/controls/JoysticksWrapper.tsx","components/controls/SafeImage.tsx","components/controls/ValueInput.tsx","components/controls/Slider.tsx","components/controls/SlidersWrapper.tsx","components/controls/Text.tsx","components/controls/VectorDrawer.tsx","components/controls/Toggle.tsx","components/controls/Search.tsx","components/controls/SliderWheel.tsx","components/Widgets/DropdownWidget.tsx","components/Widgets/ImageSelectorWidget.tsx","components/Widgets/SlidersWidget.tsx","components/Widgets/SliderWidget.tsx","components/Widgets/TabWidget.tsx","components/Widgets/ToggleWidget.tsx","components/Widgets/VectorWidget.tsx","components/modals/AlertModal.tsx","components/modals/IconModal.tsx","components/modals/RenameModal.tsx","components/modals/PrecisionModal.tsx","components/PropertiesDrawer.tsx","components/Widgets/CustomSliderWidget.tsx","components/Stack.tsx","components/DragDropWidgets.tsx","components/Properties/Pressets.tsx","components/Properties/Tab.tsx","components/Properties/Widgets.tsx","components/Properties/Properties.tsx","components/Screens/Snapshot.tsx","components/Screens/Sequencer.tsx","components/Screen.tsx","components/Login.tsx","hooks/useAgora.tsx","components/MediaPlayer.tsx","Call.tsx","components/Tabs.tsx","App.tsx","IconLibrary.ts","index.tsx"],"names":["PropertyType","WidgetTypes","IPanelType","TabLayout","ScreenType","_preset","_dispatch","_socket","_passphrase","_host","_initialize","dispatch","getState","localStorage","getItem","sParam","sParameterName","i","sURLVariables","window","location","search","substring","split","length","undefined","decodeURIComponent","getUrlParameter","io","path","transportOptions","on","API","STATUS","connected","isOpen","keyCorrect","version","presets","PRESETS","payloads","PAYLOADS","PAYLOAD","preset","property","value","PAYLOADS_VALUE","changes","view","VIEW","_api","passphrase","login","get","payload","all","loading","_request","method","url","body","callback","a","request","mode","redirect","headers","FormData","JSON","stringify","fetch","res","text","answer","parse","ok","_get","_put","console","log","createAction","PRESET_SELECT","initialize","bind","load","id","select","ID","views","tabs","name","layout","Stack","panels","set","emit","setItem","execute","func","args","metadata","meta","rebind","properties","owner","assets","q","types","prefix","filterArgs","count","Promise","resolve","thumbnailUrl","asset","proxy","put","function","objectPath","functionName","parameters","propertyName","access","propertyValue","reducer","createReducer","status","state","dotProp","merge","presetsMap","_","keyBy","params","URLSearchParams","then","combineReducers","api","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","visibiltyBasedOnCode","showIfCodeExists","visibility","display","SliderType","ColorPickerParts","ColorMode","ConnectionStatus","handleChange","handleSubmit","handleCancel","e","setState","toLowerCase","preventDefault","className","style","backgroundColor","justifyContent","alignItems","margin","border","color","onClick","onSubmit","type","placeholder","textAlign","onChange","React","Component","Button","onExecute","label","WidgetUtilities","Int8","min","max","Int16","Int32","Uint16","Uint32","Float","Vector","Vector2D","Vector4","LinearColor","Rotator","Double","Number","MIN_VALUE","MAX_VALUE","Color","number","parseFloat","isNaN","exposed","Exposed","parseNumber","Metadata","Min","Max","render","custom","customWidgets","propertyWidgets","push","propertyType","Int64","Uint64","Slider","Dial","CustomWidget","Boolean","Uint8","Toggle","Joystick","Sliders","Dials","ColorPicker","MiniColorPicker","startsWith","Dropdown","rgb","vector","rgbColor","R","X","G","Y","B","Z","A","s","r","g","b","Math","h","v","hsvColor","floor","f","p","t","c","createRef","alpha","getValue","colorToRgb","rgb2Hsv","angle","monitoring","circleRef","current","setPointerCapture","pointerId","onPointerRgbMove","rectangleRef","onPointerHsvMove","rect","getBoundingClientRect","xCenter","right","left","yCenter","bottom","top","x","clientX","y","clientY","radius","sqrt","maxRadius","clientHeight","radians","atan2","normalize","PI","hsv2rgb","colorValue","rgbToColor","onSetColor","hsv","releasePointerCapture","sign","step","background","radian","circleX","sin","circleY","cos","rectangleX","rectangleY","parts","widget","visible","map","part","Circle","Saturation","Value","slider","precision","draggable","onValueInputChange","pos","getPointerPosition","transform","Rgb","onPointerMove","onPointerDown","onPointerRgbDown","onPointerUp","onPointerRgbUp","rectangleStyle","rectanglePointerStyle","onPointerHsvDown","onPointerHsvUp","updateValues","prevProps","getVisibleParts","onPrecisionModal","icon","rendeCircleRectangle","Wheel","toFixed","onWheelMove","onHsvWheelMove","onValueSliderChange","Alpha","Inputs","renderRgbInput","getPreviewColorStyles","DialMode","ColorPickerSlider","SliderWidth","pointer","dragOffset","dragValue","abs","round","prevState","onPointerLostCapture","getPercentage","ColorPickerList","selected","item","index","onSelect","list","first","items","dragging","selection","parent","find","isDragDisabled","getPropertyValue","draggableId","getMaxColorValue","onItemSelect","getPropertyLabel","getAlpha","Intl","NumberFormat","onMove","Range","getValueFromAngle","Rotation","linesList","largeLineStep","tickAngle","shortLines","rangeAngle","isActive","shortTickAngle","active","startAngle","endAngle","largeLines","endlessAngle","renderSmallLines","begin","end","range","getRange","Endless","prevAngle","getAngle","phi","decimals","beautify","format","calcLength","angleInProc","svgCircleDegreeLength","angleCalc","size","wrapperStyle","dialInputStyle","position","hidePrecision","onLostPointerCapture","onUp","onDown","tabIndex","rotate","getPaintOverRotate","circlePaintOver","getCirclePaintOver","renderLines","stopPropagation","hideReset","cxcy","circleRotateAngle","strokeDashoffset","xmlns","x1","x2","y1","y2","offset","stopColor","cx","cy","fill","strokeWidth","strokeDasharray","DialsWrapper","getPropertyKeys","filter","includes","getProperties","dials","dialSize","interval","makeMove","setInterval","joystickValue","clearInterval","onPointerMoveCapture","onLostPointerCaptureCapture","onPointerLost","JoysticksWrapper","speed","z","axis","showReset","leftJoystick","getJoystick","rightJoystick","renderInput","onSpeedChange","showLabel","SafeImage","hasError","fallback","alt","src","onError","ValueInput","input","focus","dragStartX","touchTime","performance","now","getNumberValue","innerWidth","onChangeValue","setPropsValue","newValue","onManualChange","onKeyDown","onBlur","onContextMenu","circle","percent","nativeEvent","code","showGrid","showLimits","renderGridLines","SlidersWrapper","sliderValue","getPropertyPrecision","onSliderChange","Text","VectorDrawer","widgets","setMode","modes","compact","w","onClose","m","rotator","dialMode","showModes","renderMode","renderJoystick","Search","onSearch","SliderWheel","last","onWheelStart","delta","sum","circles","renderCircles","DropdownWidget","options","option","ImageSelectorWidget","itemSize","minHeight","startCase","SlidersWidget","isSlider","selectedProperties","Fragment","SliderWidget","isRange","TabWidget","data-prefix","data-value","ToggleWidget","checked","VectorWidget","onToggleVectorDrawer","onSetVector","locked","k","onAxisChange","AlertModal","onCancel","close","document","addEventListener","onKeyPress","removeEventListener","onOK","pending","div","getElementById","prepend","ReactDOM","finally","unmountComponentAtNode","parentNode","removeChild","IconModal","filterText","onFilterChangeDelayed","toLocaleLowerCase","debounce","onFilterChange","fas","iconName","onFilterTextChange","autoFocus","autoComplete","onResetFilter","renderIcons","disabled","RenameModal","dir","TabType","PrecisionModal","negative","factor","normalizeValue","onSetMeta","getHsvColor","hsvToColor","getHsvValue","W","values","getInputKey","onRgbValueInputChange","onRgbStepChange","onRgbWheelMove","multiplier","toUpperCase","onHsvValueInputChange","onHsvStepChange","onHsvWheelStart","onMetadataChange","String","update","show","originalValue","stepSize","nextStep","backStep","isDisabled","isEqual","renderMinMaxSlider","onStepChange","onRevertChanges","rgbBtnClassName","hsvBtnClassName","Hsv","renderHsvInput","renderColorPickerModal","renderNumberPrecicionModal","loaded","sensitivity","renderPrecisionModalContent","CustomSliderWidget","tempId","connect","draggingId","templates","Description","DisplayName","agoraUserID","Function","throttle","onPropertyValueChange","field","str","Type","getMetadata","precisionModal","getWidgetMetadata","getLabel","onPropertyAxisValueChange","onThrottledPropertyValueChange","getWidgetId","onPointerChange","onDragChange","onSelected","editable","droppable","droppableId","getDroppableId","isDropDisabled","listIndex","Widget","direction","tab","firstTab","Label","Spacer","Tabs","renderWidgets","isSelected","panel","renderPanel","data","itemContent","listId","firstListItem","selectedItem","itemId","renderListItemContent","UnderlyingProperty","EnumValues","trim","spaces","toggle","dial","axisValue","prev","ratio","onSetVectorDrawer","button","elements","limit","getWidgetType","firstIndex","widgetType","element","renderTabs","renderSliders","ImageSelector","renderImageSelector","renderSpacerWidget","renderJoysticks","renderDropdown","renderLabel","renderSlider","renderCustomSlider","renderTextWidget","renderVectorWidget","renderDialsWidget","getInlineWidgets","renderDialWidgets","renderToggleWidgets","renderButtonWidgets","renderColorList","renderColorPickerList","toString","ids","pickerList","pickerItem","PropertyIds","getPanelProperties","PresetId","matching","ReturnValue","sessionStorage","template","Panel","panelPath","isTemplate","onFocus","isIos","onRefreshPanelOptions","onRebindActor","match","List","renderList","tabKey","isList","root","querySelector","test","navigator","platform","ontouchmove","touches","touch","scrollY","pageY","scrollTop","scrollTo","ongesturechange","ongestureend","hoverTab","onPointerEnter","renderRootList","renderVectorDrawer","renderPrecisionModal","DraggableWidget","snapshot","isDropAnimating","isDragging","replace","transitionDuration","children","provided","innerRef","draggableProps","getStyle","defaultPrevented","dragHandleProps","DroppableWidget","isDraggingOver","data-type","droppableProps","VirtualList","itemProps","el","child","firstChild","scrollerRef","components","Item","renderItemPlaceholder","getItemSize","Pressets","pressets","onPresetChange","Name","Tab","onChangeIcon","onRenameTabModal","onDuplicateTab","onAddSnapshotTab","onAddSequencerTab","Widgets","minWidth","itemIcon","renderWidget","Properties","collapsed","group","ExposedProperties","ExposedFunctions","onWidgetsLock","onToggleGroup","renderDraggableItem","groups","onSerach","renderGroup","Presets","PropertiesDrawer","filteredGroups","Groups","filteredWidgets","sortBy","filteredPresets","editTab","usedProperties","usedPropArray","uniq","reduce","result","listItem","getPropertiesofWidget","picker","filterGroup","slice","prop","onUpdateView","splice","onViewUpdatedDebounced","lockWidget","onWidgetTabRemove","renderDelete","onListItemRemove","onNewTabs","available","colorPicker","renderCompatibleWidgets","renderPropertyLabel","initial","xor","onDiscardStateMetadata","ScaleSlider","getMinMax","onWidgetRemove","renderMinMax","vectorModes","onVectorModeChange","renderSlidersEdit","param","UnderlyingFunction","Arguments","ueLabel","onFunctionParameterChanged","arg","argName","renderTabsEdit","renderListsEdit","renderPanelEdit","renderColorPickersListEdit","renderColorPickerEdit","renderLabelEdit","renderSpacerEdit","renderDialEdit","renderDialsEdit","renderVectorEdit","renderFunctionEdit","compatible","onPropertyChange","isPropertyUsed","getCompatibleWidgets","noValue","onWidgetTypeChanged","widgetClassName","data-tooltip","getWidgetFromElement","onPropertiesFilter","onWidgetsFilter","onPresetFilter","buildPropertyList","resetFilter","isPropertyAvailable","renderTab","renderTabContent","renderCompatibleProperties","renderProperties","Snapshot","sortAsc","snapshots","filters","Class","editorSubsystem","world","nativeFilters","EnableBlueprintNativeClassFiltering","NativeParentClasses","bpFilters","MapPath","sortAssets","fetchAssets","ascending","orderBy","onSortChange","fetchAssetsDebounced","SaveModal","Path","showDetails","SnapshotDescription","CaptureTime","onSetSort","onCreate","onSearchChange","renderColumnHeader","renderSnapshot","SnapshotPreview","filterAsset","createdFilter","filterInstance","WorldContextObject","OptionalFilter","SnapshotName","head","onLoad","spin","description","FileName","FolderPath","editor","RootLevelSnapshotSaveDir","LevelSnapshotSaveDir","DefaultLevelSnapshotName","InWorldName","exec","InTextToParse","PathFormatted","NameFormatted","readOnly","rows","Sequencer","playSequence","sequence","sequencer","NewFrame","renderSequence","Screen","screen","Login","error","event","secured","crypto","createHash","digest","localTracks","audioTrack","MediaPlayer","container","useRef","useEffect","videoTrack","play","stop","client","AgoraRTC","createClient","codec","findGetParameter","parameterName","tmp","substr","forEach","DeprecatedCall","useState","localAudioTrack","setLocalAudioTrack","joinState","setJoinState","joinInProgress","setJoinInProgressState","aiDenoiserState","remoteUsers","setRemoteUsers","appid","channel","uid","token","join","createMicrophoneAudioTrack","publish","leave","flag","handleUserPublished","user","mediaType","subscribe","Array","from","handleUserUnpublished","handleUserJoined","handleUserLeft","off","controler","useAgora","codeFromQueryParameter","parseInt","userID","allTabsVisible","wrapper","childrenWidth","clientWidth","onTabChange","scrollLeft","offsetStart","offsetEnd","visibleLeft","onDeleteTab","onResize","leftTabClassName","rightTabClassName","setRef","flex","onNewTab","generateAgoraUserID","ceil","random","App","req","accept","dropElements","elementsFromPoint","getAttribute","clearTimeout","hoverDelay","setTimeout","attr","dropTypes","ctrlKey","metaKey","HTMLInputElement","shiftKey","appRef","tabNumber","isEditable","createNewTabInternal","getNewTabName","getRandomIcon","duplicatedTab","oldName","rename","newIcon","destination","resetDragState","drop","drag","sourcePath","dropPath","dragType","dropDestination","content","renderStack","renderScreen","panelRef","onResetSelection","agoraID","onDropElementAdd","setVectorDrawer","onpointermove","getBuildInfo","info","buildInfo","onBeforeCapture","onDragEnd","renderStatus","onSetTabsDrawer","onTabDelete","onTabIconChange","onTabRename","onPresetChanged","library","add","store","createStore","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.b709643c.chunk.js","sourcesContent":["export enum PropertyType {\r\n  Boolean =     'bool',\r\n  Int8 =        'int8',\r\n  Int16 =       'int16',\r\n  Int32 =       'int32',\r\n  Int64 =       'int64',\r\n  Uint8 =       'uint8',\r\n  Uint16 =      'uint16',\r\n  Uint32 =      'uint32',\r\n  Uint64 =      'uint64',\r\n  Float =       'float',\r\n  Double =      'double',\r\n  Vector =      'FVector',\r\n  Vector2D =    'FVector2D',\r\n  Vector4 =     'FVector4',\r\n  Rotator =     'FRotator',\r\n  Color =       'FColor',\r\n  LinearColor = 'FLinearColor',\r\n  String =      'FString',\r\n  Text =        'FText',\r\n\r\n  Function =    'Function',\r\n}\r\n\r\nexport interface ColorProperty {\r\n  R: number;\r\n  G: number;\r\n  B: number;\r\n  A?: number;\r\n}\r\n\r\nexport interface VectorProperty {\r\n  X: number;\r\n  Y: number;\r\n  Z: number;\r\n}\r\n\r\nexport interface RotatorProperty {\r\n  Pitch: number;\r\n  Yaw: number;\r\n  Roll: number;\r\n}\r\n\r\nexport type PropertyValue = boolean | number | string | VectorProperty | RotatorProperty | ColorProperty | IPayload;\r\n\r\nexport type JoystickValue = { [key: string]: number };\r\n\r\nexport type IHsvColor = {\r\n  h: number;\r\n  s: number;\r\n  v: number;\r\n  a?: number;\r\n};\r\n\r\nexport interface IFunctionParameter {\r\n  Name: string;\r\n  Description: string;\r\n  Type: PropertyType;\r\n  Optional?: boolean;\r\n  OutParameter?: boolean;\r\n}\r\n\r\nexport interface IFunction {\r\n  Name: string;\r\n  Description?: string;\r\n  Arguments: IFunctionParameter[];\r\n}\r\n\r\nexport interface IExposedFunction {\r\n  ID: string;\r\n  DisplayName: string;\r\n  UnderlyingFunction: IFunction;\r\n  Metadata: { [key: string]: string };\r\n\r\n  //Added\r\n  Type: PropertyType;\r\n}\r\n\r\nexport interface IProperty {\r\n  Name: string;\r\n  Description: string;\r\n  Type: PropertyType;\r\n  Metadata: { [key: string]: string };\r\n}\r\n\r\nexport interface IExposedProperty {\r\n  ID: string;\r\n  DisplayName: string;\r\n  Metadata: Record<string, string>;\r\n  Widget: WidgetType;\r\n  UnderlyingProperty: IProperty;\r\n  OwnerObjects: IObject[];\r\n\r\n  //Added\r\n  Type: PropertyType;\r\n}\r\n\r\nexport interface IActor {\r\n  Name: string;\r\n  Path: string;\r\n  Class: string;\r\n}\r\n\r\nexport interface IExposedActor {\r\n  DisplayName: string;\r\n  UnderlyingActor: IActor;\r\n}\r\n\r\nexport interface IGroup {\r\n  Name: string;\r\n  ExposedProperties: IExposedProperty[];\r\n  ExposedFunctions: IExposedFunction[];\r\n}\r\n\r\nexport interface IPreset {\r\n  Path: string;\r\n  Name: string;\r\n  ID: string;\r\n  Groups: IGroup[];\r\n  \r\n  ExposedProperties?: IExposedProperty[];\r\n  ExposedFunctions?: IExposedFunction[];\r\n  Exposed?: Record<string, IExposedProperty | IExposedFunction>;\r\n}\r\n\r\nexport type IPresets = { [preset: string]: IPreset };\r\n\r\nexport interface IObject {\r\n  Name: string;\r\n  Class: string;\r\n  Path: string;\r\n}\r\n\r\nexport interface IAsset extends IObject {\r\n  Metadata: Record<string, string>;\r\n}\r\n\r\nexport type IPayload = { [property: string]: PropertyValue | IPayload };\r\n\r\nexport type IPayloads = { [preset: string]: IPayload };\r\n\r\nexport enum WidgetTypes {\r\n  Dial =            'Dial',\r\n  Dials =           'Dials',\r\n  Slider =          'Slider',\r\n  Sliders =         'Sliders',\r\n  ScaleSlider =     'Scale Slider',\r\n  ColorPicker =     'Color Picker',\r\n  MiniColorPicker = 'Mini Color Picker',\r\n  ColorPickerList = 'Color Picker List',\r\n  Toggle =          'Toggle',\r\n  Joystick =        'Joystick',\r\n  Button =          'Button',\r\n  Text =            'Text',\r\n  Label =           'Label',\r\n  Dropdown =        'Dropdown',\r\n  ImageSelector =   'Image Selector',\r\n  Vector =          'Vector',\r\n  Spacer =          'Spacer',\r\n  Tabs =            'Tabs',\r\n  //IB: Custom Widgets Start\r\n  CustomWidget =    'Custom Slider Widget',\r\n  //AgoraButton =     'Agora Button',\r\n  //IB: Custom Widgets End\r\n\r\n}\r\n\r\nexport type WidgetType = keyof typeof WidgetTypes | string;\r\n\r\n\r\nexport type IWidgetMeta = {\r\n  Description?: string;\r\n  Min?: number;\r\n  Max?: number;\r\n} & { [key: string]: any };\r\n\r\n\r\nexport enum IPanelType {\r\n  Panel = 'PANEL',\r\n  List  = 'LIST',\r\n}\r\n\r\nexport interface IPanel {\r\n  id?: string;\r\n  title?: string;\r\n  isTemplate?: boolean;\r\n  type: IPanelType;\r\n  widgets?: ICustomStackWidget[];\r\n  items?: ICustomStackListItem[];\r\n}\r\n\r\nexport interface IColorPickerList {\r\n  id?: string;\r\n  widget: WidgetTypes.ColorPickerList;\r\n  items: ICustomStackProperty[];\r\n}\r\n\r\nexport enum TabLayout {\r\n  Stack =    'Stack',\r\n  Screen =   'Screen',\r\n}\r\n\r\nexport enum ScreenType {\r\n  Snapshot =      'Snapshot',\r\n  Sequencer =     'Sequencer',\r\n}\r\n\r\nexport interface IScreen {\r\n  type: ScreenType;\r\n  data?: any;\r\n}\r\n\r\nexport interface IDropdownOption {\r\n  value: string;\r\n  label?: string;\r\n}\r\n\r\nexport interface ICustomStackProperty {\r\n  id?: string;\r\n  property: string;\r\n  propertyType: PropertyType;\r\n  widget: WidgetType;\r\n\r\n  // Label only\r\n  label?: string;\r\n\r\n  // Vector only\r\n  widgets?: WidgetType[];\r\n\r\n  // Dropdown only\r\n  options?: IDropdownOption[];\r\n\r\n  // Function arguments\r\n  args?: Record<string, any>;\r\n\r\n  // Space only\r\n  spaces?: number;\r\n}\r\n\r\nexport interface ICustomStackItem {\r\n  id?: string;\r\n  label: string;\r\n  widgets: ICustomStackWidget[];\r\n}\r\n\r\nexport interface ICustomStackTabs {\r\n  id?: string;\r\n  widget: 'Tabs';\r\n  tabs: ICustomStackItem[];\r\n}\r\n\r\nexport interface ICustomStackListItem {\r\n  id?: string;\r\n  label: string;\r\n  check?: { actor: string; property: string; };\r\n  panels: IPanel[];\r\n}\r\n\r\nexport type ICustomStackWidget = ICustomStackProperty | ICustomStackTabs | IColorPickerList;\r\n\r\nexport interface IView {\r\n  tabs: ITab[];\r\n}\r\n\r\nexport interface ITab {\r\n  name: string;\r\n  icon: string;\r\n  layout: TabLayout;\r\n  panels?: IPanel[];\r\n  screen?: IScreen;\r\n}","import { Dispatch } from 'redux';\nimport { createAction, createReducer } from 'redux-act';\nimport dotProp from 'dot-prop-immutable';\nimport io from 'socket.io-client';\nimport { IAsset, IPayload, IPayloads, IPreset, IView, PropertyValue, TabLayout } from '../shared';\nimport fs from 'fs';\nimport _ from 'lodash';\n\nfunction getUrlParameter(sParam) {\n  var sPageURL = window.location.search.substring(1),\n      sURLVariables = sPageURL.split('&'),\n      sParameterName,\n      i;\n\n  for (i = 0; i < sURLVariables.length; i++) {\n      sParameterName = sURLVariables[i].split('=');\n\n      if (sParameterName[0] === sParam) {\n          return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);\n      }\n  }\n  return false;\n};\n\nexport type ApiState = {\n  presets: { [id: string]: IPreset };\n  preset?: string;\n  payload: IPayload;\n  payloads: IPayloads;\n  view: IView;\n  status: {\n    connected?: boolean;\n    keyCorrect?: boolean;\n    loading?: boolean;\n    isOpen?: boolean;\n  },\n};\n\n\nlet _preset;\nlet _dispatch: Dispatch;\nlet _socket: SocketIOClient.Socket;\nlet _passphrase: string;\n//IB: modified from const to allow separate server\nlet _host = (process.env.NODE_ENV === 'development' ? `http://${window.location.hostname}:7002` : '');\nconsole.log(`The host is ${_host}`);\n\nfunction _initialize(dispatch: Dispatch, getState: () => { api: ApiState }) {\n  _dispatch = dispatch;\n  _passphrase = localStorage.getItem('passphrase'); \n\n  if(_host === '')\n  { \n    _host = 'https:\\/\\/' + getUrlParameter('code') + '.vrtrainers.net';\n  }\n  _socket = io(`${_host}/`, { path: '/api/io', transportOptions: {  },  });\n\n  _socket\n    .on('disconnect', () => dispatch(API.STATUS({ connected: false, isOpen: false, keyCorrect: false, version: undefined })))\n    .on('presets', (presets: IPreset[]) => dispatch(API.PRESETS(presets)))\n    .on('payloads', (payloads: IPayloads) => {\n      dispatch(API.PAYLOADS(payloads));\n      if (!_preset || !payloads[_preset])\n        return;\n\n      dispatch(API.PAYLOAD(payloads[_preset]));\n    })\n    .on('value', (preset: string, property: string, value: PropertyValue) => {\n      dispatch(API.PAYLOADS_VALUE({ [preset]: { [property]: value }}));\n\n      if (_preset === preset)\n        dispatch(API.PAYLOAD({ [property]: value }));\n    })\n    .on('values', (preset: string, changes: { [key: string]: PropertyValue }) => {\n      dispatch(API.PAYLOADS_VALUE({ [preset]: changes }));\n      if (_preset === preset)\n        dispatch(API.PAYLOAD(changes));\n    })\n    .on('view', (preset: string, view: IView) => {\n      if (_preset !== preset)\n        return;\n\n      dispatch(API.VIEW(view));\n    })\n    .on('connected', (connected: boolean, version: string) => {\n      dispatch(API.STATUS({ connected, version }));\n\n      if (_passphrase !== null)\n        _api.passphrase.login(_passphrase);\n          \n      _api.presets.get();\n      _api.payload.all();\n    })\n    .on('opened', (isOpen: boolean) => {\n      dispatch(API.STATUS({ isOpen, loading: false }));\n    })\n    .on('passphrase', (keyCorrect: boolean) => {\n      dispatch(API.STATUS({ keyCorrect }));\n\n\n    })\n    .on('loading', (loading: boolean) => {\n      dispatch(API.STATUS({ loading }));\n    });\n}\n\ntype IRequestCallback = Function | string | undefined;\n\nasync function _request(method: string, url: string, body: string | object | undefined, callback: IRequestCallback, passphrase?: string): Promise<any> {\n  const request: RequestInit = { method, mode: 'cors', redirect: 'follow', headers: {} };\n  if (body instanceof FormData || typeof(body) === 'string') {\n    request.body = body;\n\n  } else if (typeof(body) === 'object') {\n    request.body = JSON.stringify(body);\n    request.headers['Content-Type'] = 'application/json';\n  }\n  request.headers['passphrase'] = passphrase ?? _passphrase;\n\n  const res = await fetch(_host + url, request);\n\n  let answer: any = await res.text();\n  if (answer.length > 0)\n    answer = JSON.parse(answer);\n  \n  if (!res.ok)\n    throw answer;\n\n  if (typeof (callback) === 'function')\n    _dispatch(callback(answer));\n  return answer;\n}\n//IB: Added for access to static data in packaged build\nasync function _requestStatic(method: string, url: string, body: string | object | undefined, callback: IRequestCallback, passphrase?: string): Promise<any> {\n  let answer = JSON.parse(`{}`);\n  return answer;\n}\n\n\nfunction _get(url: string, callback?: IRequestCallback, passphrase?: string)        { return _request('GET', url, undefined, callback, passphrase) };\n\n//IB: Added for access to static data in packaged build\nfunction _getStatic(url: string, callback?: IRequestCallback, passphrase?: string)        { return _requestStatic('GET', url, undefined, callback, passphrase) };\n\nfunction _put(url: string, body: any, passphrase?: string)                          { return _request('PUT', url, body, undefined, passphrase) };\n\nconst API = {\n  STATUS: createAction<any>('API_STATUS'),\n  PRESETS: createAction<IPreset[]>('API_PRESETS'),\n  PRESET_SELECT: createAction<string>('API_PRESET_SELECT'),\n  VIEW: createAction<IView>('API_VIEW'),\n  PAYLOAD: createAction<IPayload>('API_PAYLOAD'),\n  PAYLOADS: createAction<IPayloads>('API_PAYLOADS'),\n  PAYLOADS_VALUE: createAction<IPayloads>('API_PAYLOADS_VALUE'),\n};\n\n\nexport const _api = {\n  initialize: () => _initialize.bind(null),\n\n  presets: {\n    get: (): Promise<IPreset[]> => _get('/api/presets', API.PRESETS),\n    //IB: Forcing static load\n    //load: (id: string): Promise<IPreset> => _getStatic(`/api/presets/${id}/load`),\n    load: (id: string): Promise<IPreset> => _get(`/api/presets/${id}/load`),\n    select: (preset?: IPreset) => {\n      _api.presets.load(preset?.ID);\n      _dispatch(API.PRESET_SELECT(preset?.ID));\n    },\n  },\n  views: {\n    get: async(preset: string): Promise<IView> => {\n      let view = await _get(`/api/presets/view?preset=${preset}`);\n      //IB: Trying brute force restoration of Metadata\n      if (typeof(view) !== 'object' || !view?.tabs?.length) {\n        view = {\n          tabs: [{ name: 'Tab 1', layout: TabLayout.Stack, panels: [] }]\n        };\n      }\n\n      _dispatch(API.VIEW(view));\n\n      return view;\n    },\n    set: (view: IView) => {\n      _socket.emit('view', _preset, view);\n    },\n  },\n  passphrase: {\n    login: async(passphrase: string): Promise<boolean> => {\n      const ok = await _get('/api/passphrase', API.STATUS, passphrase);\n      if (!ok)\n        return false;\n\n      localStorage.setItem('passphrase', passphrase);\n      _passphrase = passphrase;\n      _api.presets.get();\n      _api.payload.all();\n      return true;\n    },\n  },\n  payload: {\n    get: (preset: string): Promise<IPayload> => _get(`/api/presets/payload?preset=${preset}`, API.PAYLOAD),\n    all: (): Promise<IPayloads> => _get('/api/payloads', API.PAYLOADS),\n    set: (property: string, value: PropertyValue) => {\n      _socket.emit('value', _preset, property, value);\n    },\n    execute: (func: string, args?: Record<string, any>) => {\n      _socket.emit('execute', _preset, func, args ?? {});\n    },\n    metadata: (property: string, meta: string, value: string) => {\n      _socket.emit('metadata', _preset, property, meta, value);\n    },\n    rebind: (properties: string[], owner: string) => {\n      _socket.emit('rebind', _preset, properties, owner);\n    },\n  },\n  assets: {\n    search: (q: string, types: string[], prefix: string, filterArgs = {}, count: number = 50): Promise<IAsset[]> => {\n      return new Promise(resolve => _socket.emit('search', q, types, prefix, filterArgs, count, resolve));\n    },\n    thumbnailUrl: (asset: string) => `${_host}/api/thumbnail?asset=${asset}`,\n  },\n  proxy: {\n    get: (url: string) => _put('/api/proxy', { method: 'GET', url }),\n    put: (url: string, body: any) => _put('/api/proxy', { method: 'PUT', url, body }),\n    function: (objectPath: string, functionName: string, parameters: Record<string, any> = {}): Promise<any> => {\n      const body = { objectPath, functionName, parameters };\n      return _api.proxy.put('/remote/object/call', body);\n    },\n    property: {\n      get: (objectPath: string, propertyName: string) => {\n        const body = { \n          objectPath,\n          propertyName,\n          access: 'READ_ACCESS',\n        };\n        return _api.proxy.put('/remote/object/property', body);        \n      },\n      set: (objectPath: string, propertyName: string, propertyValue: any) => {\n        const body = { \n          objectPath,\n          propertyName,\n          propertyValue: { [propertyName]: propertyValue },\n          access: 'WRITE_ACCESS',\n        };\n        return _api.proxy.put('/remote/object/property', body);        \n      }\n    }\n  }\n};\n\nconst initialState: ApiState = {\n  presets: {},\n  payload: {},\n  payloads: {},\n  view: { tabs: null },\n  status: {\n    connected: false,\n    keyCorrect: false,\n    isOpen: false,\n  },\n};\n\nconst reducer = createReducer<ApiState>({}, initialState);\n\nreducer\n  .on(API.STATUS, (state, status) => {\n    return dotProp.merge(state, 'status', status);\n  })\n  .on(API.PRESETS, (state, presets) => {\n    const presetsMap = _.keyBy(presets, 'ID');\n    state = dotProp.set(state, 'presets', presetsMap);\n\n    let { preset } = state;\n\n    // Is loaded preset still available?\n    if (preset && !presetsMap[preset])\n      preset = undefined;\n\n    // If there isn't a loaded preset\n    if (!preset) {\n      // 1. Load the preset name specified in the url\n      const params = new URLSearchParams(window.location.search);\n      preset = params.get('preset');\n\n      // 2. Load last used preset\n      if (!preset || !presetsMap[preset])\n        preset = localStorage.getItem('preset');\n\n      // 3. Load first preset\n      if (!preset || !presetsMap[preset])\n        preset = presets[0]?.ID;\n\n      // No available preset\n      if (!preset) {\n        _preset = undefined;\n        return { ...state, preset: undefined, view: { tabs: null }, payload: {} };\n      }\n\n      _preset = preset;\n      _api.presets.load(preset)\n          .then(() => Promise.all([\n              _api.views.get(preset),\n              _api.payload.get(preset),\n          ]));\n\n      return { ...state, preset, view: { tabs: [] }, payload: {} };\n    }\n\n    return state;\n  })\n  .on(API.VIEW, (state, view) => dotProp.merge(state, 'view', view))\n  .on(API.PAYLOADS, (state, payloads) => ({ ...state, payloads }))\n  .on(API.PAYLOADS_VALUE, (state, payloads) => {\n    for (const preset in payloads) {\n      const payload = payloads[preset];\n      for (const property in payload) {\n        state = dotProp.set(state, ['payloads', preset, property], payload[property]);\n      }\n    }\n    \n    return state;\n  })\n  .on(API.PAYLOAD, (state, payload) => {\n    for (const property in payload)\n      state = dotProp.set(state, ['payload', property], payload[property]);\n    \n    return state;\n  })\n  .on(API.PRESET_SELECT, (state, preset) => {\n    //Original:\n    _preset = preset;\n    localStorage.setItem('preset', preset);\n    _api.views.get(preset);\n    _api.payload.get(preset);\n    return { ...state, preset, view: { tabs: [] }, payload: {} };\n  });\n\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport api, { ApiState } from './api';\r\n\r\n\r\nexport interface ReduxState {\r\n  api: ApiState,\r\n}\r\n\r\nexport default combineReducers({\r\n  api,\r\n});\r\n\r\n\r\nexport { _api } from './api';\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M160.2,227.1c-3.6,2.7-12.1,7.4-27.7,5.5-19.5-2.3-34.9-23.6-42.6-33.2l-3.8,3.3v16.3c-.2,1.3,.7,2.5,2,2.7h0v1.2h-13.5v-1.2c.6-.2,1.2-.5,1.6-1,.3-.5,.5-1.1,.4-1.8v-43.5c0-1.2-1-2.2-2.3-2.2-.9,0-1.7,.5-2,1.3-.5,1.1-1,2.2-1.3,3.3l-11.7,35.4-3.3,9.6h-6.7l-3-9.1-8.9-27-12.1,36.1h-6.7L3.9,177.8c-.6-1.9-1.2-3.1-1.7-3.8s-1.3-1.2-2.2-1.4v-.8H15.3v1.2c-1.3,.3-2,1.1-2,2.2,0,.8,.2,1.7,.5,2.5l8.6,27.2,9.3-27.3c.4-1.2,.6-2,.6-2.3,0-1.2-.7-1.9-2.1-2.2v-1.3h15.8v1.2c-1.4,.5-2.2,1.3-2.2,2.4,.1,.8,.3,1.5,.5,2.3l8.8,27.3,8.5-26.8c.4-1.3,.7-2.3,.7-3,0-1.1-.8-1.8-2.3-2.2v-1.2h28.2v1.2c-.6,.1-1.2,.5-1.6,1-.3,.5-.5,1.1-.4,1.7v15.7l17.9-15c.8-.8,1.2-1.4,1.2-1.9,0-.7-.6-1.2-1.8-1.5v-1.2h31.2v1.2c-1.3,.2-2.2,1.4-2.1,2.7h0v25.6c0,3,.1,5.2,.4,6.6,.2,1.3,.8,2.5,1.5,3.5,2,2.6,5.5,3.8,10.4,3.8s8.4-1.3,10.4-3.8c.8-1,1.3-2.2,1.5-3.5,.3-1.4,.4-3.6,.4-6.6v-25.6c0-.6-.1-1.2-.4-1.8-.4-.5-1-.8-1.6-1v-1.1h12.8v1.2c-.6,.2-1.2,.5-1.6,1-.3,.5-.5,1.1-.5,1.8v28.8c0,5.4-.8,9.5-2.5,12.2-3,4.9-9.3,7.3-18.9,7.3-6.9,0-12.2-1.3-15.9-3.9-2.1-1.5-3.7-3.7-4.5-6.2-.8-2.6-1.2-5.7-1.2-9.3v-29c0-1-1.1-2-2.3-2-.8,.1-1.5,.3-2.1,.8-.3,.2-21.8,19.1-21.8,19.1,7,9,18.5,24.7,29.4,31.5,13.7,8.5,27.4,3.7,33.2,1.3l.9,.7Z\"\n}), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.4,155V48.7c0-3.1-3.9-2.6-3.9-2.6v-7.2h25.6V127.4c13.4-3.1,29.1-9.6,41.5-23.4,12.4,13.8,29,20.3,42.4,23.4V38.9h25.7v7.2s-4-.4-4,2.6v106.3H23.4Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M108.1,29.2s-4.3,1.7-7.2-5.8c-2.9-7.5-9.4-8.7-9.4-8.7v-6.1c.9-.1,1.5-.9,1.5-1.7s-.7-1.5-1.5-1.5h-.1c-.1-1.7-1.5-3.1-3.2-3.2V0h-2.2V2.2c-3.2,.5-3.2,3.2-3.2,3.2-.8,0-1.5,.6-1.5,1.4v.1c0,.9,.6,1.6,1.5,1.7v6.1s-6.5,1.2-9.4,8.7c-2.9,7.5-7.2,5.8-7.2,5.8l-4.3,4.2,4.8,4.7h1.2v53.7c11.2-5.6,19.3-15.3,19.3-15.3,0,0,8.3,9.7,19.5,15.3V38.2h1.2l4.7-4.7-4.5-4.3Zm-21,35.1c-4.1,0-7.4-3.3-7.5-7.4,0-4.1,3.3-7.4,7.4-7.5,4.1,0,7.4,3.3,7.5,7.4v.1c-.1,4.1-3.4,7.4-7.4,7.4\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M167.6,226.5h-1v-5.7c.6-.1,1.3-.2,2-.2,.9,0,1.4,.2,1.8,.4,.4,.3,.6,.7,.6,1.2,0,.7-.5,1.2-1.1,1.4v.1c.5,.2,.8,.7,1,1.4,.1,.9,.3,1.2,.4,1.4h-1.1c-.2-.2-.3-.7-.4-1.5-.1-.6-.5-.9-1.3-.9h-.7l-.2,2.4Zm0-3.2h.7c.8,0,1.5-.2,1.5-.9,0-.6-.3-.9-1.4-.9-.3,0-.5,0-.8,.1v1.7Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M168.6,218.1c-3,0-5.5,2.4-5.5,5.5s2.4,5.5,5.5,5.5,5.5-2.4,5.5-5.5h0c0-3-2.4-5.5-5.5-5.5h0m0,10c-2.5,0-4.5-2-4.5-4.4s2-4.5,4.4-4.5,4.5,2,4.5,4.4h0c.1,2.5-1.9,4.4-4.4,4.5h0\"\n}));\n\nvar SvgUeLogo = function SvgUeLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_2\",\n    width: 174.1,\n    height: 233.04,\n    viewBox: \"0 0 174.1 233.04\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUeLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ue_logo.3bc5c470.svg\";\nexport { ForwardRef as ReactComponent };","import React, { CSSProperties } from 'react';\r\nimport { ReactComponent as Logo } from '../assets/ue_logo.svg';\r\n\r\n//Refactor needed, combine this into its own file and reference there to multiple modules\r\nfunction getUrlParameter(sParam):string {\r\n  var sPageURL = window.location.search.substring(1),\r\n      sURLVariables = sPageURL.split('&'),\r\n      sParameterName,\r\n      i;\r\n\r\n  for (i = 0; i < sURLVariables.length; i++) {\r\n      sParameterName = sURLVariables[i].split('=');\r\n\r\n      if (sParameterName[0] === sParam) {\r\n          return sParameterName[1] === undefined ? '' : decodeURIComponent(sParameterName[1]);\r\n      }\r\n  }\r\n  return '';\r\n};\r\n\r\n\r\nfunction visibiltyBasedOnCode(showIfCodeExists:boolean):CSSProperties\r\n{\r\n  if ((getUrlParameter('code').length>0)===showIfCodeExists)\r\n  {\r\n    return {visibility: 'visible'};\r\n  }\r\n  return{visibility: 'collapse', display:'none'};\r\n  }\r\n\r\n\r\nexport class ConnectionStatus extends React.Component<{}, {value: string}> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value : ''};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({value :e.target.value.toLowerCase()}) ;\r\n    }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    window.location.search=\"?code=\" + this.state.value;\r\n  }\r\n  handleCancel(e) {\r\n    e.preventDefault();\r\n    this.setState({value :''}) ;\r\n    window.location.search=\"\";\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fullscreen\">\r\n        <div className=\"app-icon\">\r\n          <Logo className=\"logo\" />\r\n        </div>\r\n      <div style={visibiltyBasedOnCode(true)}>Trying to connect...\r\n      <br></br><div style={{ backgroundColor: '#191919',\r\n    display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center', \r\n    margin: '10px'}}><button style = {{backgroundColor: '#191919',\r\n    border: 'solid 1px #141414',\r\n    color: '#FFF'}} onClick={this.handleCancel}>Cancel</button></div>\r\n      </div>\r\n      <div style={visibiltyBasedOnCode(false)}>        \r\n        <form onSubmit={this.handleSubmit} >\r\n        <input type=\"text\" \r\n        placeholder=\"Access Code\" style=\r\n        {{textAlign: 'center'}}\r\n         onChange={this.handleChange} value={this.state.value}/>\r\n         <input type=\"submit\"/>\r\n      </form></div> \r\n\r\n     </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ColorProperty, VectorProperty, PropertyType, WidgetTypes } from 'src/shared';\r\nimport { ValueInput, SliderWheel } from '.';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { WidgetUtilities } from 'src/utilities';\r\n\r\n\r\nenum SliderType {\r\n  R  = 'R',\r\n  G  = 'G',\r\n  B  = 'B',\r\n};\r\n\r\nexport type ColorPickerValue = ColorProperty | VectorProperty;\r\n\r\nexport enum ColorPickerParts {\r\n  Circle     = 'CIRCLE',\r\n  Wheel      = 'WHEEL',\r\n  Value      = 'VALUE',\r\n  Saturation = 'SATURATION',\r\n  Alpha      = 'ALPHA',\r\n  Inputs     = 'INPUTS',\r\n}\r\n\r\nexport enum ColorMode {\r\n  Rgb = 'RGB',\r\n  Hsv = 'HSV',\r\n}\r\n\r\ntype Props = {\r\n  value?: ColorPickerValue;\r\n  type?: PropertyType;\r\n  mode?: ColorMode;\r\n  label?: React.ReactNode;\r\n  parts?: ColorPickerParts[];\r\n  widget?: string;\r\n  alpha?: boolean;\r\n\r\n  onChange?: (value?: ColorPickerValue) => void;\r\n  onPrecisionModal?: () => void;\r\n}\r\n\r\ntype State = {\r\n  color: ColorPickerValue;\r\n  v: number;\r\n  max: number;\r\n}\r\n\r\nexport class ColorPicker extends React.Component<Props, State> {\r\n\r\n  static defaultProps: Props = {\r\n    parts: [\r\n      ColorPickerParts.Circle,\r\n      ColorPickerParts.Wheel,\r\n      ColorPickerParts.Saturation,\r\n      ColorPickerParts.Value,\r\n      ColorPickerParts.Alpha,\r\n      ColorPickerParts.Inputs\r\n    ],\r\n    widget: WidgetTypes.ColorPicker,\r\n    mode: ColorMode.Rgb,\r\n  };\r\n\r\n  state: State = {\r\n    color: null,\r\n    v: 1,\r\n    max: 1,\r\n  }\r\n\r\n  circleRef = React.createRef<HTMLDivElement>();\r\n  rectangleRef = React.createRef<HTMLDivElement>();\r\n  color: ColorPickerValue = null;\r\n  monitoring: boolean = false;\r\n\r\n  componentDidMount() {\r\n    this.updateValues();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { value, type } = this.props;\r\n\r\n    if (prevProps.value !== value || type !== prevProps.type)\r\n      this.updateValues();\r\n  }\r\n\r\n  updateValues = () => {\r\n    const { type, alpha } = this.props;\r\n    let { max, v } = this.state;\r\n\r\n    const color = this.getValue() as ColorProperty;\r\n    const a = color?.A;\r\n    delete color?.A;\r\n\r\n    if (alpha)\r\n      color.A = a ?? 1;\r\n\r\n    let rgb = color;\r\n    if (type === PropertyType.Vector4 || type === PropertyType.LinearColor) {\r\n      max = 1;\r\n\r\n      for (const key in color)\r\n        if (color[key] > max)\r\n          max = color[key];\r\n\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n    }\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    v = hsv.v || 0.001;\r\n\r\n    this.setState({ color, max, v });\r\n  }\r\n\r\n  normalize = (angle: number): number => {\r\n    while (angle < 0) \r\n      angle += 360;\r\n\r\n    while (angle > 360)\r\n      angle -= 360;\r\n\r\n    return angle;\r\n  }\r\n\r\n  getValue = (): ColorPickerValue => {\r\n    const { value, type } = this.props;\r\n\r\n    if (value)\r\n      return value;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        return { X: 1, Y: 1, Z: 1 };\r\n\r\n      case PropertyType.Color:\r\n      case PropertyType.LinearColor:\r\n        return { R: 1, G: 1, B: 1 };\r\n    }\r\n  }\r\n\r\n  onSetColor = (color: ColorPickerValue) => {\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onPointerRgbDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = true;\r\n    this.circleRef.current.setPointerCapture(e.pointerId);\r\n\r\n    this.onPointerRgbMove(e);\r\n  }\r\n\r\n  onPointerHsvDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = true;\r\n    this.rectangleRef.current.setPointerCapture(e.pointerId);\r\n\r\n    this.onPointerHsvMove(e);\r\n  }\r\n\r\n  onPointerRgbMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const { type, alpha } = this.props;\r\n    const { v, max } = this.state;\r\n    const rect = this.circleRef.current.getBoundingClientRect();\r\n\r\n    const xCenter = (rect.right - rect.left) / 2 + rect.left;\r\n    const yCenter = (rect.bottom - rect.top) / 2 + rect.top;\r\n\r\n    const x = e.clientX - xCenter;\r\n    const y = e.clientY - yCenter;\r\n\r\n    const radius = Math.sqrt(x * x + y * y);\r\n    const maxRadius = this.circleRef.current.clientHeight / 2;    \r\n\r\n    const radians = Math.atan2(x, y);\r\n    const h = this.normalize(-1 * radians * (180 / Math.PI) - 90) / 360;\r\n\r\n    let s = Math.min(radius / maxRadius, 1);\r\n    if (s < 0.02)\r\n      s = 0;\r\n\r\n    const value = { h, s, v };\r\n    const rgb = WidgetUtilities.hsv2rgb(value);\r\n\r\n    if (alpha) {\r\n      const color = this.state.color as ColorProperty;\r\n      rgb.A = color.A;\r\n    }\r\n\r\n    let colorValue: ColorPickerValue = null;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        colorValue = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        colorValue = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n\r\n      case PropertyType.Color:\r\n        colorValue = rgb;\r\n        break;\r\n    }\r\n\r\n    this.setState({ color: colorValue });\r\n    this.onSetColor(colorValue);\r\n  }\r\n\r\n  onPointerHsvMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    let { color, max } = this.state;\r\n    const { type } = this.props;\r\n    const rect = this.rectangleRef.current.getBoundingClientRect();\r\n\r\n    const x = Math.max(0, Math.min(rect.width, e.clientX - rect.left));\r\n    const y = Math.max(0, Math.min(rect.height, e.clientY - rect.top));\r\n\r\n    const s = x / rect.width;\r\n    const v = Math.max(0.01, (rect.height - y) / rect.height);\r\n\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    hsv.s = Math.max(s, 0.0001);\r\n    hsv.v = v;\r\n\r\n    rgb = WidgetUtilities.hsv2rgb(hsv);\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n\r\n      case PropertyType.Color:\r\n        color = rgb;\r\n        break;\r\n    }\r\n\r\n    this.setState({ color });\r\n    this.onSetColor(color);\r\n  }\r\n\r\n  onPointerHsvUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.rectangleRef.current.releasePointerCapture(e.pointerId);\r\n    this.monitoring = false;\r\n  }\r\n\r\n  onPointerRgbUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.circleRef.current.releasePointerCapture(e.pointerId);\r\n    this.monitoring = false;\r\n  }\r\n\r\n  onValueInputChange = (key: string, value: number) => {\r\n    const { color } = this.state;\r\n    if (!color)\r\n      return;\r\n\r\n    color[key] = value;\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onValueSliderChange = (property: 's' | 'v' | 'a', value: number) => {\r\n    let { color, v, max } = this.state;\r\n    const { type } = this.props;\r\n\r\n    let rgb = color as ColorProperty;\r\n    if (property === 'v')\r\n      v = value;\r\n\r\n    if (property === 's')\r\n      value = Math.max(value, 0.01);\r\n\r\n    if (property === 'a' && type === PropertyType.Color)\r\n      value *= 255;\r\n\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    hsv[property] = value;\r\n    hsv.v = Math.max(v, 0.00001);\r\n\r\n    rgb = WidgetUtilities.hsv2rgb(hsv);\r\n    color = rgb;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(color, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(color, max, false);\r\n        break;\r\n    }\r\n\r\n    this.setState({ color, v });\r\n    this.onSetColor(color);\r\n  }\r\n\r\n  onHsvWheelMove = (sign: number) => {\r\n    let { color, max } = this.state;\r\n    const { type } = this.props;\r\n    let step = sign * 0.001;\r\n\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    if (hsv.h + step < 0)\r\n      step += 1;\r\n\r\n    hsv.h = hsv.h + step;\r\n\r\n    rgb = WidgetUtilities.hsv2rgb(hsv);\r\n    color = rgb;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(color, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(color, max, false);\r\n        break;\r\n    }\r\n\r\n    this.setState({ color });\r\n    this.onSetColor(color);    \r\n  }\r\n\r\n  getPreviewColorStyles = (): React.CSSProperties => {\r\n    const { color, max } = this.state;\r\n    const { type } = this.props;\r\n\r\n    let rgb = { ...color } as ColorProperty;\r\n\r\n    if (type === PropertyType.LinearColor || type ===  PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    if (rgb?.A && type === PropertyType.Color)\r\n      rgb.A /= 255;\r\n\r\n    return { background: `rgba(${rgb?.R}, ${rgb?.G}, ${rgb?.B}, ${rgb?.A ?? 1})` };\r\n  }\r\n\r\n  getPointerPosition = (): { circleX: number, circleY: number, rectangleX: number, rectangleY: number } => {\r\n    const { color, max } = this.state;\r\n    const { type } = this.props;\r\n\r\n    let rgb: ColorProperty = null;\r\n\r\n    switch (type) {\r\n      case PropertyType.LinearColor:\r\n      case PropertyType.Vector4:\r\n        rgb = WidgetUtilities.colorToRgb(color, max);\r\n        break;\r\n\r\n      case PropertyType.Color:\r\n        rgb = color as ColorProperty;\r\n        break;\r\n    }\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    const radian = (hsv.h - 0.25) * Math.PI * 2;\r\n\r\n    const circleX = Math.sin(radian) * Math.max(0, Math.min(hsv.s, 1)) * 90;\r\n    const circleY = -Math.cos(radian) * Math.max(0, Math.min(hsv.s, 1)) * 90;\r\n\r\n    const rectangleX = Math.max(0, Math.min(hsv.s, 1)) * (210 - 19);\r\n    const rectangleY = (1 - Math.max(0, hsv.v)) * (220 - 19);\r\n\r\n    return { circleX, circleY, rectangleX, rectangleY };\r\n  }\r\n\r\n  getVisibleParts = () => {\r\n    const { parts, widget } = this.props;\r\n    const visible = {} as Record<ColorPickerParts, boolean>;\r\n\r\n    parts.map(part => visible[part] = true);\r\n\r\n    if (widget === WidgetTypes.MiniColorPicker) {\r\n      visible[ColorPickerParts.Circle] = false;\r\n      visible[ColorPickerParts.Saturation] = false;\r\n      visible[ColorPickerParts.Value] = false;\r\n    }\r\n\r\n    return visible;\r\n  }\r\n\r\n  renderRgbInput = (slider: SliderType) => {\r\n    const { color } = this.state;\r\n    const { type } = this.props;\r\n\r\n    let min, max, precision = 3;\r\n    let key: string = slider;\r\n\r\n    switch (type) {\r\n      case PropertyType.Color:\r\n        precision = 0;\r\n        min = 0;\r\n        max = 255;\r\n        break;\r\n\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector4:\r\n        switch (slider) {\r\n          case SliderType.R:\r\n            key = 'X';\r\n            break;\r\n\r\n          case SliderType.G:\r\n            key = 'Y';\r\n            break;\r\n\r\n          case SliderType.B:\r\n            key = 'Z';\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n\r\n    let className = 'input ';\r\n    let value = 0;\r\n    if (color)\r\n      value = color[key];\r\n\r\n    switch (slider) {\r\n      case SliderType.R:\r\n        className += 'red ';\r\n        break;\r\n\r\n      case SliderType.G:\r\n        className += 'green ';\r\n        break;\r\n\r\n      case SliderType.B:\r\n        className += 'blue ';\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className={className}>\r\n        <ValueInput draggable={false}\r\n                    min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    value={value}\r\n                    onChange={this.onValueInputChange.bind(this, key)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  rendeCircleRectangle = () => {\r\n    const { mode, type } = this.props;\r\n    const { color, max } = this.state;\r\n    const pos = this.getPointerPosition();\r\n    const style: React.CSSProperties = { transform: `translate(${pos.circleX}px, ${pos.circleY}px)` };    \r\n\r\n    if (mode === ColorMode.Rgb)\r\n      return (\r\n        <div className=\"circle\">\r\n          <div className=\"circle-gradient\">\r\n            <div className=\"canvas-area\"\r\n                 ref={this.circleRef}\r\n                 onPointerMove={this.onPointerRgbMove}\r\n                 onPointerDown={this.onPointerRgbDown}\r\n                 onPointerUp={this.onPointerRgbUp}>\r\n              <div className=\"canvas-area-pointer\" style={style} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    let rgb = { ...color } as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n        \r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    rgb = WidgetUtilities.hsv2rgb({ h: hsv.h, s: 1, v: 1, a: hsv?.a });\r\n\r\n    if (rgb?.A && type === PropertyType.Color)\r\n      rgb.A /= 255;      \r\n\r\n    const rectangleStyle: React.CSSProperties = { backgroundColor: `rgba(${rgb.R}, ${rgb.G}, ${rgb.B}, ${rgb?.A ?? 1})`, width: '210px', height: '220px' };\r\n    const rectanglePointerStyle: React.CSSProperties = { transform: `translate(${pos.rectangleX}px, ${pos.rectangleY}px)` };    \r\n\r\n    return (\r\n      <div className=\"rectangle\"\r\n           ref={this.rectangleRef}\r\n           style={rectangleStyle}\r\n           onPointerMove={this.onPointerHsvMove}\r\n           onPointerDown={this.onPointerHsvDown}\r\n           onPointerUp={this.onPointerHsvUp}>\r\n        <div className=\"rectangle-area-pointer\" style={rectanglePointerStyle} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { label, type, widget, value, alpha } = this.props;\r\n    const { color, max } = this.state;\r\n\r\n    const visible = this.getVisibleParts();\r\n\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    let a = hsv?.a ?? 0;\r\n\r\n    if (type === PropertyType.Color)\r\n      a /= 255;\r\n\r\n    return (\r\n      <div className=\"color-picker-container\">\r\n        {!!this.props?.onPrecisionModal && <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={this.props.onPrecisionModal} />}\r\n        <div className=\"color-picker-wheel\">\r\n          <div>{label}</div>\r\n          {!!visible[ColorPickerParts.Circle] && this.rendeCircleRectangle()}\r\n          {!!visible[ColorPickerParts.Wheel] && (\r\n            <div className=\"slider-wheel-container\">\r\n              {widget === WidgetTypes.ColorPicker && (\r\n                <div className=\"slider-wheel-top\">\r\n                  <span className=\"title\">Hue</span>\r\n                  <span className=\"value\">{(hsv.h * 360).toFixed(1)}°</span>\r\n                </div>\r\n              )}\r\n              <SliderWheel onWheelMove={this.onHsvWheelMove} />\r\n            </div>\r\n          )}\r\n          {!!visible[ColorPickerParts.Saturation] && (\r\n            <ColorPickerSlider value={hsv.s}\r\n                               label=\"Saturation\"\r\n                               onChange={this.onValueSliderChange.bind(this, 's')} />\r\n          )}\r\n          {!!visible[ColorPickerParts.Value] && (\r\n            <ColorPickerSlider value={hsv.v}\r\n                               label=\"Value\"\r\n                               onChange={this.onValueSliderChange.bind(this, 'v')} />\r\n          )}\r\n          {!!alpha && !!visible[ColorPickerParts.Alpha] && (\r\n            <ColorPickerSlider value={a}\r\n                               label=\"Alpha\"\r\n                               onChange={this.onValueSliderChange.bind(this, 'a')} />\r\n          )}\r\n          <div className=\"color-picker-inputs\">\r\n            {!!visible[ColorPickerParts.Inputs] && (\r\n              <>\r\n                {this.renderRgbInput(SliderType.R)}\r\n                {this.renderRgbInput(SliderType.G)}\r\n                {this.renderRgbInput(SliderType.B)}\r\n              </>\r\n            )}\r\n            {widget === WidgetTypes.ColorPicker && !!value && <div className=\"color\" style={this.getPreviewColorStyles()} />}\r\n          </div>\r\n        </div>\r\n        <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\ntype ColorPickerSliderProps = {\r\n  label: string;\r\n  value: number;\r\n\r\n  onChange: (value: number) => void;\r\n}\r\n\r\ntype ColorPickerSliderState = {\r\n  x: number;\r\n}\r\n\r\nconst SliderWidth = 200;\r\n\r\nclass ColorPickerSlider extends React.Component<ColorPickerSliderProps, ColorPickerSliderState> {\r\n\r\n  state: ColorPickerSliderState = {\r\n    x: null,\r\n  }\r\n\r\n  monitoring = false;\r\n  dragValue: number = null;\r\n  dragOffset: number = null;\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  pointer = React.createRef<HTMLDivElement>();\r\n\r\n  componentDidUpdate(prevProps: ColorPickerSliderProps, prevState: ColorPickerSliderState) {\r\n    const { value } = this.props;\r\n\r\n    if (!isNaN(value) && prevProps.value !== value)\r\n      this.updateValues();\r\n  }\r\n\r\n  updateValues = () => {\r\n    const { value } = this.props;\r\n    const x = Math.min(SliderWidth - 4, Math.max(0, (SliderWidth - 4) * value));\r\n\r\n    this.setState({ x });\r\n  }\r\n\r\n  onPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.ref.current)\r\n      return;\r\n\r\n    const pointer = this.pointer.current.getBoundingClientRect();\r\n\r\n    this.dragOffset = 0;\r\n    this.dragValue = this.props.value;\r\n\r\n    if (pointer.left <= e.clientX && e.clientX <= pointer.right)\r\n      this.dragOffset = e.clientX - (pointer.left + (pointer.width / 2));\r\n\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.onPointerMove(e);\r\n  }\r\n\r\n  onPointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const slider = this.ref.current;\r\n    const rect = slider.getBoundingClientRect();\r\n\r\n    const x = e.clientX - this.dragOffset;\r\n    const value = Math.max(0, Math.min((x - rect.left) / rect.width, 1));\r\n\r\n    if (Math.abs(this.dragValue - value) > 0.001) {\r\n      this.dragValue = value;\r\n\r\n      this.setState({ x: Math.max(0, (x - rect.left) - 4) });\r\n      this.props.onChange(value);\r\n    }\r\n  }\r\n\r\n  onPointerLostCapture = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.dragOffset = 0;\r\n    this.dragValue = null;\r\n    this.monitoring = false;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  getPercentage = () => {\r\n    const { x } = this.state;\r\n    return Math.max(0, Math.round((100 * x) / (SliderWidth - 4)));\r\n  }\r\n\r\n  render() {\r\n    const { label } = this.props;\r\n    const { x } = this.state;\r\n\r\n    return (\r\n      <div className=\"color-picker-slider\"\r\n           ref={this.ref}\r\n           style={{ width: SliderWidth }}\r\n           onPointerMove={this.onPointerMove}\r\n           onPointerDown={this.onPointerDown}\r\n           onPointerUp={this.onPointerLostCapture}>\r\n        <div className=\"color-picker-slider-label\">{label}</div>\r\n        <div className=\"color-picker-slider-pointer\" style={{ transform: `translateX(${x}px)` }} ref={this.pointer} />\r\n        <div className=\"color-picker-slider-bgc\" />\r\n        <div className=\"color-picker-slider-value\">{this.getPercentage()}%</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n  label?: React.ReactNode;\r\n  onExecute?: () => void;\r\n};\r\n\r\nexport class Button extends React.Component<Props> {\r\n\r\n  onClick = () => {\r\n    this.props.onExecute?.();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"widget-button-wrapper\">\r\n        <button className=\"widget-button\" onClick={this.onClick}>\r\n          {this.props.label || 'Button'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { ColorProperty, IPreset, PropertyType, VectorProperty, WidgetType, WidgetTypes, IHsvColor } from \"src/shared\";\r\n\r\n\r\ntype Range = {\r\n  min?: number;\r\n  max?: number;\r\n}\r\n\r\nexport type WidgetProperties<TPropertyValue = any> = {\r\n  stack?: boolean;\r\n  type?: PropertyType;\r\n  value?: TPropertyValue;\r\n  onChange?: (value: TPropertyValue) => void;\r\n};\r\n\r\ntype CustomWidget = {\r\n  type: string;\r\n  render: (props: any) => React.ReactNode;\r\n};\r\n\r\nexport class WidgetUtilities {\r\n\r\n  static propertyWidgets: Record<string, CustomWidget[]> = {};\r\n  static customWidgets: Record<string, CustomWidget> = {};\r\n  \r\n  static getPropertyLimits(type: PropertyType): Range {\r\n    switch (type) {\r\n      case PropertyType.Int8:\r\n        return { min: -128, max: 127 };\r\n\r\n      case PropertyType.Int16:\r\n        return { min: -32768, max: 32767 };\r\n\r\n      case PropertyType.Int32:\r\n        return { min: -2147483648, max: 2147483647 };\r\n\r\n      case PropertyType.Uint16:\r\n        return { min: 0, max: 65535 };\r\n\r\n      case PropertyType.Uint32:\r\n        return { min: 0, max: 4294967295 };\r\n\r\n      case PropertyType.Float:\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector2D:\r\n      case PropertyType.Vector4:\r\n      case PropertyType.LinearColor:\r\n        return { min: -1.17549e+38, max: 3.402823466E+38 };\r\n\r\n      case PropertyType.Rotator:\r\n        return { min: 0, max: 360\t};\r\n\r\n      case PropertyType.Double:\r\n        return { min: Number.MIN_VALUE, max: Number.MAX_VALUE };\r\n\r\n      case PropertyType.Color:\r\n        return { min: 0, max: 255 };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  static parseNumber(value: string): number {\r\n    const number = parseFloat(value);\r\n    if (!isNaN(number))\r\n      return number;\r\n  }\r\n\r\n  static getMinMax(preset: IPreset, exposed: string): Range {\r\n    const property = preset.Exposed[exposed];\r\n\r\n    return {\r\n      min: WidgetUtilities.parseNumber(property?.Metadata?.Min),\r\n      max: WidgetUtilities.parseNumber(property?.Metadata?.Max),\r\n    };\r\n  }\r\n\r\n  static registerWidget(type: string, properties: PropertyType[], render: (props: WidgetProperties) => React.ReactNode): void {\r\n    const custom: CustomWidget = { type, render };\r\n    WidgetUtilities.customWidgets[type] = custom;\r\n    \r\n    for (const property of properties) {\r\n      if (!WidgetUtilities.propertyWidgets[property])\r\n        WidgetUtilities.propertyWidgets[property] = [];\r\n\r\n      WidgetUtilities.propertyWidgets[property].push(custom);\r\n    }\r\n  }\r\n\r\n  static getPropertyPrecision(propertyType: PropertyType) {\r\n    switch (propertyType) {\r\n      case PropertyType.Float:\r\n      case PropertyType.Double:\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector2D:\r\n      case PropertyType.Vector4:\r\n      case PropertyType.LinearColor:\r\n        return 3;\r\n\r\n      case PropertyType.Rotator:\r\n        return 2;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  static getPropertyKeys(propertyType: PropertyType) {\r\n    switch (propertyType) {\r\n      case PropertyType.Rotator:\r\n        return ['Roll', 'Pitch', 'Yaw'];\r\n\r\n      case PropertyType.Vector:\r\n        return ['X', 'Y', 'Z'];\r\n\r\n      case PropertyType.Vector2D:\r\n        return ['X', 'Y'];\r\n\r\n      case PropertyType.Vector4:\r\n        return ['X', 'Y', 'Z', 'W'];\r\n\r\n      case PropertyType.Color:\r\n      case PropertyType.LinearColor:\r\n        return ['R', 'G', 'B'];\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  static getCompatibleWidgets(propertyType: PropertyType): WidgetType[] {\r\n    switch (propertyType) {\r\n      case PropertyType.Int16:\r\n      case PropertyType.Int32:\r\n      case PropertyType.Int64:\r\n      case PropertyType.Uint16:\r\n      case PropertyType.Uint32:\r\n      case PropertyType.Uint64:\r\n      case PropertyType.Float:\r\n      case PropertyType.Double:\r\n        return [WidgetTypes.Slider, WidgetTypes.Dial,\r\n          //IB: Custom Widgets Start\r\n           WidgetTypes.CustomWidget\r\n          ];\r\n      //case PropertyType.String:\r\n      //  return [WidgetTypes.AgoraButton];  \r\n      //IB: Custom Widgets End\r\n\r\n      case PropertyType.Boolean:\r\n      case PropertyType.Uint8:\r\n        return [WidgetTypes.Toggle];\r\n\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector2D:\r\n        return [WidgetTypes.Vector, WidgetTypes.Joystick, WidgetTypes.Sliders, WidgetTypes.Dials];\r\n\r\n      case PropertyType.Vector4:\r\n      case PropertyType.LinearColor:\r\n      case PropertyType.Color:\r\n        return [WidgetTypes.ColorPicker, WidgetTypes.MiniColorPicker];\r\n\r\n      case PropertyType.Rotator:\r\n        return [WidgetTypes.Vector, WidgetTypes.Sliders, WidgetTypes.Dials];\r\n    }\r\n\r\n    if (propertyType && (propertyType.startsWith('TEnum') || propertyType.startsWith('E')))\r\n      return [WidgetTypes.Dropdown];\r\n\r\n    return [];\r\n  }\r\n\r\n  static colorToRgb(color: ColorProperty | VectorProperty, max: number) {\r\n    const rgb = color as ColorProperty;\r\n    const vector = color as VectorProperty;\r\n\r\n    max = max || 1;\r\n    const rgbColor = {\r\n      R: (vector?.X ?? rgb?.R) * 255 / max,\r\n      G: (vector?.Y ?? rgb?.G) * 255 / max,\r\n      B: (vector?.Z ?? rgb?.B) * 255 / max,\r\n    } as ColorProperty;\r\n\r\n    if (rgb?.A)\r\n      rgbColor.A = rgb.A;\r\n\r\n    return rgbColor;\r\n  }\r\n\r\n  static rgbToColor = (rgb: ColorProperty, max: number, vector = true): ColorProperty | VectorProperty => {\r\n    const a = rgb.R / 255 * max;\r\n    const b = rgb.G / 255 * max;\r\n    const c = rgb.B / 255 * max;\r\n\r\n    if (vector)\r\n      return { X: a, Y: b, Z: c };\r\n\r\n    const color = { R: a, G: b, B: c } as ColorProperty;\r\n    if (rgb.A)\r\n      color.A = rgb.A;\r\n\r\n    return color;\r\n  }\r\n\r\n  static rgb2Hsv(color: ColorProperty): IHsvColor {\r\n    const r = color?.R / 255 ?? 1;\r\n    const g = color?.G / 255 ?? 1;\r\n    const b = color?.B / 255 ?? 1;\r\n\r\n    const min = Math.min(r, g, b);\r\n    const max = Math.max(r, g, b);\r\n\r\n    let h = 0, s = 0, v = max;\r\n    let d = max - min;\r\n    s = max === 0 ? 0 : d / max;\r\n\r\n    if (max !== min) {\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n\r\n      h /= 6;\r\n    }\r\n\r\n    const hsvColor = { h, s, v } as IHsvColor;\r\n    if (color?.A)\r\n      hsvColor.a = color.A;\r\n\r\n    return hsvColor;\r\n  }\r\n\r\n  static hsv2rgb({ h, s, v, a }: IHsvColor): ColorProperty {\r\n    let r: number, g: number, b: number;\r\n\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    if (i % 6 === 0)\r\n      ([r, g, b] = [v, t, p]);\r\n\r\n    if (i % 6 === 1)\r\n      ([r, g, b] = [q, v, p]);\r\n\r\n    if (i % 6 === 2)\r\n      ([r, g, b] = [p, v, t]);\r\n\r\n    if (i % 6 === 3)\r\n      ([r, g, b] = [p, q, v]);\r\n\r\n    if (i % 6 === 4)\r\n      ([r, g, b] = [t, p, v]);\r\n\r\n    if (i % 6 === 5)\r\n      ([r, g, b] = [v, p, q]);\r\n\r\n    const color = { R: r * 255, G: g * 255, B: b * 255 } as ColorProperty;\r\n    if (a)\r\n      color.A = a;\r\n\r\n    return color;\r\n  }\r\n}","import React from 'react';\r\nimport { ValueInput } from '.';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nexport enum DialMode {\r\n  Range     = 'RANGE',\r\n  Endless   = 'ENDLESS',\r\n  Rotation  = 'ROTATION',\r\n}\r\n\r\ntype Props = {\r\n  min?: number;\r\n  max?: number;\r\n  startAngle?: number;\r\n  endAngle?: number;\r\n  value?: number;\r\n  largeLines?: number;\r\n  shortLines?: number;\r\n  display?: 'VALUE' | 'PERCENT';\r\n  mode?: DialMode;\r\n  size?: number;\r\n  label?: React.ReactNode;\r\n  hideReset?: boolean;\r\n  hidePrecision?: boolean;\r\n\r\n  onChange?: (value?: number) => void;\r\n  onPrecisionModal?: () => void;\r\n};\r\n\r\nexport class Dial extends React.Component<Props> {\r\n  static defaultProps: Props = {\r\n    startAngle: 50,\r\n    endAngle: 310,\r\n    largeLines: 11,\r\n    shortLines: 5,\r\n    display: 'VALUE',\r\n    mode: DialMode.Range,\r\n    size: 202,\r\n  };\r\n\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  monitoring: boolean = false;\r\n  beautify = new Intl.NumberFormat();\r\n  svgCircleDegreeLength: number = 477.5;\r\n\r\n  onDown = (e: React.PointerEvent<HTMLDivElement>): void => {\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.onMove(e);\r\n  }\r\n\r\n  onUp = (e: React.PointerEvent<HTMLDivElement>): void => {\r\n    this.monitoring = false;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  onMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring) \r\n      return;\r\n\r\n    const rect = this.ref.current.getBoundingClientRect();\r\n    const xCenter = (rect.right - rect.left) / 2 + rect.left;\r\n    const yCenter = (rect.bottom - rect.top) / 2 + rect.top;\r\n    const radians = Math.atan2(e.clientX - xCenter, e.clientY - yCenter);\r\n    \r\n    let angle = -1 * radians * (180 / Math.PI);\r\n    if (this.props.mode !== DialMode.Range)\r\n      angle += 180;\r\n\r\n    const { min, max, mode } = this.props;\r\n\r\n    angle = this.normalize(angle);\r\n    let value = this.getValueFromAngle(angle);\r\n\r\n    if (mode === DialMode.Rotation) {\r\n      value = this.normalize(value, -180, 180);\r\n    } else {\r\n      if (min !== undefined)\r\n        value = Math.max(min, value);\r\n\r\n      if (max !== undefined)\r\n        value = Math.min(value, max);\r\n    }\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onValueInputChange = (value: number) => {\r\n    const { mode } = this.props;\r\n\r\n    if (mode === DialMode.Rotation)\r\n      value = this.normalize(value, -180, 180);\r\n\r\n    return this.props.onChange(value);\r\n  }\r\n\r\n  renderSmallLines = (linesList: JSX.Element[], angle: number, largeLineStep: number, tickAngle: number) => {\r\n    const { shortLines, mode } = this.props;\r\n    const rangeAngle = mode === DialMode.Range ? 180 : 0;\r\n    const isActive = (mode !== DialMode.Range);\r\n\r\n    for (let i = 1; i <= shortLines; i++) {\r\n      const shortTickAngle = this.normalize(tickAngle + (largeLineStep / (shortLines + 1)) * i - 180);\r\n      const active = angle >= this.normalize(shortTickAngle + rangeAngle) || isActive;\r\n      const className = `dial-tick short ${active && 'active'}`;\r\n      linesList.push(\r\n        <div key={shortTickAngle} className={className} style={{ transform: `rotate(${shortTickAngle}deg)` }}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLines = (angle: number) => {\r\n    let { startAngle, endAngle, largeLines, mode } = this.props;\r\n    let endlessAngle = 0;\r\n    const isActive = (mode !== DialMode.Range);\r\n\r\n    if (isActive) {\r\n      startAngle = 0;\r\n      endAngle = 360;\r\n      endlessAngle = 180;\r\n    }\r\n\r\n    angle = this.normalize(angle - endlessAngle);\r\n    const largeLineStep = (endAngle - startAngle) / (largeLines - 1);\r\n    if (largeLines < 1)\r\n      return null;\r\n\r\n    const linesList = [];\r\n    for (let i = 0; i < largeLines; i++) {\r\n      const tickAngle = this.normalize(i * largeLineStep + startAngle);\r\n      const active = angle >= tickAngle || isActive;\r\n      const className = `dial-tick large ${active && 'active'}`;\r\n      linesList.push(\r\n        <div key={tickAngle} \r\n              className={className}\r\n              style={{ transform: `rotate(${tickAngle - 180 - endlessAngle}deg)` }} />\r\n      );\r\n\r\n      if (i + 1 < largeLines)\r\n        this.renderSmallLines(linesList, angle, largeLineStep, tickAngle);\r\n    }\r\n\r\n    return linesList;\r\n  }\r\n\r\n  normalize = (angle: number, begin: number = 0, end: number = 360): number => {\r\n    const range = end - begin;\r\n    while (angle < begin) \r\n      angle += range;\r\n\r\n    while (angle > end)\r\n      angle -= range;\r\n\r\n    return angle;\r\n  }\r\n\r\n  getValue = () => {\r\n    const { min, max } = this.props;\r\n    let { value = 0 } = this.props;\r\n\r\n    if (!isNaN(min))\r\n      value = Math.max(min, value);\r\n\r\n    if (!isNaN(max))\r\n      value = Math.min(max, value);\r\n      \r\n    return value;\r\n  }\r\n\r\n  getValueFromAngle = (angle: number) => {\r\n    const { min, startAngle, endAngle, mode } = this.props;\r\n    const range = this.getRange();\r\n\r\n    switch (mode) {\r\n      case DialMode.Range:\r\n        angle = Math.max(startAngle, Math.min(angle, endAngle));\r\n        const ratio = (angle - startAngle) / (endAngle - startAngle);\r\n        return min + ratio * range;\r\n\r\n      case DialMode.Endless:\r\n      case DialMode.Rotation:\r\n        let value = this.getValue();\r\n        const prevAngle = this.normalize(this.getAngle(value) - 180);\r\n        const phi = this.normalize(angle - prevAngle);\r\n        const delta = phi > 180 ? phi - 360 : phi;\r\n        const step = range >= 360 ? 1 : range / 1080;\r\n        value += delta * step;\r\n        if (mode === DialMode.Rotation)\r\n          value = this.normalize(value);\r\n        return value;\r\n    }\r\n  }\r\n\r\n  getRange = () => {\r\n    const { min, max } = this.props;\r\n    if (min === undefined || max === undefined)\r\n      return 1000;\r\n\r\n    return Math.max(max - min, 0.01);\r\n  }\r\n  \r\n  getAngle = (value: number) => {\r\n    const { mode, min = 0, startAngle, endAngle } = this.props;\r\n    const range = this.getRange();\r\n\r\n    let angle = 0;\r\n    switch (mode) {\r\n      case DialMode.Range:\r\n        const ratio = (value - min) / range;\r\n        angle = startAngle + ratio * (endAngle - startAngle);\r\n        break;\r\n\r\n      case DialMode.Endless:\r\n      case DialMode.Rotation:\r\n        const step = range >= 360 ? 1 : range / 1080;\r\n        angle = 180 + (value / step) % 360;\r\n        break;\r\n    }\r\n\r\n    return this.normalize(angle);\r\n  }\r\n\r\n  getText = (value: number): string => {\r\n    if (isNaN(value))\r\n      return '';\r\n\r\n    const { min, max, display } = this.props;\r\n    const range = Math.max(0.1, max - min);\r\n    const decimals = Math.max(0, 4 - range.toFixed().length);\r\n    const ratio = (value - min) / range;\r\n    if (display === 'PERCENT')\r\n      return (ratio * 100).toFixed(2);\r\n\r\n    return this.beautify.format(+value?.toFixed(decimals));\r\n  }\r\n\r\n  getCirclePaintOver = (angle: number) => {\r\n    const { startAngle, mode } = this.props;\r\n    \r\n    const calcLength = (a:number) => {\r\n      const angleInProc = a / 3.6;\r\n      return this.svgCircleDegreeLength / 100 * angleInProc;\r\n    };\r\n\r\n    switch (mode) {\r\n      case DialMode.Endless:\r\n      case DialMode.Rotation:\r\n        const angleCalc = angle < 180 ? angle + 180 : angle - 180;\r\n        return this.svgCircleDegreeLength - calcLength(angleCalc);\r\n\r\n      case DialMode.Range: \r\n        return this.svgCircleDegreeLength + calcLength(startAngle) - calcLength(angle);\r\n    }\r\n  }\r\n\r\n  getPaintOverRotate = () => {\r\n    const { startAngle, mode } = this.props;\r\n    return mode === DialMode.Range ? 90 + startAngle : -90;\r\n  }\r\n\r\n  render() {\r\n    const { value = 0, size, min, max, label, mode } = this.props;\r\n    const angle = this.getAngle(value);\r\n    const wrapperStyle: React.CSSProperties = { width: size, height: size };\r\n    const dialInputStyle: React.CSSProperties =  mode === DialMode.Range ? { position: 'absolute', top: '82%' } : {};\r\n\r\n    return ( \r\n      <div className=\"dial-widget-wrapper\">\r\n        {!this.props.hidePrecision &&\r\n          <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={this.props.onPrecisionModal} />\r\n        }\r\n        {label &&\r\n          <div className=\"dial-label\">{label}</div>\r\n        }\r\n        <div className=\"dial-border-first\">\r\n          <div className=\"dial-border-second\">\r\n            <div className=\"dial-wrapper\"\r\n                  ref={this.ref}\r\n                  style={!isNaN(size) ? wrapperStyle : {}}\r\n                  onLostPointerCapture={this.onUp}\r\n                  onPointerDown={this.onDown}\r\n                  onPointerUp={this.onUp}\r\n                  onPointerMove={this.onMove}\r\n                  tabIndex={-1}>\r\n              <div className=\"dial-circle\">\r\n                <Circle angle={angle}\r\n                        size={size}\r\n                        mode={mode}\r\n                        rotate={this.getPaintOverRotate()}\r\n                        circlePaintOver={this.getCirclePaintOver(angle)}\r\n                        svgCircleDegreeLength={this.svgCircleDegreeLength} />\r\n                <div className=\"dial-ticks\">\r\n                  {this.renderLines(angle)}\r\n                </div>\r\n                <div className=\"dial-center-wrapper\">\r\n                  <div className=\"dial-center\">\r\n                    {label &&\r\n                      <div className=\"dial-label\">{label}</div>\r\n                    }\r\n                    <div className=\"dial-value\" style={dialInputStyle} onPointerDown={e => e.stopPropagation()}>\r\n                      <ValueInput min={min} max={max} value={value} onChange={this.onValueInputChange} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"dial-line\" style={{ transform: `rotate(${angle}deg)` }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!this.props.hideReset &&\r\n          <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n        }\r\n      </div>     \r\n    );\r\n  }\r\n}\r\n\r\n\r\ntype CircleProps = {\r\n  angle: number;\r\n  size: number;\r\n  mode: DialMode;\r\n  rotate: number;\r\n  circlePaintOver:  number;\r\n  svgCircleDegreeLength: number;\r\n};\r\n\r\nclass Circle extends React.Component<CircleProps> {\r\n  render() {\r\n    const { angle, size, rotate, circlePaintOver, svgCircleDegreeLength, mode } = this.props;\r\n\r\n    const cxcy = size / 2 - 1;\r\n\r\n    let circleRotateAngle = 0;\r\n    let strokeDashoffset = circlePaintOver;\r\n    if (mode !== DialMode.Range) {\r\n      const angleCalc = angle < 180 ? angle + 180 : angle - 180;\r\n      circleRotateAngle = angleCalc - 90;\r\n      \r\n      const rotatePart = svgCircleDegreeLength / 4 * 3;\r\n      strokeDashoffset = rotatePart;\r\n    }\r\n\r\n    let className = 'svg-circle';\r\n    if (mode === DialMode.Range)\r\n      className += ' range';\r\n\r\n    return (\r\n      <div className=\"svg-circle\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <linearGradient id=\"shape-gradient\" x1=\"0\" x2=\"0\" y1=\"1\" y2=\"0\">\r\n              <stop offset=\"0%\" stopColor=\"rgba(0,103,180,1)\" />\r\n              <stop offset=\"50%\" stopColor=\"rgba(0,103,180,0)\" />\r\n            </linearGradient>\r\n          </defs>\r\n          <circle transform={`rotate(${rotate + circleRotateAngle}, ${cxcy}, ${cxcy})`}\r\n                  cx={cxcy}\r\n                  cy={cxcy}\r\n                  r=\"76\"\r\n                  fill=\"transparent\"\r\n                  strokeWidth=\"45\"\r\n                  strokeDasharray={svgCircleDegreeLength}\r\n                  strokeDashoffset={strokeDashoffset}\r\n                  className={className} />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ColorPicker, ColorPickerValue } from './';\r\nimport { ColorProperty, IColorPickerList, ICustomStackProperty, PropertyType, PropertyValue } from 'src/shared';\r\nimport { DraggableWidget } from '../';\r\nimport _ from 'lodash';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  list: IColorPickerList;\r\n  path: string;\r\n  selection: string;\r\n  isDragDisabled: boolean;\r\n  dragging: string;\r\n\r\n  onSelect?: (selection: string) => void;\r\n  getPropertyValue?: (property: string) => PropertyValue;\r\n  getPropertyLabel?: (widget: ICustomStackProperty) => string | JSX.Element;\r\n  getAlpha?: (property: string) => boolean;\r\n  onChange?: (widget: Partial<ICustomStackProperty>, value: PropertyValue) => void;\r\n  onPrecisionModal?: (widget: ICustomStackProperty) => void;\r\n}\r\n\r\ntype State = {\r\n  selected: ICustomStackProperty;\r\n}\r\n\r\nexport class ColorPickerList extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    selected: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { list } = this.props;\r\n    const item = _.first(list.items);\r\n\r\n    this.setState({ selected: item });\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { dragging, selection, list } = this.props;\r\n    const { selected } = this.state;\r\n\r\n    if (dragging !== prevProps.dragging && !!dragging) {\r\n      const [, parent] = dragging.split('_');\r\n\r\n      if (list.id === parent)\r\n        this.setState({ selected: null });\r\n    }\r\n\r\n    if(list !== prevProps.list) {\r\n      if (!selection) {\r\n        const item = _.find(list.items, ['id', selected.id]) ?? _.first(list.items);\r\n \r\n        return this.setState({ selected: item });\r\n      }\r\n\r\n      const [path, index] = selection.split('_');\r\n\r\n      if (path === this.props.path)\r\n        this.setState({ selected: list.items[index] });\r\n    }\r\n  }\r\n\r\n  onItemSelect = (item: ICustomStackProperty, index: number, e: React.MouseEvent) => {\r\n    const { path } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    this.setState({ selected: item });\r\n    this.props.onSelect(`${path}_${index}_${item.property}`);\r\n  }\r\n\r\n  getMaxColorValue = (type: PropertyType, color: ColorPickerValue) => {\r\n    let max = 1;\r\n\r\n    if (type === PropertyType.Vector4 || type === PropertyType.LinearColor) {\r\n      max = 0;\r\n\r\n      for (const key in color)\r\n        if (color[key] > max)\r\n          max = color[key];\r\n    }\r\n\r\n    return max;\r\n  }\r\n\r\n  getPreviewColorStyles = (color: ColorPickerValue, type: PropertyType, max: number): React.CSSProperties => {\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    return { background: `rgb(${rgb?.R}, ${rgb?.G}, ${rgb?.B})` };\r\n  }\r\n\r\n  render() {\r\n    const { list, selection, path, isDragDisabled } = this.props;\r\n    const { selected } = this.state;\r\n    const value = this.props.getPropertyValue(selected?.property) as ColorPickerValue;\r\n\r\n    return (\r\n      <div className=\"color-pickers-list-container\">\r\n        <ul className=\"colors-list\">\r\n          {list?.items?.map((item, i) => {\r\n            const draggableId = `${item.id}_${list.id}_${item.widget}`;\r\n            const value = this.props.getPropertyValue(item?.property) as ColorPickerValue;\r\n            const max = this.getMaxColorValue(item.propertyType, value);\r\n\r\n            let className = 'list-item ';\r\n\r\n            if (selected?.id === item.id)\r\n              className += 'selected ';\r\n\r\n            return (\r\n              <li className={className} key={i}>\r\n                <DraggableWidget draggableId={draggableId}\r\n                                 key={item.id}\r\n                                 selected={selection === `${path}_${i}_${item.property}`}\r\n                                 index={i}\r\n                                 onSelect={this.onItemSelect.bind(this, item, i)}\r\n                                 isDragDisabled={isDragDisabled}>\r\n                  <div>\r\n                    {!!this.props.onPrecisionModal && \r\n                      <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={() => this.props.onPrecisionModal(item)} />\r\n                    }\r\n                    {this.props.getPropertyLabel(item)}\r\n                  </div>\r\n                  <div className=\"color-preview\" style={this.getPreviewColorStyles(value, item.propertyType, max)} />\r\n                </DraggableWidget>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <ColorPicker value={value} \r\n                     type={selected?.propertyType}\r\n                     widget={selected?.widget}\r\n                     alpha={this.props.getAlpha(selected?.property)}\r\n                     onChange={this.props.onChange.bind(this, selected)}\r\n                     onPrecisionModal={() => this.props.onPrecisionModal(selected)} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Dial, DialMode } from '.';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { JoystickValue, PropertyType } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  min?: number;\r\n  max?: number;\r\n  display?: 'VALUE' | 'PERCENT';\r\n  mode?: DialMode;\r\n  size?: number;\r\n  properties?: string[];\r\n  value?: number | JoystickValue;\r\n  type?: PropertyType;\r\n  hidePrecision?: boolean;\r\n  label?: React.ReactNode;\r\n  onChange?: (res:  number | JoystickValue) => void;\r\n};\r\n\r\nexport class DialsWrapper extends React.Component<Props> {\r\n\r\n  getProperties = (): string[] => {\r\n    const { type, properties } = this.props;\r\n    let keys = WidgetUtilities.getPropertyKeys(type);\r\n\r\n    if (properties?.length)\r\n      keys = keys.filter(key => properties.includes(key));\r\n\r\n    return keys;\r\n  }\r\n\r\n  onChange = (res: number, key?: string) => {\r\n    const { onChange } = this.props;\r\n    let { value } = this.props;\r\n    if (value === undefined) {\r\n      const dials = this.getProperties();\r\n      value = dials.length ? {} : 0;\r\n    }\r\n\r\n    if (key) {\r\n      value[key] = res;\r\n    } else {\r\n      value = res;\r\n    }\r\n\r\n    onChange?.(value);\r\n  }\r\n\r\n  render() {\r\n    const { min, max, mode, value, display, hidePrecision, label } = this.props;\r\n    const { size } = this.props;\r\n    const dials = this.getProperties();\r\n\r\n    let dialSize = 203;\r\n    if (size)\r\n      dialSize = Math.min(size / dials.length, size - 70) - 10;\r\n\r\n    let startAngle, endAngle;\r\n\r\n    const props = {\r\n      mode,\r\n      min,\r\n      max,\r\n      display,\r\n      size: dialSize,\r\n      startAngle,\r\n      endAngle,\r\n      hideReset: true,\r\n      hidePrecision,\r\n    };\r\n\r\n    return (\r\n      <div className=\"dial-wrapper-container\">\r\n        {label}\r\n        <div className=\"dial-wrapper-block\">\r\n          {!!dials.length &&\r\n            dials.map(key => {\r\n              return (\r\n                <Dial {...props}\r\n                      key={key}\r\n                      label={key}\r\n                      value={value?.[key] ?? 0}\r\n                      onChange={value => this.onChange(value, key)} />\r\n              );\r\n            })\r\n          }\r\n\r\n          {!dials.length &&\r\n            <Dial {...props}\r\n                  value={typeof value === 'number' ? value : 0}\r\n                  onChange={this.onChange} />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { JoystickValue } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  value?: JoystickValue;\r\n  label?: string;\r\n  step?: number;\r\n  interval?: number;\r\n  min?: number;\r\n  max?: number;\r\n\r\n  onChange?: (res: JoystickValue) => void;\r\n};\r\n\r\ntype State = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport class Joystick extends React.Component<Props, State> {\r\n\r\n  static defaultProps: Props = {\r\n    interval: 100,\r\n  }\r\n\r\n  state: State = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  monitoring = false;\r\n  step: JoystickValue = {};\r\n  value: JoystickValue = null;\r\n  interval = null;\r\n\r\n  onPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    const { interval, value } = this.props;\r\n\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.value = value;\r\n\r\n    this.onPointerMove(e);\r\n    this.makeMove();\r\n    this.interval = setInterval(this.makeMove, interval);\r\n  }\r\n\r\n  onPointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const { label, step } = this.props;\r\n    const rect = this.ref.current.getBoundingClientRect();\r\n\r\n    const xCenter = (rect.right - rect.left) / 2 + rect.left;\r\n    const yCenter = (rect.bottom - rect.top) / 2 + rect.top;\r\n\r\n    let x = e.clientX - xCenter;\r\n    let y = e.clientY - yCenter;\r\n\r\n    const radius = Math.sqrt(x * x + y * y);\r\n    const maxRadius = this.ref.current.clientHeight / 2;\r\n\r\n    const radians = Math.atan2(x, y);\r\n    const angle = this.normalize(-1 * radians * (180 / Math.PI) - 90) / 360;\r\n\r\n    const r = Math.min(radius / maxRadius, 0.88);\r\n    const radian = (angle - 0.25) * Math.PI * 2;\r\n\r\n    x = Math.sin(radian) * r * 90;\r\n    y = Math.cos(radian) * r * 90;\r\n\r\n    let joystickValue = {} as JoystickValue;    \r\n\r\n    switch (label) {\r\n      case 'X':\r\n        x = 0;\r\n        joystickValue.X = (y * step) / maxRadius;\r\n        break;\r\n\r\n      case 'Y':\r\n        y = 0;\r\n        joystickValue.Y = (x * step) / maxRadius;\r\n        break;\r\n\r\n      case 'Z':\r\n        x = 0;\r\n        joystickValue.Z = (y * step) / maxRadius;\r\n        break;\r\n\r\n      case 'XY':\r\n        joystickValue.X = (y * step) / maxRadius;\r\n        joystickValue.Y = (x * step) / maxRadius;\r\n        break;\r\n    }\r\n\r\n    this.step = joystickValue;\r\n    this.setState({ x, y });\r\n  }\r\n\r\n  onPointerLost = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n    this.monitoring = false;\r\n    this.value = null;\r\n    \r\n    this.setState({ x: 0, y: 0 });\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n  }\r\n\r\n  makeMove = () => {\r\n    const { min, max } = this.props;\r\n\r\n    if (!this.value)\r\n      return;\r\n\r\n    for (const key in this.step) {\r\n      let v = this.value[key] + this.step[key];\r\n      if (max !== undefined)\r\n        v = Math.min(v, max);\r\n\r\n      if (min !== undefined)\r\n        v = Math.max(min, v);\r\n\r\n      this.value[key] = v;\r\n    }\r\n    \r\n    this.props.onChange?.(this.value);\r\n  }\r\n\r\n  normalize = (angle: number): number => {\r\n    while (angle < 0)\r\n      angle += 360;\r\n\r\n    while (angle > 360)\r\n      angle -= 360;\r\n\r\n    return angle;\r\n  }\r\n\r\n  render() {\r\n    const { x, y } = this.state;\r\n    const { label } = this.props;\r\n\r\n    let className = 'circle ';\r\n    if (!this.monitoring)\r\n      className += 'animate';\r\n\r\n    return (\r\n      <div className=\"joystick-wrapper\">\r\n        <div ref={this.ref}\r\n              className=\"joystick\"\r\n              onPointerDown={this.onPointerDown}\r\n              onPointerMoveCapture={this.onPointerMove}\r\n              onLostPointerCaptureCapture={this.onPointerLost}>\r\n          <div className=\"arrows\">\r\n            {['Z', 'X', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-up']} />}\r\n            {['Y', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-left']} />}\r\n            {['Y', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-right']} />}\r\n            {['Z', 'X', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-down']} />}\r\n          </div>\r\n          <div className=\"circle-wrapper\">\r\n            <div className={className} style={{ transform: `translate(${x}px, ${-y}px)` }}>\r\n              <div className=\"label\">{label}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { JoystickValue, PropertyType } from 'src/shared';\r\nimport { Slider, ValueInput, Joystick } from '.';\r\n\r\n\r\ntype Props = {\r\n  keys?: string[];\r\n  value?: JoystickValue;\r\n  min?: number;\r\n  max?: number;\r\n  type?: PropertyType;\r\n  stepMin?: number;\r\n  stepMax?: number;\r\n  showStepSlider?: boolean;\r\n  step?: number;\r\n  hasLimits?: boolean;\r\n  showReset?: boolean;\r\n  label?: React.ReactNode;\r\n\r\n  onChange?: (value?: JoystickValue) => void;\r\n};\r\n\r\ntype State = {\r\n  speed: number;\r\n}\r\n\r\nexport class JoysticksWrapper extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    speed: 5,\r\n  }\r\n\r\n  onSpeedChange = (speed: number) => {\r\n    this.setState({ speed });\r\n  }\r\n\r\n  getJoystick = (pos: 'left' | 'right') => {\r\n    const { keys = [] } = this.props;\r\n\r\n    const x = keys[0];\r\n    const y = keys[1];\r\n    const z = keys[2];\r\n\r\n    switch (pos) {\r\n      case 'left':\r\n        return (z ? x + y : x);\r\n\r\n      case 'right':\r\n        return (z ? z : y);\r\n    }\r\n  }\r\n\r\n  renderInput = (axis: string, value: JoystickValue, min: number, max: number) => {\r\n    return (\r\n      <div key={axis} className=\"control\">\r\n        <span className=\"label\">{axis}:</span>\r\n        <ValueInput min={min}\r\n                    max={max}\r\n                    value={value?.[axis]}\r\n                    onChange={v => this.props.onChange?.({...value, [axis]: v })} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { value, min, max, label = '', keys = [], showReset = true } = this.props;\r\n    const { speed } = this.state;\r\n    \r\n    const leftJoystick = this.getJoystick('left');\r\n    const rightJoystick = this.getJoystick('right');\r\n\r\n    return (\r\n      <div className=\"joystick-outer-wrapper\">\r\n        {showReset &&\r\n          <FontAwesomeIcon className=\"reset-btn\" icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n        }\r\n        <div className=\"joystick-wrapper-block\">\r\n          <Joystick label={leftJoystick}\r\n                    value={value}\r\n                    step={speed}\r\n                    min={min}\r\n                    max={max}\r\n                    onChange={this.props.onChange} />\r\n        </div>\r\n\r\n        <div className=\"controls-block\">\r\n          <div className=\"label\">{label}</div>\r\n          <div className=\"inputs\">\r\n            {keys.map(key => this.renderInput(key, value, min, max))}\r\n          </div>\r\n\r\n          <div className=\"slider\">\r\n            <Slider value={speed}\r\n                    min={0.01}\r\n                    max={100}\r\n                    onChange={this.onSpeedChange}\r\n                    showLabel={false} />\r\n            <div className=\"values\">\r\n              <div className=\"field\">Slow</div>\r\n              <ValueInput value={speed} min={0.01} onChange={this.onSpeedChange} />\r\n              <div className=\"field\">Fast</div>\r\n            </div>\r\n            <div className=\"centered\">Speed</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"joystick-wrapper-block\">\r\n          <Joystick label={rightJoystick}\r\n                    value={value}\r\n                    step={speed}\r\n                    min={min}\r\n                    max={max}\r\n                    onChange={this.props.onChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  label?: string;\r\n  fallback?: string;\r\n};\r\n\r\ntype State = {\r\n  hasError: boolean;\r\n};\r\n\r\nexport class SafeImage extends React.Component<React.ImgHTMLAttributes<HTMLImageElement> & Props, State> {\r\n  state: State = {\r\n    hasError: false,\r\n  };\r\n\r\n  render() {\r\n    const { fallback, alt, label, style } = this.props;\r\n\r\n    const props = {...this.props};\r\n    delete props.fallback;\r\n    delete props.label;\r\n\r\n    if (!this.state.hasError)\r\n      return <img {...props} alt={alt ?? label} onError={() => this.setState({ hasError: true })} />;\r\n\r\n    if (fallback)\r\n      return <img {...props} src={fallback} alt={alt ?? label} />;\r\n\r\n    return (\r\n      <div className=\"safe-image-wrapper\" style={style}>\r\n        <FontAwesomeIcon icon={['fas', 'image']} />\r\n        <div className=\"image-label\">Can't load image</div>\r\n        <div className=\"image-label\">{label}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  value?: number | string;\r\n  onChange: (value: number) => void;\r\n  draggable?: boolean;\r\n  min?: number;\r\n  max?: number;\r\n  precision?: number;\r\n};\r\n\r\ntype State = {\r\n  value: string;\r\n};\r\n\r\nexport class ValueInput extends React.Component<Props, State> {\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  input = React.createRef<HTMLInputElement>();\r\n\r\n  monitoring: boolean = false;\r\n  dragStartX: number = 0;\r\n  touchTime: number = null;\r\n\r\n  getValue = (): string => {\r\n    let { value, precision } = this.props;\r\n    if (typeof value === 'string')\r\n      value = Number.parseFloat(value);\r\n\r\n    return value?.toFixed?.(precision ?? 2);\r\n  }\r\n\r\n  getNumberValue = () => {\r\n    let { value } = this.props;\r\n    if (typeof value === 'string')\r\n      value = Number.parseFloat(value);\r\n\r\n    return value;\r\n  }\r\n\r\n  state: State = {\r\n    value: this.getValue(),\r\n  };\r\n\r\n  componentDidUpdate (prevProps: Props) {\r\n    const { value } = this.props;\r\n    const newValue = this.getValue();\r\n\r\n    if (prevProps.value !== value && this.state.value !== newValue)\r\n      this.setState({ value: newValue });\r\n  }\r\n\r\n  onContextMenu = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onClick = () => {\r\n    this.input.current.focus();\r\n  }\r\n\r\n  onDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (this.props.draggable === false)\r\n      return;\r\n\r\n    this.monitoring = true;\r\n    this.dragStartX = e.clientX;\r\n    \r\n    if (this.touchTime === null || (performance.now() - this.touchTime) > 3000)\r\n      this.touchTime = performance.now();\r\n    this.ref.current?.setPointerCapture(e.pointerId);\r\n  }\r\n\r\n  onUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = false;\r\n    this.touchTime = performance.now();\r\n    this.ref.current?.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  onMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring || !this.ref.current)\r\n      return;\r\n\r\n    if (this.touchTime !== null) {\r\n      // initial delay of 150ms\r\n      if (performance.now() - this.touchTime < 150)\r\n        return;\r\n\r\n      this.dragStartX = e.clientX;\r\n      this.touchTime = null;\r\n    }\r\n\r\n    const { min, max } = this.props;\r\n\r\n    let value = this.getNumberValue();\r\n    let x = e.clientX - this.dragStartX;\r\n    this.dragStartX = e.clientX;\r\n\r\n    if (min !== undefined && max !== undefined) {\r\n      const range = Math.abs(max - min);\r\n      if (range > 0.01 && 2 * range < window.innerWidth)\r\n        x *= range / 50;\r\n    }\r\n\r\n    value += x;\r\n    if (min !== undefined)\r\n      value = Math.max(min, value);\r\n\r\n    if (max !== undefined)\r\n      value = Math.min(value, max);\r\n\r\n    if (isNaN(value))\r\n      value = 0;\r\n\r\n    this.props.onChange?.(value);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onManualChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        this.onChangeValue();\r\n        break;\r\n\r\n      case 'Escape':\r\n        this.setPropsValue();\r\n        break;\r\n    }\r\n  }\r\n\r\n  setPropsValue = () => {\r\n    this.setState({ value: this.getValue() });\r\n  }\r\n\r\n  onChangeValue = () => {\r\n    const { min, max } = this.props;\r\n    let value = Number.parseFloat(this.state.value);\r\n\r\n    if (!isNaN(value)) {\r\n      if (!isNaN(min))\r\n        value = Math.max(min, value);\r\n\r\n      if (!isNaN(max))\r\n        value = Math.min(max, value);\r\n\r\n      if (value !== this.props.value)\r\n        this.props.onChange(value);\r\n    } \r\n\r\n    this.setPropsValue();\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <span ref={this.ref}\r\n            className=\"input-field-container\"\r\n            onClick={this.onClick}\r\n            onPointerDown={this.onDown}\r\n            onPointerMove={this.onMove}\r\n            onPointerUp={this.onUp}\r\n            onLostPointerCapture={this.onUp}>\r\n        <input ref={this.input}\r\n               className=\"input-field\"\r\n               value={value ?? ''}\r\n               onChange={this.onManualChange}\r\n               onKeyDown={this.onKeyDown}\r\n               onBlur={this.onChangeValue}\r\n               onContextMenu={this.onContextMenu} />\r\n      </span>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ValueInput } from './ValueInput';\r\n\r\n\r\ntype Props = {\r\n  min?: number;\r\n  max?: number;\r\n  size?: number;\r\n  value?: number;\r\n  onChange?: (value: number) => void;\r\n  showGrid?: boolean;\r\n  showLimits?: boolean;\r\n  showLabel?: boolean;\r\n  precision?: number;\r\n};\r\n\r\nexport class Slider extends React.Component<Props> {\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  circleRef = React.createRef<HTMLDivElement>();\r\n  monitoring: boolean = false;\r\n  dragValue: number = null;\r\n  dragOffset: number = null;\r\n\r\n  onDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n\r\n    const circle = this.circleRef.current.getBoundingClientRect();\r\n\r\n    this.dragOffset = 0;\r\n    this.dragValue = this.props.value;\r\n    if (circle.left <= e.clientX && e.clientX <= circle.right)\r\n      this.dragOffset = e.clientX - (circle.left + (circle.width / 2));\r\n    \r\n    this.onMove(e);\r\n  }\r\n\r\n  onUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = false;\r\n    this.dragOffset = 0;\r\n    this.dragValue = null;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n  \r\n  onMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring || !this.ref.current)\r\n      return;\r\n\r\n    const { min, max } = this.props;\r\n    const slider = this.ref.current;\r\n\r\n    const rect = slider.getBoundingClientRect();\r\n    const x = e.clientX - this.dragOffset;\r\n    const ratio = Math.max(0, Math.min((x - rect.left) / rect.width, 1));\r\n\r\n    const value = ratio * (max - min) + min;\r\n    if (this.dragValue !== value) {\r\n      this.dragValue = value;\r\n      this.props.onChange?.(value);\r\n    }\r\n  }\r\n\r\n  renderGridLines = (percent: number) => {\r\n    const res = [];\r\n    for (let i = 0; i < 11; i++)\r\n      res.push(<div key={i} className={`grid-lines ${percent > i * 9.9999 ? 'active' : ''}`} />);\r\n\r\n    return <div className=\"grid-lines-wrapper\">{res}</div>;\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent) => {\r\n    const { value, min, max } = this.props;\r\n    const step = (max - min) / 20;\r\n\r\n    switch (e.nativeEvent.code) {\r\n      case 'KeyA':\r\n      case 'KeyS':\r\n        this.props.onChange?.(value - step);\r\n        break;\r\n\r\n      case 'KeyW':\r\n      case 'KeyD':\r\n        this.props.onChange?.(value + step);\r\n        break;\r\n    };\r\n  }\r\n\r\n  render()  {\r\n    const { min, max, showGrid, showLimits, showLabel, precision } = this.props;\r\n    const value = this.dragValue ?? this.props.value;\r\n\r\n    let percent = 0;\r\n    if (!isNaN(value)) {\r\n      percent = (value - min) / (max - min) * 100;\r\n      percent = Math.max(0, Math.min(percent, 100));\r\n    }  \r\n\r\n    return (\r\n      <div className=\"slider-wrapper\">\r\n        {showLabel !== false &&\r\n          <ValueInput min={min}\r\n                      max={max}\r\n                      precision={precision}\r\n                      value={value}\r\n                      onChange={this.props.onChange} />\r\n        }\r\n\r\n        <div className=\"slider-inner\" tabIndex={0} onKeyDown={this.onKeyDown}>\r\n\r\n          {showLimits && \r\n            <div className=\"label-wrapper\">\r\n              <span className=\"label\">{min}</span>\r\n              <span className=\"label\">{max}</span>\r\n            </div>\r\n          }\r\n          \r\n          <div className=\"slider-clickable\"\r\n                ref={this.ref}\r\n                onLostPointerCapture={this.onUp}\r\n                onPointerDown={this.onDown}\r\n                onPointerUp={this.onUp}\r\n                onPointerMove={this.onMove}>\r\n            <div className=\"slider-block\">\r\n              <div className=\"slider\" />\r\n              <div className=\"range-fill\" style={{ width: `${percent}%` }} />\r\n              <div className='circle-wrapper' style={{ transform: `translateX(${percent}%)` }}>\r\n                <div className=\"circle\" ref={this.circleRef} />\r\n              </div>\r\n            </div>\r\n\r\n            {showGrid && \r\n              this.renderGridLines(percent)\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ICustomStackProperty, JoystickValue, PropertyValue } from 'src/shared';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { Slider, ValueInput } from '.';\r\n\r\n\r\ntype Props = {\r\n  widget?: ICustomStackProperty;\r\n  label?: string;\r\n  min: number;\r\n  max: number;\r\n  value: JoystickValue;\r\n\r\n  onChange: (value?: PropertyValue) => void;\r\n};\r\n\r\nexport class SlidersWrapper extends React.Component<Props> {\r\n\r\n  onSliderChange = (axis: string, sliderValue: number) => {\r\n    const { value = {}, onChange } = this.props;\r\n\r\n    if (axis) {\r\n      value[axis] = sliderValue;\r\n      onChange(value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { min, max, value, widget } = this.props;\r\n    const propertyType = widget?.propertyType;\r\n    const keys = WidgetUtilities.getPropertyKeys(propertyType);\r\n    const precision = WidgetUtilities.getPropertyPrecision(propertyType);\r\n\r\n    return (\r\n      <div className=\"sliders-component-wrapper\">\r\n        {keys.map(property =>\r\n          <div key={property} className=\"slider-row\">\r\n            <div className=\"title\">{property}</div>\r\n            <ValueInput min={min}\r\n                        max={max}\r\n                        precision={precision}\r\n                        value={value?.[property]}\r\n                        onChange={value => this.onSliderChange(property, value)} />\r\n            {min !== undefined && max !== undefined &&\r\n              <>\r\n                <div className=\"limits\">{min?.toFixed(1)}</div>\r\n                <Slider value={value?.[property]}\r\n                        min={min}\r\n                        max={max}\r\n                        precision={precision}\r\n                        showLabel={false}\r\n                        onChange={value => this.onSliderChange(property, value)} />\r\n                <div className=\"limits\">{max?.toFixed(1)}</div>\r\n              </>\r\n  }\r\n            <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\ntype Props = {\r\n  value?: string;\r\n  onChange?: (value: string) => void;\r\n};\r\n\r\nexport class Text extends React.Component<Props> {\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.onChange?.(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n\r\n    return (\r\n      <div className=\"widget-text-wrapper\">\r\n        <input className=\"widget-text\" type=\"textbox\" value={value ?? ''} onChange={this.onChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ICustomStackProperty, JoystickValue, PropertyType, WidgetType, WidgetTypes } from 'src/shared';\r\nimport { DialsWrapper, JoysticksWrapper, SlidersWrapper, DialMode } from '.';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  value: JoystickValue;\r\n  widget?: ICustomStackProperty;\r\n  label?: React.ReactNode;\r\n  min?: number;\r\n  max?: number;\r\n\r\n  onChange: (value?: JoystickValue) => void;\r\n  onClose: () => void;\r\n};\r\n\r\ntype State = {\r\n  mode?: WidgetType;\r\n};\r\n\r\nconst keys = [WidgetTypes.Joystick, WidgetTypes.Dial, WidgetTypes.Sliders];\r\n\r\nexport class VectorDrawer extends React.Component<Props, State> {\r\n  state : State = {};\r\n\r\n  componentDidMount() {\r\n    const { widget } = this.props;\r\n    \r\n    const modes = _.compact(keys.map(key => widget.widgets?.find(w => w === key)));\r\n    const mode = _.first(modes);\r\n\r\n    this.setState({ mode });\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { widget } = this.props;\r\n    const { mode } = this.state;\r\n\r\n    if (widget !== prevProps.widget) {\r\n      const modes = _.compact(keys.map(key => widget.widgets?.find(w => w === key)));\r\n\r\n      if (!modes.length)\r\n        return this.props.onClose();\r\n\r\n      if (!modes.find(m => m === mode))\r\n        this.setState({ mode: _.first(modes) });\r\n    }\r\n  }\r\n\r\n  renderJoystick = (keys: string[], min: number, max: number) => {\r\n    const { widget, value, onChange } = this.props;\r\n    return (      \r\n      <JoysticksWrapper type={widget?.propertyType} \r\n                        min={min}\r\n                        max={max}\r\n                        value={value}\r\n                        keys={keys}\r\n                        showReset={false}\r\n                        onChange={onChange} />\r\n    );\r\n  }\r\n\r\n  setMode = (mode: WidgetType) => {\r\n    this.setState({ mode });\r\n  }\r\n\r\n  renderMode = (mode: string, type: WidgetType) => {\r\n    const { widget } = this.props;\r\n    if (widget.widgets.length < 2 || !widget.widgets.includes(type))\r\n      return null;\r\n\r\n    let className = 'mode ';\r\n    if (mode === type)\r\n      className += 'selected ';\r\n\r\n    return <div className={className} onClick={() => this.setMode(type)}>{type}</div>;\r\n  }\r\n\r\n  render() {\r\n    const { label, value, min, max, widget, onChange, onClose } = this.props;\r\n    if (!widget?.widgets?.length)\r\n      return null;\r\n\r\n    let { mode } = this.state;\r\n    if (!mode || !widget.widgets.includes(mode))\r\n      mode = widget.widgets[0];\r\n\r\n    const keys = WidgetUtilities.getPropertyKeys(widget?.propertyType);\r\n    const rotator = widget.propertyType === PropertyType.Rotator;\r\n    let dialMode = DialMode.Endless;\r\n\r\n    if (min !== undefined && max !== undefined)\r\n      dialMode = DialMode.Range;\r\n\r\n    if (rotator)\r\n      dialMode = DialMode.Rotation;\r\n\r\n    const showModes = widget.widgets.length > 1;\r\n\r\n    return (\r\n      <div className=\"vector-drawer-wrapper\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"drawer-header\">\r\n          <div className=\"modes header-block\">\r\n            {this.renderMode(mode, WidgetTypes.Joystick)}\r\n            {this.renderMode(mode, WidgetTypes.Dial)}\r\n            {this.renderMode(mode, WidgetTypes.Sliders)}\r\n          </div>\r\n          <div className=\"header-block\">\r\n            <span>{label}</span>\r\n            <FontAwesomeIcon className=\"reset-btn\" icon={['fas', 'undo']} onClick={() => onChange?.()} />\r\n          </div>\r\n          <div className=\"header-block btns\">\r\n            <FontAwesomeIcon className=\"close-btn\" icon={['fas', 'times']} onClick={onClose} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`controls-block ${showModes ? '' : 'controls-only'}`}>\r\n          {mode === WidgetTypes.Joystick && !rotator && \r\n            this.renderJoystick(keys, min, max)\r\n          }\r\n\r\n          {mode === WidgetTypes.Sliders &&\r\n            <SlidersWrapper widget={widget}\r\n                            min={min}\r\n                            max={max}\r\n                            value={value}\r\n                            onChange={onChange} />\r\n          }\r\n\r\n          {mode === WidgetTypes.Dial &&\r\n            <DialsWrapper size={widget.propertyType !== PropertyType.Vector2D ? 600 : 400}\r\n                          min={min}\r\n                          max={max}\r\n                          type={widget.propertyType}\r\n                          mode={dialMode}\r\n                          value={value}\r\n                          hidePrecision={true}\r\n                          onChange={onChange} />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  value?: boolean | number;\r\n  onChange?: (value: boolean | number) => void;\r\n};\r\n\r\nexport class Toggle extends React.Component<Props> {\r\n\r\n  onClick = () => {\r\n    const { value, onChange } = this.props;\r\n    onChange?.(!value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n\r\n    let className = 'toggle ';\r\n    if (value)\r\n      className += 'checked ';\r\n\r\n    return (\r\n      <div className={className} onClick={this.onClick}>\r\n        <div className=\"switch\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  placeholder?: string;\r\n\r\n  onSearch: (value: string) => void;\r\n};\r\n\r\ntype State = {\r\n  filter: string,\r\n};\r\n\r\nexport class Search extends React.Component<Props, State> {\r\n  static defaultProps: Partial<Props> = {\r\n    placeholder: 'Search',\r\n  };\r\n\r\n  state: State = {\r\n    filter: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { placeholder, onSearch } = this.props;\r\n    \r\n    if(placeholder !== prevProps.placeholder) {\r\n      this.setState({ filter: '' });\r\n      onSearch('');\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onSearch?.('');\r\n  }\r\n\r\n  onSearch = (filter: string) => {\r\n    this.props.onSearch(filter.toLowerCase());\r\n\r\n    this.setState({ filter });\r\n  }\r\n\r\n  render() {    \r\n    const { filter } = this.state;\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <div className=\"search-wrapper\">\r\n        <FontAwesomeIcon icon={['fas', 'search']} />\r\n        <input className=\"list-search\" value={filter} placeholder={placeholder} onChange={e => this.onSearch(e.target.value)}/>\r\n        {filter && \r\n          <FontAwesomeIcon icon={['fas', 'times-circle']} onClick={() => this.onSearch('')} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\n\r\ntype SliderWheelProps = {\r\n  onWheelMove?: (value: number, offset?: number) => void;\r\n  onWheelStart?: () => void;\r\n}\r\n\r\ntype SliderWheelState = {\r\n  offset: number;\r\n}\r\n\r\nexport class SliderWheel extends React.Component<SliderWheelProps, SliderWheelState> {\r\n\r\n  state: SliderWheelState = {\r\n    offset: 0,\r\n  };\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  monitoring: boolean = false;\r\n  last: number = -1;\r\n  sum: number = 0;\r\n\r\n  onPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.ref.current)\r\n      return;\r\n\r\n\r\n    this.monitoring = true;\r\n    this.last = e.clientX;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.props.onWheelStart?.();\r\n  }\r\n\r\n  onPointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const delta = e.clientX - this.last;\r\n    if (Math.abs(delta) < 2)\r\n      return; \r\n\r\n    this.last = e.clientX;\r\n    let { offset } = this.state;\r\n\r\n    this.sum += delta;\r\n    const rect = this.ref.current.getBoundingClientRect();\r\n\r\n    offset += delta;\r\n    offset %= rect.width / 2;\r\n\r\n    this.props.onWheelMove?.(Math.sign(delta), this.sum / (rect.width / 2));\r\n    this.setState({ offset });\r\n  }\r\n\r\n  onPointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.monitoring = false;\r\n    this.last = 0;\r\n    this.sum = 0;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  renderCircles = () => {\r\n    const circles = [];\r\n\r\n    for (let i = 0; i < 80; i++)\r\n      circles.push(<div key={i} className=\"slider-circle\" />);\r\n\r\n    return circles;\r\n  }\r\n\r\n  render() {\r\n    const { offset } = this.state;\r\n    const style: React.CSSProperties = { transform: `translateX(${offset}px)` };\r\n\r\n    return (\r\n      <div className=\"color-picker-slider-wheel\"\r\n           onPointerMove={this.onPointerMove}\r\n           onPointerDown={this.onPointerDown}\r\n           onPointerUp={this.onPointerUp}\r\n           ref={this.ref}>\r\n        <div className=\"circles-list\" style={style}>\r\n          {this.renderCircles()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  label?: React.ReactNode;\r\n  options?: string[];\r\n  value?: string;\r\n\r\n  onChange?: (value?: string) => void;\r\n}\r\n\r\nexport class DropdownWidget extends React.Component<Props> {\r\n  onSelect = (value?: string) => {\r\n    this.props.onChange?.(value);\r\n  }\r\n  \r\n  render() {\r\n    const { label = '', options, value } = this.props;\r\n\r\n    return (\r\n      <div className=\"dropwdown-row\">\r\n        <div className=\"slider-row\">\r\n          <div className=\"title\">{label}</div>\r\n          <div className=\"dropdown-widget\">\r\n            <select className=\"dropdown\" value={value} onChange={e => this.onSelect(e.target.value)}>\r\n              {options?.map((option, index) =>\r\n                <option key={index} value={option}>{option}</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ICustomStackProperty, PropertyValue } from 'src/shared';\r\nimport { SafeImage } from '../controls';\r\nimport { _api } from '../../reducers';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  value?: any;\r\n\r\n  onChange?: (widget: ICustomStackProperty, value?: PropertyValue) => void;\r\n}\r\n\r\nexport class ImageSelectorWidget extends React.Component<Props> {\r\n  render() {\r\n    const { widget, value = null } = this.props;\r\n    const itemSize = { width: 260, height: 100 };\r\n\r\n    return (\r\n      <div className=\"image-dropdown-row\" style={{ minHeight: itemSize.height + 20 }}>\r\n        {widget.options?.map((option, index) =>\r\n          <SafeImage key={index}\r\n                     src={_api.assets.thumbnailUrl(option.label)}\r\n                     className={`dropdown-image ${value === option.value ? 'selected-dropdown-image' : ''}`}\r\n                     onClick={() => this.props.onChange?.(widget, option.value)}\r\n                     alt={option.value}\r\n                     label={_.startCase(_.last(widget.property.split('.')))}\r\n                     style={itemSize} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ICustomStackProperty } from 'src/shared';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { ValueInput, Slider } from '../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  label?: React.ReactNode;\r\n  min?: number;\r\n  max?: number;\r\n  value?: any;\r\n  \r\n  onChange?: (widget: ICustomStackProperty, axis?: string, axisValue?: number, locked?: boolean) => any;\r\n  onPrecisionModal?: (property: string) => void;\r\n}\r\n\r\nexport class SlidersWidget extends React.Component<Props> {\r\n\r\n  render() {   \r\n    const { widget, label = '', min, max, value } = this.props;\r\n\r\n    const propertyType = widget?.propertyType;\r\n    const properties = WidgetUtilities.getPropertyKeys(propertyType);\r\n    const precision = WidgetUtilities.getPropertyPrecision(propertyType);\r\n\r\n    const isSlider = (min !== undefined && max !== undefined);\r\n    const selectedProperties = properties.filter(property => widget.widgets?.includes(property));\r\n\r\n    return (\r\n      <div className=\"custom-sliders\">\r\n        {properties.map(property =>\r\n          <React.Fragment key={property}>\r\n            {(widget.widgets?.includes(property) || !selectedProperties.length) && \r\n              <div className=\"slider-row\">\r\n                <div className=\"title\">{label}.{property}</div>\r\n                <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={() => this.props.onPrecisionModal?.(property)} />\r\n                <ValueInput min={min}\r\n                            max={max}\r\n                            precision={precision}\r\n                            value={value?.[property]}\r\n                            onChange={value => this.props.onChange?.(widget, property, value) || null} />\r\n                {isSlider &&\r\n                  <>\r\n                    <div className=\"limits\">{min?.toFixed(1)}</div>\r\n                    <Slider value={value?.[property] || null}\r\n                            min={min}\r\n                            max={max}\r\n                            showLabel={false}\r\n                            onChange={value => this.props.onChange?.(widget, property, value) || null} />\r\n                    <div className=\"limits\">{max?.toFixed(1)}</div>\r\n                  </>\r\n                }\r\n              </div>\r\n            }\r\n          </React.Fragment>\r\n        )}\r\n        <FontAwesomeIcon icon={['fas', 'undo']} className=\"reset-sliders\" onClick={() => this.props.onChange?.(widget)} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { Slider, ValueInput } from '../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { PropertyValue } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  value?: any;\r\n  label?: React.ReactNode;\r\n  min?: number;\r\n  max?: number;\r\n  precision?: number\r\n\r\n  onPrecisionModal?: () => void;\r\n  onChange?: (value?: PropertyValue) => void;\r\n}\r\n\r\nexport class SliderWidget extends React.Component<Props> {\r\n  render() {\r\n    const { value, label = '', min, max, precision } = this.props;\r\n    const isRange = (min !== undefined && max !== undefined);\r\n\r\n    return (\r\n      <div className=\"slider-row\">\r\n        <div className=\"title\">{label}</div>\r\n        <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={this.props?.onPrecisionModal} />\r\n        <ValueInput min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    value={value}\r\n                    onChange={this.props.onChange} />\r\n\r\n        {isRange &&\r\n          <>\r\n            <div className=\"limits\">{min.toFixed(1)}</div>\r\n            <Slider value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    showLabel={false}\r\n                    onChange={this.props.onChange} />\r\n            <div className=\"limits\">{max.toFixed(1)}</div>\r\n          </>\r\n        }\r\n        <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange()} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  options: { value: any, label?: string } [];\r\n  prefix?: string;\r\n  value?: any;\r\n\r\n  onSelect: (value: any) => void;\r\n};\r\n\r\nexport class TabWidget extends React.Component<Props> {\r\n\r\n  render() {\r\n    const { value, prefix, options, onSelect } = this.props;\r\n\r\n    return (\r\n      <div className=\"tab-widget-wrapper\">\r\n        {options.map((option, index) =>\r\n          <button key={index}\r\n                  onClick={onSelect.bind(this, option.value)}\r\n                  data-prefix={prefix}\r\n                  data-value={option.value}\r\n                  className={`btn ${value === option.value ? 'selected' : ''}`}>\r\n            {option.label ?? option.value}\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ICustomStackProperty, PropertyValue } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  checked?: boolean;\r\n  label?: React.ReactNode;\r\n\r\n  onChange?: (widget: ICustomStackProperty, value?: PropertyValue) => void;\r\n}\r\n\r\nexport class ToggleWidget extends React.Component<Props> {\r\n  render() {\r\n    const { widget, checked = false, label = '' } = this.props;\r\n\r\n    let className = 'toggle ';\r\n    if (checked)\r\n      className += 'checked ';\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"title\">{label}</div>\r\n        <div className=\"switch\" onClick={() => this.props.onChange?.(widget, !checked)} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ICustomStackProperty, WidgetTypes } from 'src/shared';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { ValueInput } from '../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  label?: React.ReactNode;\r\n  value?: any;\r\n  vector?: ICustomStackProperty;\r\n  locked?: string[];\r\n  min?: number;\r\n  max?: number;\r\n\r\n  onAxisChange?: (widget: ICustomStackProperty, axis: string, axisValue: number, locked?: boolean) => void;\r\n  onToggleWidgetLock?: (key: string) => void;\r\n  onToggleVectorDrawer?: (vector: ICustomStackProperty) => void;\r\n  onSetVector?: (vector: ICustomStackProperty) => void;\r\n}\r\n\r\nconst modes = [WidgetTypes.Joystick, WidgetTypes.Dial, WidgetTypes.Sliders];\r\n\r\nexport class VectorWidget extends React.Component<Props> {\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { widget, vector } = this.props;\r\n\r\n    if (widget !== prevProps.widget && !!vector)\r\n      this.props.onSetVector({ ...widget });\r\n  }\r\n\r\n  onToggleVectorDrawer = (e: React.MouseEvent, widget: ICustomStackProperty, key: string) => {\r\n    e.stopPropagation();\r\n    this.props.onToggleVectorDrawer({ ...widget });\r\n  }\r\n  \r\n  render() {\r\n    const { widget, label = '', value, locked, vector, min, max } = this.props;\r\n    const key = widget.id;\r\n    const keys = WidgetUtilities.getPropertyKeys(widget.propertyType);\r\n    const widgets = _.compact(modes.map(k => widget.widgets?.find(w => w === k))) || [];\r\n\r\n    return (\r\n      <div className=\"slider-row joystick-row\">\r\n        <div className=\"title\">{label}</div>\r\n\r\n        {keys.map(property =>\r\n          <div key={`${property}${key}`} className=\"value-info\">\r\n            <div className={`axis-title ${property}-axis`}>{property}:</div>\r\n            <ValueInput min={min}\r\n                        max={max}\r\n                        precision={WidgetUtilities.getPropertyPrecision(widget.propertyType)}\r\n                        value={value?.[property]}\r\n                        onChange={value => this.props.onAxisChange?.(widget, property, value, locked?.includes(key))} />\r\n          </div>\r\n        )}\r\n\r\n        {widget.propertyType && widgets.length > 0 &&\r\n          <FontAwesomeIcon icon={['fas', 'gamepad']}\r\n                           className={`gamepad ${vector?.id === key ? 'selected' : ''}`}\r\n                           onClick={e => this.onToggleVectorDrawer?.(e, widget, key)} />\r\n        }\r\n\r\n        <div className=\"control-buttons\">\r\n          <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onAxisChange?.(widget, undefined, undefined)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ntype Props = {\r\n  text: string;\r\n  close: (isConfirmed?: boolean) => void;\r\n};\r\n\r\nexport class AlertModal extends React.Component<Props> {\r\n\r\n  componentDidMount() {    \r\n    document.addEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  onKeyPress = (e) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  private static pending: (isConfirmed?: boolean) => void;\r\n\r\n  public static show(text: string): Promise<boolean> {\r\n    AlertModal.pending?.(undefined);\r\n    AlertModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<boolean>(resolve => {\r\n      AlertModal.pending = resolve;\r\n\r\n      ReactDOM.render(<AlertModal text={text} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  onOK = () => {\r\n    this.props.close(true);\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.close(false);\r\n  }\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onClick={this.onCancel}>\r\n        <div className=\"alert-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <div className=\"alert-text\">{text}</div>\r\n          <div className=\"footer\">\r\n            <button className=\"btn btn-secondary\" onClick={this.onCancel}>Cancel</button>\r\n            <button className=\"btn btn-secondary\" onClick={this.onOK}>Ok</button>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fas, IconName } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  selected?: string;\r\n  close: (name?: IconName) => void;\r\n};\r\n\r\ntype State = {\r\n  filter: string;\r\n  filterText: string;\r\n  selected?: IconName;\r\n};\r\n\r\nexport class IconModal extends React.Component<Props, State> {\r\n  state: State = {\r\n    filter: '',\r\n    filterText: '',\r\n  };\r\n\r\n  componentDidMount() {    \r\n    document.addEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  onKeyPress = (e) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  private static pending: (name?: IconName ) => void;\r\n\r\n  public static show(selected: string): Promise<IconName> {\r\n    IconModal.pending?.(undefined);\r\n    IconModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<IconName>(resolve => {\r\n      IconModal.pending = resolve;\r\n\r\n      ReactDOM.render(<IconModal selected={selected} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  onFilterTextChange = (filterText: string) => {\r\n    this.setState({ filterText });\r\n    this.onFilterChangeDelayed(filterText);\r\n  }\r\n\r\n  onFilterChange = (filter: string) => {\r\n    filter = filter.toLocaleLowerCase();\r\n    this.setState({ filter });\r\n  }\r\n\r\n  onFilterChangeDelayed = _.debounce(this.onFilterChange, 250);\r\n\r\n  onResetFilter = () => {\r\n    this.setState({ filterText: '', filter: '' });\r\n  }\r\n\r\n  onSelect = (selected: IconName) => {\r\n    this.setState({ selected });\r\n  }\r\n\r\n  onOK = () => {\r\n    const { selected } = this.state;\r\n    if (selected)\r\n      this.props.close(selected);\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.close();\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        return this.onOK();\r\n\r\n      case 'Escape':\r\n        return this.onCancel();\r\n    }\r\n  }\r\n\r\n  renderIcons = () => {\r\n    const { filter } = this.state;\r\n    const selected = this.state.selected || this.props.selected;\r\n\r\n    let keys = Object.keys(fas);\r\n    if (filter)\r\n      keys = keys.filter(key => fas[key].iconName.includes(filter));\r\n    \r\n    return (\r\n      <div className=\"icon-wrapper\">\r\n        {keys.map(key => (\r\n          <div key={fas[key].iconName} className={`icon-block ${fas[key].iconName === selected ? 'selected' : ''}`}>\r\n            <FontAwesomeIcon className=\"icon\" icon={['fas', fas[key].iconName]} onClick={() => this.onSelect(fas[key].iconName)} />\r\n            <div className=\"icon-text\">{fas[key].iconName}</div>\r\n          </div>)\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { filterText, selected } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onClick={this.onCancel}>\r\n        <div className=\"icon-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <div className=\"search-wrapper search-position\">\r\n            <FontAwesomeIcon icon={['fas', 'search']} />\r\n            <input value={filterText}\r\n                    className=\"icon-search\"\r\n                    placeholder=\"Search icon\" \r\n                    onChange={e => this.onFilterTextChange(e.target.value)}\r\n                    autoFocus={true}\r\n                    onKeyDown={this.onKeyDown}\r\n                    autoComplete=\"off\" />\r\n            {filterText &&\r\n              <FontAwesomeIcon icon={['fas', 'times-circle']} onClick={this.onResetFilter} />\r\n            }\r\n          </div>\r\n          {this.renderIcons()}\r\n          <div className=\"btn-wrapper\">\r\n            <button className=\"btn btn-secondary\" onClick={this.onCancel}>Cancel</button>\r\n            <button className={`btn btn-secondary ${!selected && 'disabled'}`} disabled={!selected} onClick={this.onOK}>Apply</button>\r\n          </div> \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\ntype Props = {\r\n  name: string;\r\n  placeholder: string;\r\n  close: (name?: string) => void;\r\n};\r\n\r\ntype State = {\r\n  name: string;\r\n};\r\n\r\nexport class RenameModal extends React.Component<Props, State> {\r\n  state: State = {\r\n    name: '',\r\n  };\r\n\r\n  componentDidMount() {    \r\n    document.addEventListener('keydown', this.onKeyPress);\r\n    \r\n    const { name } = this.props;\r\n    this.setState({ name });\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  onKeyPress = (e) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  private static pending: (name?: string) => void;\r\n\r\n  public static rename(name: string, placeholder: string): Promise<string> {\r\n    RenameModal.pending?.(undefined);\r\n    RenameModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<string>(resolve => {\r\n      RenameModal.pending = resolve;\r\n\r\n      ReactDOM.render(<RenameModal name={name} placeholder={placeholder} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.value;\r\n    this.setState({ name });\r\n  }\r\n\r\n  onOK = () => {\r\n    const { name } = this.state;\r\n    this.props.close(name);\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.close();\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        return this.onOK();\r\n\r\n      case 'Escape':\r\n        return this.onCancel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { close, placeholder } = this.props;\r\n    const { name } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onPointerDown={this.onCancel}>\r\n        <div className=\"rename-modal\" onPointerDown={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <input value={name ?? ''}\r\n                  placeholder={placeholder}\r\n                  onChange={this.onChange}\r\n                  autoFocus={true}\r\n                  onKeyDown={this.onKeyDown}\r\n                  autoComplete=\"off\"\r\n                  dir=\"auto\" />\r\n          <div className=\"buttons-wrapper\">\r\n            <button className=\"btn btn-secondary\" onClick={this.onCancel}>Cancel</button>\r\n            <button className=\"btn btn-secondary\" onClick={() => close(name)}>Rename</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { ValueInput, SliderWheel, Slider, ColorPicker, ColorPickerParts, ColorMode } from '../controls';\r\nimport { ColorProperty, IHsvColor, PropertyType, PropertyValue, VectorProperty, WidgetType, WidgetTypes } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport { AlertModal } from './AlertModal';\r\n\r\n\r\ntype Props = {\r\n  widget?: WidgetType;\r\n  property: string;\r\n  meta?: Partial<{ type: PropertyType, min: number, max: number, precision: number, alpha: boolean }>;\r\n  type?: PropertyType;\r\n  label?: string | JSX.Element;\r\n  value?: any;\r\n\r\n  onClose?: () => void;\r\n  onChange?: (value?: PropertyValue) => void; \r\n  onMetadataChange?: (key: string, value: string) => void;\r\n};\r\n\r\ntype State = {\r\n  step: number;\r\n  min: number;\r\n  max: number;\r\n  mode: ColorMode;\r\n  negative: boolean;\r\n};\r\n\r\nexport class PrecisionModal extends React.Component<Props, State> {\r\n  state: State = {\r\n    step: 1,\r\n    min: 0.01,\r\n    max: 10,\r\n    mode: ColorMode.Rgb,\r\n    negative: false,\r\n  }\r\n\r\n  value: number = 0;\r\n  originalValue: number = null;\r\n  hsv: IHsvColor = { h: 0, s: 0, v: 0 };\r\n  \r\n  componentDidMount() {\r\n    const { widget, value } = this.props;\r\n\r\n    document.addEventListener('keydown', this.onKeyPress);\r\n\r\n    const loaded: any = { max: 10 };\r\n    if (widget === WidgetTypes.ColorPicker)\r\n      loaded.max = 1;\r\n\r\n    this.originalValue = value;\r\n    \r\n    try {\r\n      const sensitivity = JSON.parse(localStorage.getItem(this.props.property));\r\n\r\n      for (const property in this.state) {\r\n        if (sensitivity[property])\r\n          loaded[property] = sensitivity[property];\r\n      }\r\n    } catch {\r\n    }\r\n\r\n    this.setState(loaded);\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  normalizeValue = (value: number, min: number, max: number) => {\r\n    return Math.max(min, Math.min(value, max));\r\n  }\r\n\r\n  onKeyPress = (e: KeyboardEvent) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Escape')\r\n      return this.onCancel();\r\n  }\r\n\r\n  onChange = (factor: number) => {\r\n    const { step } = this.state;\r\n    let { value, meta } = this.props;\r\n\r\n    value += step * factor;\r\n    if (meta?.min !== undefined)\r\n      value = Math.max(meta.min, value);\r\n    \r\n    if (meta?.max !== undefined)\r\n      value = Math.min(value, meta.max);\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onStepChange = (step: number) => {\r\n    const { min, max } = this.state;\r\n\r\n    step = this.normalizeValue(step, min, max);\r\n    this.onSetMeta('step', step);\r\n  }\r\n\r\n  onRgbValueInputChange = (key: string, v: number) => {\r\n    const { value } = this.props;\r\n    const { negative } = this.state;\r\n    \r\n    if (!value)\r\n      return;\r\n\r\n    if (!negative)\r\n      v = Math.max(0, v);\r\n\r\n    value[key] = v;\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onHsvValueInputChange = (key: string, v: number) => {\r\n    const { type } = this.props;\r\n    let hsv = this.getHsvColor();\r\n\r\n    hsv[key] = v;\r\n    hsv.h /= 360;\r\n\r\n    if (type === PropertyType.Color)\r\n      hsv = { ...hsv, s: this.normalizeValue(hsv.s, 0, 1), v: this.normalizeValue(hsv.v, 0, 1) };\r\n\r\n    const rgb = WidgetUtilities.hsv2rgb(hsv);\r\n\r\n    let max = 1;\r\n    let color = rgb as ColorProperty | VectorProperty;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n    }\r\n\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onWheelStart = () => {\r\n    const { value } = this.props;\r\n    this.value = value;\r\n  }\r\n\r\n  onHsvWheelStart = () => {\r\n    const hsv = this.getHsvColor();\r\n\r\n    this.hsv = hsv;\r\n  }\r\n\r\n  onWheelMove = (sign: number, offset: number) => {\r\n    const { meta } = this.props;\r\n    const { step } = this.state;\r\n\r\n    let value = this.value + step * offset;\r\n    if (meta?.min !== undefined)\r\n      value = Math.max(meta.min, value);\r\n    \r\n    if (meta?.max !== undefined)\r\n      value = Math.min(value, meta.max);\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onRgbWheelMove = (key: string, sign: number) => {\r\n    const { type, value } = this.props;\r\n    const { negative } = this.state;\r\n    const step = sign * (type === PropertyType.Color ? 10 : 0.01) * this.state.step;\r\n\r\n    value[key] += step;\r\n\r\n    if (type === PropertyType.Color)\r\n      value[key] = this.normalizeValue(value[key], 0, 255);\r\n\r\n    if (!negative)\r\n      value[key] = Math.max(0, value[key]);\r\n\r\n    this.props.onChange(value);\r\n  }\r\n\r\n  onHsvWheelMove = (key: string, sign: number, step: number, min?: number, max?: number) => {\r\n    const { type } = this.props;\r\n\r\n    step *= sign * this.state.step;\r\n\r\n    this.hsv[key] += step;\r\n    if (min !== undefined)\r\n      this.hsv[key] = Math.max(min, this.hsv[key]);\r\n    if (max !== undefined)\r\n      this.hsv[key] = Math.min(this.hsv[key], max);\r\n\r\n    let offset = 0;\r\n    if (this.hsv.h < 0)\r\n      offset = 360;\r\n\r\n    if (type === PropertyType.Color)\r\n      this.hsv = { ...this.hsv, s: this.normalizeValue(this.hsv.s, 0, 1), v: this.normalizeValue(this.hsv.v, 0, 1) };\r\n\r\n    this.hsv = { ...this.hsv, h: offset + this.hsv.h, s: this.normalizeValue(this.hsv.s, 0, 1) };\r\n    const hsv = { ...this.hsv, h: (this.hsv.h / 360) };\r\n    const color = this.hsvToColor(hsv);\r\n\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onRgbStepChange = (factor: number, key: string) => {\r\n    const { value, type } = this.props;\r\n    const { negative } = this.state;\r\n\r\n    value[key] += factor;\r\n\r\n    if (type === PropertyType.Color)\r\n      value[key] = this.normalizeValue(value[key], 0, 255);\r\n\r\n    if (!negative)\r\n      value[key] = Math.max(0, value[key]);\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onHsvStepChange = (factor: number, key: string, min?: number, max?: number) => {\r\n    let hsv = this.getHsvColor();\r\n    let offset = 0;\r\n\r\n    hsv[key] += factor;\r\n    if (min !== undefined)\r\n      this.hsv[key] = Math.max(min, this.hsv[key]);\r\n    if (max !== undefined)\r\n      this.hsv[key] = Math.min(this.hsv[key], max);\r\n\r\n    if (hsv.h < 0)\r\n      offset = 1;\r\n\r\n    if (this.props.type === PropertyType.Color)\r\n      hsv.v = this.normalizeValue(hsv.v, 1, 0);\r\n\r\n    hsv = { ...hsv, h: offset + hsv.h / 360, s: this.normalizeValue(hsv.s, 1, 0) };\r\n\r\n    const color = this.hsvToColor(hsv);\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  getHsvColor = () => {\r\n    const { value, type } = this.props;\r\n    let rgb = value as ColorProperty;\r\n\r\n    if (type === PropertyType.Vector4 || type === PropertyType.LinearColor) {\r\n      let max = 0;\r\n\r\n      for (const key in value)\r\n        if (value[key] > max)\r\n          max = value[key];\r\n\r\n      rgb = WidgetUtilities.colorToRgb(value, max);\r\n    }\r\n\r\n    return this.getHsvValue(rgb);\r\n  }\r\n\r\n  hsvToColor = (hsv: IHsvColor) => {\r\n    const { type } = this.props;\r\n    const rgb = WidgetUtilities.hsv2rgb(hsv);\r\n\r\n    let max = 1;\r\n    let color = rgb as ColorProperty | VectorProperty;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  getInputKey = (type: keyof ColorProperty) => {\r\n    let key = type as keyof VectorProperty | keyof ColorProperty;\r\n\r\n    switch (this.props.type) {\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector4:\r\n        switch (type) {\r\n          case 'R':\r\n            key = 'X';\r\n            break;\r\n\r\n          case 'G':\r\n            key = 'Y';\r\n            break;\r\n\r\n          case 'B':\r\n            key = 'Z';\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n\r\n    return key;\r\n  }\r\n\r\n  getHsvValue = (rgb: ColorProperty): IHsvColor => {\r\n    const { type } = this.props;\r\n    const value = { ...this.props.value };\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    delete value.A;\r\n    delete value.W;\r\n    const values = Object.values(value) as number[];\r\n\r\n    if (type !== PropertyType.Color)\r\n      hsv.v = Math.max(0, ...values);\r\n\r\n    return { ...hsv, h: hsv.h * 360, s: Math.max(0.0001, hsv.s) };\r\n  }\r\n\r\n  renderRgbInput = (type: keyof ColorProperty) => {\r\n    const { value } = this.props;\r\n    const key = this.getInputKey(type);\r\n    let precision = 3;\r\n    let min: number;\r\n    let max: number;\r\n    let { step } = this.state;\r\n\r\n    if (this.props.type === PropertyType.Color) {\r\n      precision = 0;\r\n      min = 0;\r\n      max = 255;\r\n      step *= 50;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ValueInput value={value?.[key]}\r\n                    draggable={false}\r\n                    precision={precision}\r\n                    min={min}\r\n                    max={max}\r\n                    onChange={v => this.onRgbValueInputChange(key, v)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-left']} \r\n                         className=\"precision-icon\"\r\n                         onClick={() => this.onRgbStepChange(-step, key)} />\r\n        <SliderWheel onWheelMove={sign => this.onRgbWheelMove(key, sign)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-right']} \r\n                         className=\"precision-icon\"\r\n                         onClick={() => this.onRgbStepChange(step, key)} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHsvInput = (value: number, key: string, multiplier: number = 0.1, min?: number, max?: number) => {\r\n    const step = multiplier * this.state.step;\r\n    let precision = 3;\r\n    if (this.props.type === PropertyType.Color) {\r\n      precision = (key === 'h' ? 0 : 2);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"slider-label\">{key.toUpperCase()}:</div>\r\n        <ValueInput value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    draggable={false}\r\n                    precision={precision}\r\n                    onChange={v => this.onHsvValueInputChange(key, v)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-left']} className=\"precision-icon\" onClick={() => this.onHsvStepChange(-step, key, min, max)} />\r\n        <SliderWheel onWheelStart={this.onHsvWheelStart} onWheelMove={sign => this.onHsvWheelMove(key, sign, step, min, max)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-right']} className=\"precision-icon\" onClick={() => this.onHsvStepChange(step, key, min, max)} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderMinMaxSlider = () => {\r\n    const { meta, value } = this.props;\r\n\r\n    if (meta?.min === undefined || meta?.max === undefined)\r\n      return null;\r\n\r\n    return (\r\n      <div className=\"row top\">\r\n        <ValueInput value={meta.min}\r\n                    onChange={value => this.props.onMetadataChange('Min', String(value))} />\r\n        <Slider value={value}\r\n                min={meta?.min}\r\n                max={meta?.max}\r\n                onChange={value => this.props.onChange(value)}\r\n                precision={meta?.precision}\r\n                showLabel={false} />\r\n        <ValueInput value={meta.max}\r\n                    onChange={value => this.props.onMetadataChange('Max', String(value))} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSetMeta = (property: keyof State, value: any) => {\r\n    const update: any = {};\r\n    update[property] = value;\r\n    this.setState(update, () => localStorage.setItem(this.props.property, JSON.stringify(this.state)));\r\n  }\r\n\r\n  onRevertChanges = async () => {\r\n    if (!await AlertModal.show('Revert changes?'))\r\n      return;\r\n\r\n    this.props.onChange(this.originalValue);\r\n  }\r\n\r\n  renderNumberPrecicionModal = () => {\r\n    const { meta, value } = this.props;\r\n    const { step, min, max } = this.state;\r\n\r\n    const stepSize = Math.abs(max - min) * 0.1;\r\n    const nextStep = step + stepSize;\r\n    const backStep = step - stepSize <= stepSize ? step / 2 : step - stepSize;\r\n\r\n    const isDisabled = _.isEqual(this.originalValue, value);\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        {this.renderMinMaxSlider()}\r\n        <div className=\"row\">\r\n          <FontAwesomeIcon icon={['fas', 'backward']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(-3)} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-double-left']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(-1)} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-left']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(-0.2)} />\r\n          <ValueInput min={meta?.min}\r\n                      max={meta?.max}\r\n                      precision={meta?.precision}\r\n                      value={value}\r\n                      onChange={this.props.onChange} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-right']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(0.2)} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-double-right']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(1)} />\r\n          <FontAwesomeIcon icon={['fas', 'forward']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(3)} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <SliderWheel onWheelStart={this.onWheelStart} onWheelMove={this.onWheelMove} />\r\n        </div>\r\n        <div className=\"sensitivity-block\">\r\n          <div className=\"step-label\">Sensitivity</div>\r\n          <div className=\"row m-0\">\r\n            <Slider value={step}\r\n                    min={min}\r\n                    max={max}\r\n                    precision={meta?.precision}\r\n                    showLabel={false}\r\n                    onChange={step => this.onSetMeta('step', step)} />\r\n          </div>\r\n          <div className=\"row space\">\r\n            <div className=\"limits\">\r\n              Min\r\n            <ValueInput value={min}\r\n                        draggable={false}\r\n                        min={0.01}\r\n                        onChange={min => this.onSetMeta('min', Math.min(min, max))} />\r\n            </div>\r\n            <div className=\"step-input\">\r\n              <FontAwesomeIcon icon={['fas', 'backward']} className=\"icon\" onClick={() => this.onStepChange(backStep)} />\r\n              <ValueInput value={step}\r\n                          draggable={false}\r\n                          onChange={this.onStepChange} />\r\n              <FontAwesomeIcon icon={['fas', 'forward']} className=\"icon\" onClick={() => this.onStepChange(nextStep)} />\r\n            </div>\r\n            <div className=\"limits\">\r\n              Max\r\n            <ValueInput value={max}\r\n                        min={0.01}\r\n                        draggable={false}\r\n                        onChange={max => this.onSetMeta('max', Math.max(min, max))} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-revert\"\r\n                disabled={isDisabled}\r\n                onClick={this.onRevertChanges}>Revert Changes</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderColorPickerModal = () => {\r\n    const { mode, step, negative } = this.state;\r\n    const { value, type, meta } = this.props;\r\n    const hsv = this.getHsvColor();\r\n\r\n    let rgbBtnClassName = 'btn ';\r\n    let hsvBtnClassName = 'btn ';\r\n\r\n    const isDisabled = _.isEqual(this.originalValue, value);\r\n\r\n    switch (mode) {\r\n      case ColorMode.Rgb:\r\n        rgbBtnClassName += 'btn-primary';\r\n        hsvBtnClassName += 'btn-secondary';\r\n        break;\r\n\r\n      case ColorMode.Hsv:\r\n        rgbBtnClassName += 'btn-secondary';\r\n        hsvBtnClassName += 'btn-primary';\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"main color-picker\">\r\n        <div className=\"row m-0\">\r\n          {type !== PropertyType.Color &&\r\n            <label className=\"toggle-checkbox\">\r\n              <input type=\"checkbox\" checked={negative} onChange={e => this.onSetMeta('negative', e.target.checked)} />\r\n              <span className=\"toggle-label\">Allow Negative Values</span>\r\n            </label>\r\n          }\r\n          <div className=\"btn-group\">\r\n            <button className={rgbBtnClassName}\r\n                    onClick={() => this.setState({ mode: ColorMode.Rgb })}>\r\n              <FontAwesomeIcon icon={['fas', 'circle']} />\r\n            </button>\r\n            <button className={hsvBtnClassName}\r\n                    onClick={() => this.setState({ mode: ColorMode.Hsv })}>\r\n              <FontAwesomeIcon icon={['fas', 'square']} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row start space\">\r\n          <div className=\"slider-wheel-rows\">\r\n            <div className=\"slider-wheel-row\">\r\n              <div className=\"slider-label\">R:</div>\r\n              {this.renderRgbInput('R')}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              <div className=\"slider-label\">G:</div>\r\n              {this.renderRgbInput('G')}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              <div className=\"slider-label\">B:</div>\r\n              {this.renderRgbInput('B')}\r\n            </div>\r\n            {!!meta?.alpha &&\r\n              <div className=\"slider-wheel-row\">\r\n                <div className=\"slider-label\">A:</div>\r\n                {this.renderRgbInput('A')}\r\n              </div>}\r\n            <div className=\"slider-wheel-row\">\r\n              {this.renderHsvInput(hsv?.h, 'h', 3)}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              {this.renderHsvInput(hsv?.s, 's', 0.1, 0.0001, 1)}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              {this.renderHsvInput(hsv?.v, 'v', 0.1, 0.0001)}\r\n            </div>\r\n            <div className=\"sensitivity-slider\">\r\n              <div className=\"step-label\">Sensitivity</div>\r\n              <div className=\"row m-0\">\r\n                <Slider value={step}\r\n                        min={0.1}\r\n                        max={1}\r\n                        showLabel={false}\r\n                        onChange={step => this.onSetMeta('step', step)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"color-container\">\r\n            <ColorPicker value={value}\r\n                         parts={[ColorPickerParts.Circle]}\r\n                         type={type}\r\n                         widget={WidgetTypes.ColorPicker}\r\n                         mode={mode}\r\n                         alpha={!!meta?.alpha}\r\n                         onChange={this.props.onChange} />\r\n            <button className=\"btn btn-revert\"\r\n                    disabled={isDisabled}\r\n                    onClick={this.onRevertChanges}>Revert Changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPrecisionModalContent = () => {\r\n    const { widget } = this.props;\r\n\r\n    switch (widget) {\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n        return this.renderColorPickerModal();\r\n\r\n      default:\r\n        return this.renderNumberPrecicionModal();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { label } = this.props;\r\n\r\n    return (\r\n      <div className=\"fullscreen precision\" onClick={this.onCancel}>\r\n        <div className=\"precision-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <div className=\"label\">\r\n            <p>{label}</p>\r\n          </div>\r\n          {this.renderPrecisionModalContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { _api } from 'src/reducers';\r\nimport { IPreset, IGroup, IExposedProperty, WidgetTypes, ICustomStackProperty, IPanel, ICustomStackTabs, IExposedFunction, \r\n        PropertyType, IView, ITab, TabLayout, ICustomStackWidget, WidgetType, IColorPickerList, ICustomStackItem, ICustomStackListItem } from 'src/shared';\r\nimport { Draggable, Droppable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { AlertModal } from '.';\r\nimport { SlidersWidget, SliderWidget, DropdownWidget, ImageSelectorWidget, ToggleWidget, VectorWidget } from './Widgets';\r\n\r\n//IB: Custom Widgets Start\r\n//import {AgoraIdButton} from './controls/TextAsButtonWithAgoraID';\r\nimport {CustomSliderWidget} from './Widgets/CustomSliderWidget';\r\n//IB: Custom Widgets End\r\n\r\nimport * as Tabs from './Properties';\r\nimport { ColorPicker, Button, Text, Dial, JoysticksWrapper, DialsWrapper } from './controls';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport _ from 'lodash';\r\n\r\n\r\nexport type DropWidgetsType = {\r\n  id: string;\r\n  label: string;\r\n  type: string;\r\n  propertyType?: PropertyType;\r\n}\r\n\r\ntype State = {\r\n  filteredGroups: IGroup[];\r\n  filteredPresets?: IPreset[];\r\n  filteredWidgets: DropWidgetsType[],\r\n\r\n  search: string;\r\n\r\n  editTab: boolean;\r\n  tab: TabType;\r\n\r\n  metadata: Record<string, string>;\r\n\r\n  widget: ICustomStackProperty | ICustomStackTabs | IPanel | IColorPickerList;\r\n  usedProperties: Record<string, boolean>;\r\n};\r\n\r\ntype Props = {\r\n\r\n  //IB: Added prop to pass downstream to buttons\r\n  agoraUserID: string;\r\n  // IB: End\r\n\r\n  selected: string;\r\n  panels: IPanel[];\r\n  presets: IPreset[];\r\n  preset: IPreset;\r\n  view: IView;\r\n  tab: number;\r\n  editable: boolean;\r\n\r\n  lockWidget: (widget: any) => void;\r\n\r\n  onChangeIcon: () => void;\r\n  onRenameTabModal: () => void;\r\n  onDuplicateTab: () => void;\r\n  onUpdateView: (update?: boolean) => void;\r\n  onPresetChange: (preset: IPreset) => void;\r\n  onAddSnapshotTab: () => void;\r\n  onAddSequencerTab: () => void;\r\n  onSelected: (selected: string) => void;\r\n  onNewTabs: (items: ICustomStackListItem[]) => void;\r\n};\r\n\r\nenum TabType {\r\n  Widgets     = 'WIDGETS',\r\n  Properties  = 'PROPERTIES',\r\n  Tab         = 'TAB',\r\n  Presets     = 'PRESETS',\r\n}\r\n\r\nconst tabs = [\r\n  { title: 'Presets',    key: TabType.Presets },\r\n  { title: 'Tab',        key: TabType.Tab },\r\n  { title: 'Widgets',    key: TabType.Widgets },\r\n  { title: 'Properties', key: TabType.Properties },\r\n];\r\n\r\nconst widgets = [\r\n  { id: 'PANEL',                                 type: 'PANEL',                     label: 'Panel' },\r\n  { id: 'LIST',                                  type: 'LIST',                      label: 'List' },\r\n  { id: WidgetTypes.Tabs,                        type: WidgetTypes.Tabs,            label: 'Tabs' },\r\n  { id: WidgetTypes.Label,                       type: WidgetTypes.Label,           label: 'Label' },\r\n  { id: WidgetTypes.Spacer,                      type: WidgetTypes.Spacer,          label: 'Spacer' },\r\n\r\n  { id: WidgetTypes.Dial,                        type: WidgetTypes.Dial,            label: 'Dial',              propertyType: PropertyType.Float },\r\n  { id: `${WidgetTypes.Slider}_WIDGET`,          type: WidgetTypes.Slider,          label: 'Slider',            propertyType: PropertyType.Float },\r\n  { id: WidgetTypes.ColorPicker,                 type: WidgetTypes.ColorPicker,     label: 'Color Picker',      propertyType: PropertyType.LinearColor },\r\n  { id: WidgetTypes.MiniColorPicker,             type: WidgetTypes.MiniColorPicker, label: 'MiniColor Picker',  propertyType: PropertyType.LinearColor },\r\n  { id: `${WidgetTypes.ColorPickerList}_WIDGET`, type: WidgetTypes.ColorPickerList, label: 'Color Picker List', propertyType: PropertyType.LinearColor },\r\n  { id: WidgetTypes.Toggle,                      type: WidgetTypes.Toggle,          label: 'Toggle',            propertyType: PropertyType.Boolean },\r\n  { id: `${WidgetTypes.Joystick}_WIDGET`,        type: WidgetTypes.Joystick,        label: 'Joystick',          propertyType: PropertyType.Vector },\r\n  { id: WidgetTypes.Button,                      type: WidgetTypes.Button,          label: 'Button',            propertyType: PropertyType.Function },\r\n  { id: `${WidgetTypes.Text}_WIDGET`,            type: WidgetTypes.Text,            label: 'Text',              propertyType: PropertyType.Text },\r\n  { id: WidgetTypes.Dropdown,                    type: WidgetTypes.Dropdown,        label: 'Dropdown',          propertyType: PropertyType.Text },\r\n  { id: `${WidgetTypes.Vector}_WIDGET`,          type: WidgetTypes.Vector,          label: 'Vector',            propertyType: PropertyType.Vector },\r\n];\r\n\r\nexport class PropertiesDrawer extends Component<Props, State> {\r\n\r\n  state: State = {\r\n    filteredGroups: [...this.props.preset.Groups],\r\n    filteredWidgets: [..._.sortBy(widgets, w => w.label)],\r\n    filteredPresets: [...this.props.presets],\r\n    search: '',\r\n    editTab: false,\r\n    tab: TabType.Presets,\r\n\r\n    widget: null,\r\n    metadata: {},\r\n    usedProperties: {},\r\n  };\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: State) {\r\n    const { editable, selected, panels, preset, view, tab } = this.props;\r\n\r\n    if (!editable)\r\n      return;\r\n\r\n    if (editable !== prevProps.editable || view !== prevProps.view || tab !== prevProps.tab)\r\n      this.buildPropertyList(view?.tabs?.[tab]);\r\n\r\n    if (view !== prevProps.view || selected && (selected !== prevProps.selected || !_.isEqual(panels, prevProps.panels))) {\r\n      const [path, index, property] = selected?.split('_') ?? [];\r\n\r\n      let widget;\r\n      if (!index)\r\n        widget = this.getWidgetFromElement(preset.Exposed[property] as any); \r\n      else\r\n        widget = _.get(panels, path, panels)[+index];\r\n\r\n      this.setState({ widget, metadata: {} });\r\n    }\r\n\r\n    if (preset !== prevProps.preset){\r\n      const { search } = this.state;\r\n      this.onPropertiesFilter(search);\r\n      this.onPresetFilter(search);\r\n    }\r\n\r\n    if (this.state.tab !== prevState.tab)\r\n      this.resetFilter();\r\n  }\r\n\r\n  buildPropertyList = (tab: ITab) => {\r\n    let usedPropArray = [];\r\n    if (tab?.layout === TabLayout.Stack)\r\n      usedPropArray = _.compact(this.getProperties(tab.panels));\r\n\r\n    const usedProperties = _.uniq(usedPropArray).reduce((result, item) => {\r\n      result[item] = true;\r\n      return result;\r\n    }, {});\r\n\r\n    this.setState({ usedProperties });\r\n  }\r\n\r\n  resetFilter = () => {\r\n    this.setState({\r\n      filteredGroups: [...this.props.preset.Groups],\r\n      filteredWidgets: [..._.sortBy(widgets, w => w.label)],\r\n      filteredPresets: [...this.props.presets],\r\n    });\r\n  }\r\n\r\n  getProperties = (items: any[]) => {\r\n    if (!items)\r\n      return [];\r\n\r\n    const properties = [];\r\n    for (const item of items) {\r\n      switch (item.type) {\r\n        case 'LIST':\r\n          for (const listItem of item.items)\r\n            properties.push(...this.getProperties(listItem.panels));\r\n          break;\r\n\r\n        case 'PANEL':\r\n          properties.push(...this.getProperties(item.widgets));\r\n          break;\r\n\r\n        default:\r\n          properties.push(...this.getPropertiesofWidget(item));\r\n          break;\r\n      }\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  getPropertiesofWidget = (item: any) => {\r\n    const properties = [];\r\n    switch (item.widget) {\r\n      case WidgetTypes.Tabs:\r\n        for (const tab of item.tabs)\r\n          properties.push(...this.getProperties(tab.widgets));\r\n        break;\r\n\r\n      case WidgetTypes.ColorPickerList:\r\n        for (const picker of item.items)\r\n          properties.push(picker.property);\r\n        break;\r\n\r\n      default:\r\n        properties.push(item.property);\r\n        break;\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDragging)\r\n      return { ...style, transform: 'none' };\r\n\r\n    if (!snapshot.isDropAnimating)\r\n      return { ...style, height: 'auto', width: 'auto', minWidth: '350px' };\r\n\r\n    return { ...style, height: 'auto', width: 'auto', minWidth: '350px', transitionDuration: '0.001s' };\r\n  }\r\n\r\n  onPropertiesFilter = (search: string) => {\r\n    const { preset } = this.props;\r\n\r\n    let filteredGroups = preset.Groups;\r\n    if (search)\r\n      filteredGroups = _.map(preset.Groups, group => this.filterGroup(group, search));\r\n\r\n    this.setState({ filteredGroups, search });\r\n  }\r\n\r\n  onWidgetsFilter = (search: string) => {\r\n    const filteredWidgets = _.sortBy(widgets.filter(widget => widget.label.toLowerCase().slice(0, search.length) === search), w => w.label);\r\n\r\n    this.setState({ filteredWidgets });\r\n  }\r\n\r\n  filterGroup = (group: IGroup, search: string): IGroup => ({\r\n    ...group,\r\n    ExposedProperties: _.filter(group.ExposedProperties, prop => prop.DisplayName.toLowerCase().indexOf(search) !== -1),\r\n    ExposedFunctions: _.filter(group.ExposedFunctions, func => func.DisplayName.toLowerCase().indexOf(search) !== -1),\r\n  });\r\n\r\n  onPresetFilter = (search: string) => {\r\n    const { presets } = this.props;\r\n\r\n    let filteredPresets = presets;\r\n    if (search)\r\n      filteredPresets = presets.filter(preset => preset.Name.toLowerCase().indexOf(search) !== -1);\r\n\r\n    this.setState({ filteredPresets, search });\r\n  }\r\n\r\n  onViewUpdatedDebounced = _.debounce(this.props.onUpdateView, 400);\r\n\r\n  getWidgetFromElement = (element: IExposedProperty & IExposedFunction): ICustomStackProperty => {\r\n    if (!element)\r\n      return null;\r\n\r\n    return {\r\n      property: element.ID,\r\n      propertyType: element?.Type,\r\n      widget: element.Metadata?.Widget,\r\n    };\r\n  };\r\n\r\n  onWidgetRemove = async (title: string) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    if (!await AlertModal.show(title))\r\n      return;\r\n\r\n    const widgets = _.get(panels, path, panels);\r\n    widgets.splice(+index, 1);\r\n\r\n    this.props.onUpdateView(true);\r\n  }\r\n\r\n  onWidgetTabRemove = async (i: number) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    if (!await AlertModal.show('Are you sure you want to delete this tab?'))\r\n      return;\r\n\r\n    const widgets = _.get(panels, `${path}[${index}]tabs`, panels);\r\n    widgets.splice(i, 1);\r\n\r\n    this.props.onUpdateView();\r\n  }\r\n\r\n  onListItemRemove = async (i: number) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    if (!await AlertModal.show('Are you sure you want to delete this item?'))\r\n      return;\r\n\r\n    const items = _.get(panels, `${path}[${index}]items`, panels); \r\n    items.splice(i, 1);\r\n\r\n    this.props.onUpdateView();\r\n  }\r\n\r\n  onChange = (property: string, value: any) => {\r\n    const { selected, panels } = this.props;\r\n    const widget = { ...this.state.widget };\r\n    const [path, index] = selected.split('_');\r\n\r\n    _.set(widget, property, value);\r\n    this.setState({ widget } as any);\r\n    let widgets = _.get(panels, path, panels);\r\n\r\n    _.set(widgets, `${index}.${property}`, value);\r\n    this.onViewUpdatedDebounced();\r\n  }\r\n\r\n  renderWidget = (widget: ICustomStackProperty) => {\r\n    if (!widget)\r\n      return null;\r\n\r\n    this.props.lockWidget([widget]);\r\n\r\n    switch (widget.widget) {\r\n      case WidgetTypes.Sliders:\r\n        return <SlidersWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Slider:\r\n        return <SliderWidget />;\r\n\r\n      //IB: Custom Widgets Start\r\n      //case WidgetTypes.AgoraButton:\r\n        //return <AgoraIdButton agoraUserID={this.props.agoraUserID}/>;\r\n\r\n      case WidgetTypes.CustomWidget:\r\n        return <CustomSliderWidget />;\r\n      //IB: Custom Widgets End\r\n\r\n      case WidgetTypes.Dropdown:\r\n        return <DropdownWidget />;\r\n\r\n      case WidgetTypes.ImageSelector:\r\n        return <ImageSelectorWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Toggle:\r\n        return <ToggleWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Label:\r\n        return <div className=\"label\">Label</div>;\r\n\r\n      case WidgetTypes.Text:\r\n        return (\r\n          <div className=\"slider-row text-row\">\r\n            <div className=\"title\">Text</div>\r\n            <Text value=\"Text\" />\r\n            <FontAwesomeIcon icon={['fas', 'undo']} />\r\n          </div>\r\n        );\r\n\r\n      case WidgetTypes.Vector:\r\n        return <VectorWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Button:\r\n        return (\r\n          <div className=\"btn-wrapper\">\r\n            <Button />\r\n          </div>\r\n        );\r\n\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n        return <ColorPicker widget={widget.widget} />;\r\n\r\n      case WidgetTypes.Joystick:\r\n        return <JoysticksWrapper type={PropertyType.Vector} />;\r\n\r\n      case WidgetTypes.Dial:\r\n        return <Dial />;\r\n\r\n      case WidgetTypes.Dials:\r\n        return <DialsWrapper type={widget.propertyType} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderTabsEdit = () => {\r\n    const widget = this.state.widget as ICustomStackTabs;\r\n\r\n    return (\r\n      <>\r\n        <Droppable droppableId={widget.id} type=\"TABS-REORDER\">\r\n          {provided => (\r\n            <div className=\"properties-list\"\r\n                 ref={provided.innerRef}\r\n                 {...provided.droppableProps}>\r\n              {widget.tabs?.map((widget, i) => (\r\n                <Draggable key={widget.id} draggableId={`REORDER_${widget.id}`} index={i}>\r\n                  {provided => (\r\n                    <div ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         className=\"properties-field line\">\r\n                      <span {...provided.dragHandleProps}\r\n                            className=\"drag-handle\"\r\n                            tabIndex={-1}>\r\n                        <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                      </span>\r\n                      <input type=\"text\"\r\n                             value={widget.label ?? ''}\r\n                             onChange={e => this.onChange(`tabs[${i}]label`, e.target.value)} />\r\n                      <FontAwesomeIcon className=\"icon\" icon={['fas', 'times']} onClick={() => this.onWidgetTabRemove(i)} />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <div className=\"btn-container\">\r\n          <button className=\"btn btn-primary\"\r\n                  onClick={() => this.onChange(`tabs[${widget.tabs.length}]`, { label: `Tab ${widget.tabs.length + 1}`, widgets: [] })}>\r\n            Add new tab\r\n            </button>\r\n        </div>\r\n        {this.renderDelete('Tabs')}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderListsEdit = () => {\r\n    const widget = this.state.widget as IPanel;\r\n\r\n    return (\r\n      <>\r\n      <Droppable droppableId={widget.id} type=\"LIST-REORDER\">\r\n          {provided => (\r\n            <div className=\"properties-list\"\r\n                 ref={provided.innerRef}\r\n                 {...provided.droppableProps}>\r\n              {widget.items?.map((item, i) => (\r\n                <Draggable draggableId={`REORDER_${item.id}`} index={i} key={item.id}>\r\n                  {provided => (\r\n                    <div ref={provided.innerRef}\r\n                         {...provided.draggableProps}  \r\n                         className=\"properties-field line\">\r\n                      <span {...provided.dragHandleProps}\r\n                            className=\"drag-handle\"\r\n                            tabIndex={-1}>\r\n                        <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                      </span>\r\n                      <input type=\"text\"\r\n                             value={item.label ?? ''}\r\n                             onChange={e => this.onChange(`items[${i}]label`, e.target.value)} />\r\n                      {widget.items?.length > 1 && <FontAwesomeIcon className=\"icon\" icon={['fas', 'times']} onClick={this.onListItemRemove.bind(this, i)} />}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n      </Droppable>\r\n        <div className=\"btn-container\">\r\n          <button className=\"btn btn-primary\"\r\n                  onClick={this.onChange.bind(this, `items[${widget.items.length}]`, { label: `Item ${widget.items.length + 1}`, panels: [] })}>\r\n            Add new item\r\n            </button>\r\n        </div>\r\n        {this.renderDelete('List')}\r\n        <div className=\"btn-container\">\r\n          <button className=\"btn btn-secondary\" onClick={() => this.props.onNewTabs(widget.items)}>\r\n            Create Tabs from List Item\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderColorPickersListEdit = () => {\r\n    return this.renderDelete('Color Picker List');\r\n  }\r\n\r\n  renderColorPickerEdit = (available: boolean) => {\r\n    const { preset } = this.props;\r\n    const colorPicker = this.state.widget as ICustomStackProperty;\r\n\r\n    const exposed = preset?.Exposed[colorPicker?.property] as IExposedProperty;\r\n    let checked = false;\r\n\r\n    if (exposed?.Metadata?.Alpha === '1')\r\n      checked = true;    \r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n          {colorPicker.propertyType !== PropertyType.Vector4 &&\r\n            <div className=\"properties-field\">\r\n              <label>Show Alpha</label>\r\n              <input className=\"checkbox\" type=\"checkbox\" onChange={e => this.onMetadataChange(colorPicker, 'Alpha', e.target.checked ? '1' : '0')} checked={checked} />\r\n            </div>}\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderPanelEdit = () => {\r\n    const panel = this.state.widget as IPanel;\r\n\r\n    return (\r\n      <div className=\"properties-list\">\r\n        <div className=\"properties-field\">\r\n          <label>Panel Title</label>\r\n          <input type=\"text\"\r\n                value={panel?.title ?? ''}\r\n                onChange={e => this.onChange('title', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"properties-field\">\r\n          <label>Is template</label>\r\n          <input className=\"checkbox\" type=\"checkbox\" checked={!!panel?.isTemplate} onChange={e => this.onChange('isTemplate', e.target.checked)} />\r\n        </div>\r\n        {this.renderDelete('Panel')}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onMetadataChange = (widget: Partial<ICustomStackProperty>, key: string, value: string) => {\r\n    const metadata = { ...this.state.metadata };\r\n    metadata[key] = value;\r\n\r\n    this.setState({ metadata });\r\n    _api.payload.metadata(widget.property, key, value);\r\n  }\r\n\r\n  onDiscardStateMetadata = (key: string) => {\r\n    const metadata = { ...this.state.metadata };\r\n    delete metadata[key];\r\n    this.setState({ metadata });\r\n  }\r\n\r\n  onVectorModeChange = (widget: ICustomStackProperty, value: WidgetTypes.Joystick | WidgetTypes.Sliders | WidgetTypes.Dial | string, initial?: string[]) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    const w = _.get(panels, `${path}.${index}`, panels);\r\n    let widgets = _.xor(w?.widgets || [], [value]);\r\n\r\n    if (initial) {\r\n      const diff = _.compact(initial.map(key => widgets.find(el => el === key)));\r\n\r\n      if (!diff.length)\r\n        widgets.push(value);\r\n    }\r\n\r\n    w.widgets = widgets;\r\n    widget.widgets = widgets;\r\n    \r\n    this.props.onUpdateView();\r\n  }\r\n\r\n  renderPropertyLabel = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    let value = '', placeholder;\r\n    const exposed = preset?.Exposed[widget?.property] as IExposedProperty;\r\n    if (exposed) {\r\n      placeholder = exposed.DisplayName;\r\n      value = this.state.metadata.Description || exposed.Metadata?.Description || '';\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {/* {exposed &&\r\n          <div className=\"properties-title\">{exposed.OwnerObjects?.[0]?.Name} {exposed.UnderlyingProperty?.Name}</div>\r\n        } */}\r\n        <div className=\"properties-field\">\r\n          <label>Label</label>\r\n          <input type=\"text\"\r\n                  placeholder={placeholder}\r\n                  value={value}\r\n                  onChange={e => this.onMetadataChange(widget, 'Description', e.target.value)}\r\n                  onBlur={() => this.onDiscardStateMetadata('Description')} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderMinMax = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    switch (widget?.widget) {\r\n      case WidgetTypes.Dial:\r\n      case WidgetTypes.Dials:\r\n      case WidgetTypes.Slider:\r\n\r\n      //IB: Custom Widgets Start\r\n        // Agora button won't need Min-Max\r\n      case WidgetTypes.CustomWidget:\r\n      //IB: Custom Widgets End\r\n      case WidgetTypes.Joystick:\r\n      case WidgetTypes.ScaleSlider:\r\n      case WidgetTypes.Sliders:\r\n      case WidgetTypes.Vector:\r\n        const range = WidgetUtilities.getMinMax(preset, widget?.property);\r\n        const { Min, Max } = this.state.metadata;\r\n\r\n        return (\r\n          <>\r\n            <div className=\"properties-field\">\r\n              <label>Minimum</label>\r\n              <input type=\"number\"\r\n                     value={Min ?? range?.min ?? ''}\r\n                     onChange={e => this.onMetadataChange(widget, 'Min', e.target.value)}\r\n                     onBlur={() => this.onDiscardStateMetadata('Min')} />\r\n            </div>\r\n            <div className=\"properties-field\">\r\n              <label>Maximum</label>\r\n              <input type=\"number\"\r\n                     value={Max ?? range?.max ?? ''}\r\n                     onChange={e => this.onMetadataChange(widget, 'Max', e.target.value)}\r\n                     onBlur={() => this.onDiscardStateMetadata('Max')} />\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderDelete = (title?: string) => {\r\n    return (\r\n      <div key=\"delete\" className=\"btn-container\">\r\n        <button className=\"btn btn-danger\" onClick={() => this.onWidgetRemove('Are you sure you want to delete?')}>Delete {title ?? 'Widget'}</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLabelEdit = () => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"properties-list\">\r\n          <div className=\"properties-field\">\r\n            <label>Label</label>\r\n            <input value={widget.label} onChange={e => this.onChange('label', e.target.value)} />\r\n          </div>\r\n        </div>\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderSpacerEdit = () => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"properties-list\">\r\n          <div className=\"properties-field\">\r\n            <label>Rows</label>\r\n            <input type=\"number\"\r\n                   value={String(widget?.spaces || 1) ?? ''}\r\n                   onChange={e => this.onChange('spaces', +e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderDialEdit = (available: boolean) => {\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {this.renderMinMax()}\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderVectorEdit = (available: boolean) => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const vectorModes = widget?.widgets || [];\r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {widget.propertyType !== PropertyType.Rotator &&\r\n              this.renderMinMax()\r\n            }\r\n            <div className=\"properties-field\">\r\n              <label>Modes</label>\r\n              <div className=\"btn-group vector-btn-group\">\r\n                {widget.propertyType !== PropertyType.Rotator &&\r\n                  <button className={`btn ${vectorModes.includes(WidgetTypes.Joystick) ? 'btn-primary' : 'btn-secondary'}`} \r\n                          onClick={() => this.onVectorModeChange(widget, WidgetTypes.Joystick)}>Joystick</button>\r\n                }\r\n                <button className={`btn ${vectorModes.includes(WidgetTypes.Dial) ? 'btn-primary' : 'btn-secondary'}`} \r\n                        onClick={() => this.onVectorModeChange(widget, WidgetTypes.Dial)}>Dial</button>\r\n                <button className={`btn ${vectorModes.includes(WidgetTypes.Sliders) ? 'btn-primary' : 'btn-secondary'}`} \r\n                        onClick={() => this.onVectorModeChange(widget, WidgetTypes.Sliders)}>Sliders</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderDialsEdit = (available: boolean) => {\r\n    return this.renderSlidersEdit(available);\r\n  }\r\n\r\n  renderSlidersEdit = (available: boolean) => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const keys = WidgetUtilities.getPropertyKeys(widget?.propertyType);\r\n    const vectorModes = widget?.widgets || [];\r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {this.renderMinMax()}\r\n            <div className=\"properties-field\">\r\n              <label>Properties</label>\r\n              <div className=\"btn-group vector-btn-group\">\r\n                {keys.map(key => <button key={key}\r\n                                         className={`btn ${vectorModes.includes(key) ? 'btn-primary' : 'btn-secondary'}`}\r\n                                         onClick={() => this.onVectorModeChange(widget, key, keys)}>{key}</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onFunctionParameterChanged = (widget: ICustomStackWidget, param: string, value?: any) => {\r\n    const metadata = { ...this.state.metadata };\r\n    metadata[param] = value;\r\n    this.setState({ metadata });\r\n    _.set(widget, param, value);\r\n    this.onViewUpdatedDebounced();\r\n  };\r\n\r\n  renderFunctionEdit = () => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const { preset } = this.props;\r\n    const properties = [];\r\n\r\n    const func = preset?.Exposed[widget?.property] as IExposedFunction;\r\n    if (func?.UnderlyingFunction?.Arguments) {\r\n      const { metadata } = this.state;\r\n      const ueLabel = func.Metadata?.Description || func.DisplayName;\r\n      const label = metadata.label || widget.label || '';\r\n      properties.push(<div key=\"label\" className=\"property properties-field\">\r\n        <label>Label</label>\r\n        <input type=\"text\" placeholder={ueLabel} value={label} onChange={e => this.onFunctionParameterChanged(widget, 'label', e.target.value)} />\r\n      </div>);\r\n      for (let i = 0; i < func.UnderlyingFunction.Arguments.length; i++) {\r\n        const arg = func.UnderlyingFunction.Arguments[i];\r\n\r\n        const value = metadata[arg.Name] ?? widget.args?.[arg.Name];\r\n        const argName = `args.${arg.Name}`;\r\n        switch (arg.Type) {\r\n          case PropertyType.String:\r\n          case PropertyType.Text:\r\n            properties.push(<div key={i} className=\"property properties-field\">\r\n              <label>{arg.Name}</label>\r\n              <input type=\"text\" value={value || ''} onChange={e => this.onFunctionParameterChanged(widget, argName, e.target.value)} />\r\n            </div>);\r\n            break;\r\n\r\n          case PropertyType.Uint8:\r\n          case PropertyType.Boolean:\r\n            properties.push(<div key={i} className=\"property properties-field\">\r\n              <input className=\"checkbox\" type=\"checkbox\" checked={!!value} onChange={e => this.onFunctionParameterChanged(widget, argName, e.target.checked)} />\r\n              <label>{arg.Name}</label>\r\n            </div>);\r\n            break;\r\n\r\n          case PropertyType.Int8:\r\n          case PropertyType.Int16:\r\n          case PropertyType.Int32:\r\n          case PropertyType.Uint16:\r\n          case PropertyType.Uint32:\r\n          case PropertyType.Float:\r\n            properties.push(<div key={i} className=\"property properties-field\">\r\n              <label>{arg.Name}</label>\r\n              <input type=\"number\" value={value || ''} onChange={e => this.onFunctionParameterChanged(widget, argName, +e.target.value)} />\r\n            </div>);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    properties.push(this.renderDelete());\r\n    return properties;\r\n  }\r\n\r\n  renderProperties = (available: boolean) => {\r\n    const { selected } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const panel = this.state.widget as IPanel;\r\n\r\n    if (!selected || !widget)\r\n      return null;\r\n    \r\n    switch (widget?.widget || panel.type) {\r\n      case WidgetTypes.Tabs:\r\n        return this.renderTabsEdit();\r\n\r\n      case 'LIST':        \r\n        return this.renderListsEdit();\r\n\r\n      case 'PANEL':\r\n        return this.renderPanelEdit();\r\n\r\n      case WidgetTypes.ColorPickerList:\r\n        return this.renderColorPickersListEdit();\r\n\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n        return this.renderColorPickerEdit(available);\r\n\r\n      case WidgetTypes.Label:\r\n        return this.renderLabelEdit();\r\n\r\n      case WidgetTypes.Spacer:\r\n        return this.renderSpacerEdit();\r\n\r\n      case WidgetTypes.Dial:\r\n        return this.renderDialEdit(available);\r\n\r\n      case WidgetTypes.Dials:\r\n        return this.renderDialsEdit(available);\r\n\r\n      case WidgetTypes.Vector:\r\n        return this.renderVectorEdit(available);\r\n\r\n      case WidgetTypes.Sliders:\r\n        return this.renderSlidersEdit(available);\r\n\r\n      case WidgetTypes.Button:\r\n        return this.renderFunctionEdit();\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {this.renderMinMax()}\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  isPropertyUsed = (id: string) => {\r\n    const { usedProperties } = this.state;\r\n    return usedProperties[id];\r\n  }\r\n\r\n  isPropertyAvailable = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    return !!(widget?.property && preset?.Exposed[widget.property]);\r\n  }\r\n\r\n  onWidgetTypeChanged = (widget: ICustomStackProperty, type: WidgetType) => {\r\n    this.onMetadataChange(widget, 'Widget', type);\r\n    \r\n    if (widget.widget) {\r\n      widget.widget = type;\r\n      this.props.onUpdateView();\r\n    }\r\n  }\r\n\r\n  renderCompatibleProperties = (available: boolean) => {\r\n    const { selected, preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    if (!selected || !widget || !widget.widget)\r\n      return null;\r\n\r\n    switch (widget.widget) {\r\n      case WidgetTypes.Button:\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n      case WidgetTypes.Dial:\r\n      case WidgetTypes.Dials:\r\n      case WidgetTypes.Dropdown:\r\n      case WidgetTypes.ImageSelector:\r\n      case WidgetTypes.Joystick:\r\n      case WidgetTypes.Slider:\r\n\r\n      //IB: Custom Widgets Start\r\n      //case WidgetTypes.AgoraButton:\r\n      case WidgetTypes.CustomWidget:\r\n      //IB: Custom Widgets End \r\n      case WidgetTypes.Sliders:\r\n      case WidgetTypes.Text:\r\n      case WidgetTypes.Toggle:\r\n      case WidgetTypes.Vector:\r\n        break;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n\r\n    const compatible = _.filter(preset.Exposed, w => w.Metadata.Widget === widget.widget);\r\n    const onPropertyChange = (id: string) => {\r\n      const element = preset.Exposed[id];\r\n\r\n      widget.propertyType = element?.Type;\r\n      widget.property = id;\r\n\r\n      this.props.onUpdateView();\r\n    };\r\n\r\n    return (\r\n      <div className=\"types-selection\">\r\n        <div className=\"dropdown-widget properties-field\">\r\n          <label>Property</label>\r\n          {!available && <FontAwesomeIcon icon={['fas', 'exclamation-circle']} className=\"unbound-icon\" />}\r\n          <select className=\"dropdown\" value={widget.property || ''} onChange={e => onPropertyChange(e.target.value)}>\r\n            {!available && <option value=\"\">Unbound Property</option>}\r\n            {compatible.map(option => \r\n              <option key={option.ID} value={option.ID}>{this.isPropertyUsed(option.ID) ? '• ' : ' '}{option.DisplayName}</option>\r\n            )}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCompatibleWidgets = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    if (!widget || !preset)\r\n      return null;\r\n\r\n    const property = preset.Exposed[widget.property];\r\n    const compatible = WidgetUtilities.getCompatibleWidgets(property?.Type);\r\n    const noValue = !property?.Metadata?.Widget || !compatible.find(w => property.Metadata.Widget === w);\r\n\r\n    return (\r\n      <div className=\"dropdown-widget properties-field\">\r\n        <label>Widget</label>\r\n        {!!noValue && <FontAwesomeIcon icon={['fas', 'exclamation-circle']} className=\"unbound-icon\" />}\r\n        <select className=\"dropdown\" value={property?.Metadata?.Widget || ''} onChange={e => this.onWidgetTypeChanged(widget, e.target.value)}>\r\n          {!!noValue &&\r\n            <option value=\"\">[ No Widget Selected ]</option>\r\n          }\r\n          {compatible.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  renderDraggableItem = (element: IExposedProperty & IExposedFunction, index: number) => {\r\n    const { selected } = this.props;\r\n    let draggableId = `${element.DisplayName}_`;\r\n\r\n    switch (element.Metadata?.Widget) {\r\n      case WidgetTypes.Button:\r\n        draggableId += WidgetTypes.Button;\r\n        break;\r\n\r\n      case WidgetTypes.ColorPicker:\r\n        draggableId += WidgetTypes.ColorPicker;\r\n        break;\r\n\r\n      case WidgetTypes.MiniColorPicker:\r\n        draggableId += WidgetTypes.MiniColorPicker;\r\n        break;\r\n\r\n      case WidgetTypes.Toggle:\r\n        draggableId += WidgetTypes.Toggle;\r\n        break;\r\n\r\n      case WidgetTypes.Dial:\r\n        draggableId += WidgetTypes.Dial;\r\n        break;\r\n\r\n      case WidgetTypes.Dials:\r\n        draggableId += WidgetTypes.Dials;\r\n        break;\r\n\r\n      default:\r\n        draggableId += 'WIDGET';\r\n        break;\r\n    }\r\n\r\n    let widgetClassName = 'draggable-widget control-widget ';\r\n    let property = _.last(selected?.split('_')) || null;\r\n    let isDragDisabled = !element.Metadata?.Widget?.length;\r\n\r\n    if (this.isPropertyUsed(element.ID))\r\n      widgetClassName += 'widget-in-use ';\r\n\r\n    if (property === element.ID)\r\n      widgetClassName += 'selected ';\r\n\r\n    if (isDragDisabled)\r\n      widgetClassName += 'disabled ';\r\n\r\n    const widget = (\r\n      <div className={widgetClassName} data-tooltip={element.DisplayName}>\r\n        <img src=\"/images/GripDotsBlocks.svg\" alt=\"Drag\" className=\"grip-handle\"/>\r\n        <label>{element.DisplayName}</label>\r\n        <div className=\"item-icon\">\r\n          {element.Metadata?.Widget}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Draggable key={draggableId} draggableId={draggableId} index={index} isDragDisabled={isDragDisabled}>\r\n        {(provided, snapshot) => (\r\n          <>\r\n            {snapshot.isDragging && widget}\r\n            <li {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                onClick={this.props.onSelected.bind(this, `__${element.ID}`)}>\r\n              {!snapshot.isDragging ? widget : (\r\n                <div className=\"dragging-overlay\">\r\n                  {this.renderWidget(this.getWidgetFromElement(element))}\r\n                </div>\r\n              )}\r\n            </li>\r\n          </>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n\r\n  renderTab = (tab: { title: string, key: TabType }) => {\r\n    const { view } = this.props;\r\n    const { title, key } = tab;\r\n\r\n    if (!view.tabs.length && key !== TabType.Presets)\r\n      return null;\r\n\r\n    let className = 'drawer-nav-tab ';\r\n\r\n    if (this.state.tab === key)\r\n      className += 'active';\r\n\r\n    return (\r\n      <li className={className} key={key} onClick={() => this.setState({ tab: key })}>\r\n        {title}\r\n      </li>\r\n    );\r\n  }\r\n\r\n  renderTabContent = () => {\r\n    const { preset } = this.props;\r\n    const { filteredGroups, filteredWidgets, filteredPresets, tab } = this.state;\r\n\r\n    switch (tab) {\r\n      case TabType.Properties:\r\n        return <Tabs.Properties groups={filteredGroups}\r\n                                preset={preset}                                \r\n                                renderDraggableItem={this.renderDraggableItem}\r\n                                onWidgetsLock={exposed => this.props.lockWidget(exposed.map(this.getWidgetFromElement))}\r\n                                onSerach={this.onPropertiesFilter} />;\r\n\r\n      case TabType.Tab:\r\n        return <Tabs.Tab onChangeIcon={this.props.onChangeIcon}\r\n                         onRenameTabModal={this.props.onRenameTabModal}\r\n                         onDuplicateTab={this.props.onDuplicateTab}\r\n                         onAddSnapshotTab={this.props.onAddSnapshotTab}\r\n                         onAddSequencerTab={this.props.onAddSequencerTab} />;\r\n\r\n      case TabType.Widgets:\r\n        return <Tabs.Widgets widgets={filteredWidgets}\r\n                             renderWidget={this.renderWidget}\r\n                             onSearch={this.onWidgetsFilter} />;\r\n\r\n      case TabType.Presets:\r\n        return <Tabs.Pressets preset={preset}\r\n                              pressets={filteredPresets}\r\n                              onPresetChange={this.props.onPresetChange}\r\n                              onSearch={this.onPresetFilter} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.editable)\r\n      return null;\r\n\r\n    const { editTab } = this.state;\r\n    let className = 'drawer list ';\r\n\r\n    if (editTab)\r\n      className += 'tab-editable';\r\n\r\n    const available = this.isPropertyAvailable();\r\n\r\n    return (\r\n      <nav id=\"tabs-drawer-layout\" className={className}>\r\n        <ul className=\"drawer-nav\">\r\n          {tabs.map(this.renderTab)}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {this.renderTabContent()}\r\n        </div>\r\n        <div className='nav-properties'>\r\n          <div className=\"properties-grid\">\r\n            {this.renderCompatibleProperties(available)}\r\n            {this.renderProperties(available)}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}","//IB: Custom Widget\r\nimport React from 'react';\r\nimport { Slider, ValueInput } from '../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { PropertyValue } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  value?: any;\r\n  label?: React.ReactNode;\r\n  min?: number;\r\n  max?: number;\r\n  precision?: number\r\n\r\n  onPrecisionModal?: () => void;\r\n  onChange?: (value?: PropertyValue) => void;\r\n}\r\n\r\nexport class CustomSliderWidget extends React.Component<Props> {\r\n  render() {\r\n    const { value, label = '', min, max, precision } = this.props;\r\n    const isRange = (min !== undefined && max !== undefined);\r\n\r\n    return (\r\n      <div className=\"slider-row\">\r\n        <div className=\"title\">{label}</div>\r\n        {\r\n        //<FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={this.props?.onPrecisionModal} />\r\n        }\r\n        <ValueInput min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    value={value}\r\n                    onChange={this.props.onChange} />\r\n\r\n        {isRange &&\r\n          <>\r\n            <div className=\"limits\">{min.toFixed(1)}</div>\r\n            <Slider value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    showLabel={false}\r\n                    onChange={this.props.onChange} />\r\n            <div className=\"limits\">{max.toFixed(1)}</div>\r\n          </>\r\n        }\r\n        <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange()} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { _api, ReduxState } from 'src/reducers';\r\nimport { ColorProperty, ICustomStackProperty, ICustomStackTabs, ICustomStackWidget, IPanel, IPanelType, IPreset,\r\n        IPayload, PropertyType, PropertyValue, VectorProperty, WidgetTypes, IExposedProperty, IExposedFunction, IColorPickerList, ICustomStackListItem, IProperty } from 'src/shared';\r\nimport { ColorPicker, ColorPickerList, Button, Text, VectorDrawer, Dial, JoysticksWrapper, DialMode, DialsWrapper } from './controls';\r\nimport { PrecisionModal } from '../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { DraggableWidget, DroppableWidget, VirtualList } from '.';\r\nimport * as Widgets from './Widgets';\r\nimport { WidgetUtilities } from '../utilities';\r\nimport _ from 'lodash';\r\nimport { AlertModal } from './modals';\r\n\r\n//IB: Custom Widgets Start\r\n//import { AgoraIdButton } from './controls/TextAsButtonWithAgoraID';\r\nimport { CustomSliderWidget } from './Widgets/CustomSliderWidget';\r\n//IB: Custom Widgets End\r\n\r\n\r\ntype PropsFromState = Partial<{\r\n  payload: IPayload;\r\n  preset: IPreset;\r\n}>;\r\n\r\ntype Props = {\r\n  //IB: Added prop to pass downstream to buttons\r\n  agoraUserID: string;\r\n  // IB: End\r\n  editable: boolean;\r\n  visible?: boolean;\r\n  panels: IPanel[];\r\n  tabKey: string;\r\n  dragging: string;\r\n  droppable: string;\r\n  selected: string;\r\n  hoverTab: string;\r\n  vector: ICustomStackProperty;\r\n\r\n  onSelected: (selected: string) => void;\r\n  onSetVectorDrawer: (vector?: ICustomStackProperty) => void;\r\n  getDroppableId: (id: string, path: string, accept: string[], type: string) => string;\r\n};\r\n\r\ninterface IPanelTemplate {\r\n  matching: Record<string, string>;\r\n  selected?: string;\r\n}\r\n\r\ntype State = {\r\n  selection: Record<string, string>;\r\n  draggingId: string;\r\n  templates: Record<string, IPanelTemplate>;\r\n\r\n  precisionModal?: { widget: ICustomStackProperty, property?: string };\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxState, props: Props): PropsFromState => ({\r\n  payload: state.api.payload,\r\n  preset: state.api.presets[state.api.preset],\r\n});\r\n\r\nconst tempId = 'TEMP_ID';\r\n\r\n@(connect(mapStateToProps) as any)\r\nexport class Stack extends React.Component<Props & PropsFromState, State> {\r\n\r\n  state: State = {\r\n    selection: {},\r\n    draggingId: null,\r\n    templates: {},\r\n  };\r\n\r\n  dropIndex = -1;\r\n  root = null;  \r\n  scrollY = null;\r\n  isIos = false;\r\n\r\n  componentDidMount() {\r\n    this.root = document.querySelector('.droppable-root') as any;\r\n    this.isIos = /iPad|iPhone|iPod/.test(navigator.platform);\r\n\r\n    this.root.ontouchmove = (e) => {\r\n      const touches = e.touches;\r\n      const touch = touches[0];\r\n\r\n      if (touches.length !== 2)\r\n        return;\r\n\r\n      if (!this.scrollY)\r\n        this.scrollY = touch.pageY + this.root.scrollTop;\r\n        \r\n      this.root.scrollTo(0, this.scrollY - touch.pageY);\r\n    };\r\n\r\n    this.root.ongesturechange = (e) => e.preventDefault();    \r\n    this.root.ongestureend = (e) => {\r\n      e.preventDefault();\r\n      this.scrollY = null;\r\n    };    \r\n\r\n    try {\r\n      const templates = JSON.parse(sessionStorage.getItem('templates'));\r\n      if (templates)\r\n        this.setState({ templates });\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.root.ontouchmove = null;\r\n    this.root.ongesturechange = null;\r\n    this.root.ongestureend = null;\r\n  }\r\n\r\n  shouldComponentUpdate(prevProps: Props) {\r\n    const { visible } = this.props;\r\n\r\n    return visible || prevProps.visible !== visible;\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { dragging, hoverTab } = this.props;\r\n\r\n    if (!dragging && dragging !== prevProps.dragging)\r\n      this.setState({ draggingId: null });\r\n\r\n    if (hoverTab !== prevProps.hoverTab)\r\n      this.onPointerEnter(hoverTab);\r\n  }\r\n\r\n  getLabel = (widget: ICustomStackProperty) => {\r\n    if (!widget)\r\n      return null;\r\n\r\n    const { preset } = this.props; \r\n    const exposed = preset?.Exposed[widget.property];\r\n    if (exposed)\r\n      return widget.label || exposed.Metadata?.Description || exposed.DisplayName;\r\n\r\n    return (\r\n      <div className=\"unbound-property\">\r\n        <FontAwesomeIcon icon={['fas', 'exclamation-circle']} />\r\n        <span>Unbound Property</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPropertyValue = (property: string) => {\r\n    if (!property)\r\n      return;\r\n\r\n    return this.props.payload[property];\r\n  }\r\n\r\n  getValue = (widget: ICustomStackProperty): any=> {\r\n    return this.getPropertyValue(widget?.property);\r\n  }\r\n\r\n  onPropertyValueChange = async (widget: ICustomStackProperty, value?: PropertyValue) => {\r\n    const { preset } = this.props;\r\n    if (!widget?.property || !preset?.Exposed[widget.property])\r\n      return;\r\n\r\n    //IB: Using Reserved Label for Button 'Pilot' parameter so that we can auto-pass Agora User ID.\r\n    // Pilot must have _AgoraUserID argument, but if is empty it is ommited from the call.\r\n    try {\r\n      if(widget.label ==='Pilot' && widget.propertyType ==='Function' && widget.widget ==='Button')\r\n      {\r\n        //this.props.agoraUserID\r\n        return _api.payload.execute(widget.property, {'_AgoraUserID':this.props.agoraUserID});\r\n      }\r\n    } catch (error) { \r\n      console.log(error);\r\n    }\r\n    // IB: End Reserved function parameter.\r\n    if (widget.propertyType === PropertyType.Function)\r\n      return _api.payload.execute(widget.property, widget.args);\r\n\r\n    if (value === undefined && !await AlertModal.show('Reset to default?'))\r\n      return;\r\n\r\n    _api.payload.set(widget.property, value);\r\n  }\r\n\r\n  onThrottledPropertyValueChange = _.throttle((widget, value) => this.onPropertyValueChange(widget, value), 100);\r\n\r\n  onDragChange = (draggingId: string) => {\r\n    const { dragging } = this.props;\r\n\r\n    if (!!dragging)\r\n      return;\r\n\r\n    this.setState({ draggingId });\r\n  };\r\n\r\n  onSelect = (prefix: string, id: string) => {\r\n    const selection = { ...this.state.selection };\r\n\r\n    selection[prefix] = id;\r\n    this.setState({ selection });\r\n  }\r\n\r\n  onPointerEnter = (value: string) => {\r\n    const [prefix, id] = value.split('_');\r\n    const { selection, draggingId } = this.state;\r\n    const { dragging } = this.props;\r\n\r\n    if (!dragging || _.first(draggingId?.split('_')) === 'NAVIGATION')\r\n      return;\r\n\r\n    if (selection[prefix] !== id) {\r\n      selection[prefix] = id;\r\n\r\n      this.setState({ selection });\r\n    }\r\n  }\r\n\r\n  getMetadata = (property: IExposedProperty | IExposedFunction, field: string) => {\r\n    const str = property?.Metadata?.[field];\r\n    if (str === undefined)\r\n      return;\r\n\r\n    const number = parseFloat(str);\r\n    if (isNaN(number))\r\n      return;\r\n    \r\n    return number;\r\n  }\r\n\r\n  getWidgetMetadata = (widget: ICustomStackProperty) => {\r\n    const { preset } = this.props;\r\n    const property = preset.Exposed[widget.property];\r\n    const type = property?.Type;\r\n    const precision = WidgetUtilities.getPropertyPrecision(type);\r\n    const alpha = !!this.getMetadata(property, 'Alpha');\r\n    let min = this.getMetadata(property, 'Min');\r\n    let max = this.getMetadata(property, 'Max');\r\n    if (type === PropertyType.Rotator) {\r\n      if (min === undefined)\r\n        min = -180;\r\n      if (max === undefined)\r\n        max = 180;\r\n    }\r\n\r\n    return { type, min, max, precision, alpha };\r\n  }\r\n\r\n  getAlpha = (property: string) => {\r\n    const { preset } = this.props;\r\n    const meta = preset.Exposed[property]?.Metadata;\r\n    return meta?.Alpha === '1';\r\n  }\r\n\r\n  renderPrecisionModal = () => {\r\n    const { precisionModal } = this.state;\r\n    if (!precisionModal?.widget || !precisionModal.widget?.property)\r\n      return null;\r\n\r\n    const { preset } = this.props;\r\n    const { widget, property } = precisionModal;\r\n    if (!preset?.Exposed[widget.property])\r\n      return null;\r\n\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const label = this.getLabel(widget);\r\n    const type = widget.propertyType;\r\n\r\n    let value = this.getValue(widget);\r\n    let onChange;\r\n    \r\n    switch (type) {\r\n      case PropertyType.Rotator:\r\n      case PropertyType.Vector:\r\n        value = value[property];\r\n        onChange = (newValue) => this.onPropertyAxisValueChange(widget, property, newValue);\r\n        break;\r\n\r\n      default:\r\n        onChange = (newValue) => this.onThrottledPropertyValueChange(widget, newValue);\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <PrecisionModal meta={meta}\r\n                      widget={widget.widget}\r\n                      property={widget.property}\r\n                      label={label}\r\n                      type={type}\r\n                      value={value}\r\n                      onChange={onChange}\r\n                      onMetadataChange={(key, value) => _api.payload.metadata(widget.property, key, value)}\r\n                      onClose={() => this.setState({ precisionModal: null })} />\r\n    );\r\n  }\r\n\r\n  getWidgetId = (widget: ICustomStackWidget, index: number) => {\r\n    if (!widget.id)\r\n      return tempId + index;\r\n\r\n    return `${widget.id}_WIDGET`;\r\n  }\r\n\r\n  renderSlider = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"slider\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.SliderWidget value={this.getValue(widget)}\r\n                              min={meta.min}\r\n                              max={meta.max}\r\n                              precision={meta.precision}\r\n                              label={this.getLabel(widget)}\r\n                              onPrecisionModal={() => this.setState({ precisionModal: { widget } })}\r\n                              onChange={value => this.onThrottledPropertyValueChange(widget, value)} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  //IB: Custom Widgets Start\r\n  renderCustomSlider = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"slider\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <CustomSliderWidget value={this.getValue(widget)}\r\n                              min={meta.min}\r\n                              max={meta.max}\r\n                              precision={meta.precision}\r\n                              label={this.getLabel(widget)}\r\n                              onPrecisionModal={() => this.setState({ precisionModal: { widget } })}\r\n                              onChange={value => this.onThrottledPropertyValueChange(widget, value)} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n  /*renderAgoraButtonWidgets = (widgets: ICustomStackProperty[], index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const button = _.first(widgets);\r\n\r\n    if (!button.id)\r\n      return null;\r\n\r\n    const draggableId = `${WidgetTypes.AgoraButton}_${button.id}`;\r\n    const droppableId = this.props.getDroppableId(button.id, path, [WidgetTypes.AgoraButton], 'BUTTONS');\r\n\r\n    let isDropDisabled = false;\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n\r\n    return (\r\n      <DraggableWidget key={draggableId}\r\n                       draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"buttons-list\"\r\n                       isDragDisabled>\r\n        <DroppableWidget droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={WidgetTypes.AgoraButton}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, i) => {\r\n            const draggableId = `${widget.id}_${WidgetTypes.AgoraButton}`;\r\n            const selection = `${path}_${index + i}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId + i}\r\n                               draggableId={draggableId}\r\n                               index={index + i}\r\n                               className=\"btn-wrapper\"\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <AgoraIdButton agoraUserID={this.props.agoraUserID} label={this.getLabel(widget)} onChange={value => this.onPropertyValueChange(widget, value)} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }*/\r\n  //IB: Custom Widgets End\r\n\r\n  renderSliders = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       className=\"sliders\"\r\n                       index={index}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.SlidersWidget widget={widget}\r\n                                label={this.getLabel(widget)}\r\n                                min={meta.min}\r\n                                max={meta.max}\r\n                                value={this.getValue(widget)}\r\n                                onChange={this.onPropertyAxisValueChange}\r\n                                onPrecisionModal={property => this.setState({ precisionModal: { widget, property } })} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderColorPickerList = (widget: IColorPickerList, index: number, path: string) => {\r\n    const { droppable, selected, editable, dragging, preset } = this.props;\r\n\r\n    const selection = `${path}_${index}_${WidgetTypes.ColorPickerList}`;\r\n    const draggableId = `${widget.id}_${WidgetTypes.ColorPickerList}` || tempId;\r\n    const droppableId = this.props.getDroppableId(widget.id, `${path}[${index}]items`, [WidgetTypes.ColorPicker, WidgetTypes.MiniColorPicker], 'COLORS_LIST') || tempId;\r\n    const isDropDisabled = (droppable !== droppableId);\r\n\r\n    return (\r\n      <DraggableWidget draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"color-pickers-list\"\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       key={draggableId}\r\n                       isDragDisabled={!editable}>\r\n        <DroppableWidget key={droppableId}\r\n                         droppableId={droppableId}\r\n                         className=\"multiline-widget-wrapper\"\r\n                         isDropDisabled={isDropDisabled}>\r\n          <ColorPickerList list={widget}\r\n                           path={`${path}[${index}]items`}\r\n                           selection={selected}\r\n                           dragging={dragging}\r\n                           isDragDisabled={!editable}\r\n                           onSelect={this.props.onSelected}\r\n                           getPropertyValue={this.getPropertyValue}\r\n                           getPropertyLabel={this.getLabel}\r\n                           getAlpha={this.getAlpha}\r\n                           onChange={this.onThrottledPropertyValueChange}\r\n                           onPrecisionModal={widget => this.setState({ precisionModal: { widget } })} />\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderColorList = (widgets: ICustomStackProperty[], listIndex: number, path: string) => {\r\n    const { droppable, preset } = this.props;\r\n    const first = _.first(widgets);\r\n\r\n    if (!first)\r\n      return null;\r\n\r\n    const property = preset.Exposed[first.property];\r\n    const type = property?.Metadata?.Widget ?? first.widget;\r\n    const droppableId = this.props.getDroppableId(first.id, path, [type], 'COLOR_LIST') || tempId;\r\n    const isDropDisabled = (droppable !== droppableId);\r\n\r\n    return (\r\n      <DraggableWidget draggableId={first.id || tempId}\r\n                       index={listIndex}\r\n                       isDragDisabled\r\n                       className=\"colors-list\"\r\n                       key={first.id || tempId}>\r\n        <DroppableWidget key={droppableId}\r\n                         droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={type as WidgetTypes}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, index) => {\r\n            const draggableId = `${widget.id}_${type}` || tempId;\r\n            const value = this.getValue(widget) as ColorProperty | VectorProperty;\r\n            const selection = `${path}_${index + listIndex}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId}\r\n                               draggableId={draggableId}\r\n                               index={index + listIndex}\r\n                               className=\"color\"\r\n                               onPointerChange={this.onDragChange}\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <ColorPicker value={value}\r\n                             label={this.getLabel(widget)}\r\n                             type={widget.propertyType}\r\n                             alpha={this.getAlpha(widget.property)}\r\n                             widget={property?.Metadata?.Widget ?? widget.widget}\r\n                             onChange={value => this.onThrottledPropertyValueChange(widget, value)}\r\n                             onPrecisionModal={() => this.setState({ precisionModal: { widget } })} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderTabs = (widget: ICustomStackTabs, index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const selection = { ...this.state.selection };\r\n    const options = widget.tabs.map(tab => ({ value: tab.id, label: tab.label }));\r\n    const firstTab = _.first(widget.tabs);\r\n\r\n    let selected = selection[widget.id];\r\n    let tab = _.find(widget.tabs, ['id', selected]);\r\n\r\n    if (!tab) {\r\n      selected = firstTab?.id;\r\n      tab = firstTab;\r\n    }\r\n\r\n    const onSelect = (id: string) => this.onSelect(widget.id, id);\r\n    const draggableId = this.getWidgetId(widget, index);\r\n    this.props.getDroppableId(widget.id, `${path}[${index}]`, [], 'TABS');\r\n\r\n    return (\r\n      <DraggableWidget draggableId={draggableId}\r\n                       key={draggableId}\r\n                       index={index}\r\n                       onSelect={this.props.onSelected.bind(this, `${path}_${index}_PROPERTY`)}\r\n                       selected={this.props.selected === `${path}_${index}_PROPERTY`}\r\n                       className=\"tab-group\"\r\n                       isDragDisabled>\r\n        <Widgets.TabWidget options={options}\r\n                          onSelect={onSelect}\r\n                          prefix={widget.id}\r\n                          value={selected} />\r\n        <div style={{ width: '100%', position: 'relative' }}>\r\n          {widget.tabs.map((w, i) => {\r\n            const droppableId = this.props.getDroppableId(w.id, `${path}[${index}]tabs[${i}]widgets`,\r\n              [\r\n                'WIDGET',\r\n                WidgetTypes.Dial,\r\n                WidgetTypes.Button,\r\n                WidgetTypes.Toggle,\r\n                WidgetTypes.ColorPicker,\r\n                WidgetTypes.MiniColorPicker,\r\n                WidgetTypes.ColorPickerList,\r\n                WidgetTypes.Label,\r\n                WidgetTypes.Spacer\r\n              ], WidgetTypes.Tabs);\r\n            const isSelected = w.id === tab.id;\r\n\r\n            let isDropDisabled = false;\r\n            let className = 'droppable-list ';\r\n\r\n            if (!isSelected)\r\n              className += 'hidden';\r\n\r\n            if (droppable !== droppableId)\r\n              isDropDisabled = true;\r\n\r\n            return (\r\n              <DroppableWidget key={droppableId}\r\n                               droppableId={droppableId}\r\n                               className={className}\r\n                               isDropDisabled={isDropDisabled}>\r\n                {this.renderWidgets(w.widgets, `${path}[${index}]tabs[${i}]widgets`)}\r\n              </DroppableWidget>\r\n            );\r\n          })}\r\n        </div>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderListItemContent = (item: ICustomStackListItem, index: number, isSelected: boolean) => {\r\n    const { droppable, editable } = this.props;\r\n    const path = `[0]items[${index}]panels`;\r\n    const droppableId = this.props.getDroppableId(item.id, path,\r\n      [\r\n        'WIDGET',\r\n        'PANEL',\r\n        WidgetTypes.Button,\r\n        WidgetTypes.Toggle,\r\n        WidgetTypes.ColorPicker,\r\n        WidgetTypes.MiniColorPicker,\r\n        WidgetTypes.Tabs,\r\n        WidgetTypes.Dial,\r\n        WidgetTypes.Label,\r\n        WidgetTypes.Spacer,\r\n        WidgetTypes.ColorPickerList,\r\n        WidgetTypes.Dropdown,\r\n      ], 'LIST');\r\n\r\n    let isDropDisabled = false;\r\n    let className = 'droppable-root ';\r\n\r\n    if (!isSelected)\r\n      className += 'hidden ';\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n\r\n    if (!editable)\r\n      return <VirtualList droppableId={droppableId}\r\n                          data={item.panels}\r\n                          className={className}\r\n                          isDropDisabled={isDropDisabled}\r\n                          itemContent={(index, panel) => this.renderPanel('', panel, index)} />;\r\n\r\n    return (\r\n      <DroppableWidget droppableId={droppableId}\r\n                       key={item.id}\r\n                       className={className}\r\n                       isDropDisabled={isDropDisabled}>\r\n        {item.panels?.map((panel, index) => this.renderPanel(path, panel, index))}\r\n      </DroppableWidget>\r\n    );\r\n\r\n  }\r\n\r\n  renderList = (list: IPanel) => {\r\n    const { editable } = this.props;\r\n    const selection = { ...this.state.selection };\r\n    const listId = list.id;\r\n    const firstListItem = _.first(list?.items);\r\n\r\n    let selected = selection[list.id];\r\n    let selectedItem = _.find(list.items, ['id', selected]);\r\n\r\n    if (!selectedItem) {\r\n      selected = firstListItem?.id;\r\n      selectedItem = firstListItem;\r\n    }\r\n\r\n    const onSelect = (id: any) => {\r\n      selection[list.id] = id;\r\n      this.setState({ selection });\r\n    };\r\n\r\n    this.props.getDroppableId(listId, `0`, [], 'LIST');\r\n\r\n    return (\r\n      <DraggableWidget key={listId}\r\n                       draggableId={listId}\r\n                       index={0}\r\n                       className=\"navigation-list\"\r\n                       onSelect={this.props.onSelected.bind(this, '_0')}\r\n                       selected={this.props.selected === '_0'}\r\n                       isDragDisabled>\r\n        <div className=\"navigation\">\r\n          {list.items?.map((item, index) => {\r\n            const itemId = item.id;\r\n\r\n            return (\r\n              <div className=\"navigation-row\" \r\n                   data-prefix={list.id} \r\n                   data-value={itemId}\r\n                   key={itemId}>\r\n                <button className={`navigation-btn ${selected === item.id ? 'selected' : ''}`} \r\n                        onClick={() => onSelect(item.id)}><p>{item.label}</p></button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"navigation-list-panels\">\r\n          {editable &&\r\n            list.items.map((item, index) => this.renderListItemContent(item, index, item.id === selectedItem.id))\r\n          }\r\n          {!editable &&\r\n            this.renderListItemContent(selectedItem, 0, true)\r\n          }\r\n        </div>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderDropdown = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const property = this.props.preset.Exposed[widget.property] as IExposedProperty;\r\n    const options = property?.UnderlyingProperty?.Metadata?.EnumValues?.split(',').map(value => value.trim()) ?? [];\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget draggableId={id}\r\n                       index={index}\r\n                       key={id}\r\n                       className=\"dropdown\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.DropdownWidget options={options}\r\n                                value={this.getValue(widget)}\r\n                                label={this.getLabel(widget)}\r\n                                onChange={value => this.onPropertyValueChange(widget, value)} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderSpacerWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const height = (widget?.spaces || 1) * 10 + 'px';\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget draggableId={id}\r\n                       index={index}\r\n                       key={id}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <div style={{ height }} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderImageSelector = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"image-selector\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, `${path}_${index}`)}\r\n                       selected={this.props.selected === `${path}_${index}`}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.ImageSelectorWidget widget={widget}\r\n                             value={this.getValue(widget)}\r\n                             onChange={this.onPropertyValueChange} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderToggleWidgets = (widgets: ICustomStackProperty[], index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const toggle = _.first(widgets);\r\n\r\n    if (!toggle.id)\r\n      return null;\r\n\r\n    const draggableId = `${WidgetTypes.Toggle}_${toggle.id}`;\r\n    const droppableId = this.props.getDroppableId(toggle.id, path, [WidgetTypes.Toggle], 'TOGGLES');\r\n\r\n    let isDropDisabled = false;\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n\r\n    return (\r\n      <DraggableWidget key={draggableId}\r\n                       draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"toggles-list\"\r\n                       isDragDisabled>\r\n        <DroppableWidget droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={WidgetTypes.Toggle}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, i) => {\r\n            const draggableId = `${widget.id}_${WidgetTypes.Toggle}`;\r\n            const selection = `${path}_${index + i}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId + i}\r\n                               draggableId={draggableId}\r\n                               index={index + i}\r\n                               className=\"toggle\"\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <Widgets.ToggleWidget widget={widget}\r\n                              checked={!!this.getValue(widget)}\r\n                              label={this.getLabel(widget)}\r\n                              onChange={this.onPropertyValueChange} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderLabel = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"label\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        {widget.label}\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderTextWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const onChange = this.onPropertyValueChange.bind(this, widget);\r\n    const id = this.getWidgetId(widget, index);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget className=\"slider-row text-row\"\r\n                       key={id}\r\n                       index={index}\r\n                       draggableId={id}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <div className=\"title\">{this.getLabel(widget)}</div>\r\n        <Text value={this.getValue(widget)} onChange={onChange} />\r\n        <FontAwesomeIcon icon={['fas', 'undo']} onClick={onChange} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderDialsWidget = (widget: ICustomStackProperty, index: number, path: string) => {    \r\n    const id = this.getWidgetId(widget, index);    \r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    const rotator = widget.propertyType === PropertyType.Rotator;\r\n    const { min, max } = this.getWidgetMetadata(widget);\r\n\r\n    let dialMode = DialMode.Endless;\r\n\r\n    if (min !== undefined && max !== undefined)\r\n      dialMode = DialMode.Range;\r\n\r\n    if (rotator)\r\n      dialMode = DialMode.Rotation;\r\n      \r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"vector-dials\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <DialsWrapper type={widget.propertyType}\r\n                      min={min}\r\n                      max={max}\r\n                      mode={dialMode}\r\n                      hidePrecision={true}\r\n                      properties={widget?.widgets}\r\n                      value={this.getValue(widget)}\r\n                      label={this.getLabel(widget)}\r\n                      onChange={value => this.onThrottledPropertyValueChange(widget, value)} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderDialWidgets = (widgets: ICustomStackProperty[], index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const dial = _.first(widgets);\r\n\r\n    if (!dial?.id)\r\n      return null;\r\n\r\n    const draggableId = `${WidgetTypes.Dial}_${dial.id}`;\r\n    const droppableId = this.props.getDroppableId(dial.id, path, [WidgetTypes.Dial], 'DIALS');\r\n\r\n    let isDropDisabled = false;\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n      \r\n    return (\r\n      <DraggableWidget key={draggableId}\r\n                       draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"dials-list\"\r\n                       isDragDisabled>\r\n        <DroppableWidget droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={WidgetTypes.Dial}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, i) => {\r\n            const draggableId = `${widget.id}_${WidgetTypes.Dial}`;\r\n            const meta = this.getWidgetMetadata(widget);\r\n            const mode = (meta.min !== undefined && meta.max !== undefined) ? DialMode.Range : DialMode.Endless;\r\n            const selection = `${path}_${index + i}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId + i}\r\n                               draggableId={draggableId}\r\n                               index={index + i}\r\n                               className=\"dial\"\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <Dial value={this.getValue(widget)}\r\n                      label={this.getLabel(widget)}\r\n                      onChange={value => this.onThrottledPropertyValueChange(widget, value)}\r\n                      min={meta.min}\r\n                      max={meta.max}\r\n                      mode={mode}\r\n                      onPrecisionModal={() => this.setState({ precisionModal: { widget } })} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  onPropertyAxisValueChange = (widget: ICustomStackProperty, axis: string, axisValue: number, locked?: boolean) => {\r\n    const value = this.getValue(widget) ?? {};\r\n\r\n    // Reset\r\n    if (axis === undefined || axisValue === undefined)\r\n      return this.onPropertyValueChange(widget);\r\n\r\n    let prev = value[axis];\r\n    if (prev === 0 || prev === undefined)\r\n      prev = 1;\r\n\r\n    let ratio = Math.max(0.001, axisValue) / prev;\r\n\r\n    if (locked && !isNaN(ratio)) {\r\n      const keys = Object.keys(value);\r\n      for (const key of keys)\r\n        value[key] *= ratio;\r\n    } else {\r\n      value[axis] = axisValue;\r\n    }\r\n\r\n    this.onThrottledPropertyValueChange(widget, value);\r\n  }\r\n\r\n  onToggleVectorDrawer = (vector: ICustomStackProperty) => {\r\n    if (this.props.vector?.id === vector.id)\r\n      vector = null;\r\n\r\n    this.props.onSetVectorDrawer(vector);\r\n  }\r\n\r\n  renderVectorWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const { vector } = this.props;\r\n    const id = this.getWidgetId(widget, index);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"vector\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.VectorWidget widget={widget}\r\n                              label={this.getLabel(widget)}\r\n                              value={this.getValue(widget)}\r\n                              vector={vector}\r\n                              min={meta.min}\r\n                              max={meta.max}\r\n                              onAxisChange={this.onPropertyAxisValueChange}\r\n                              onToggleVectorDrawer={this.onToggleVectorDrawer}\r\n                              onSetVector={this.props.onSetVectorDrawer} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderButtonWidgets = (widgets: ICustomStackProperty[], index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const button = _.first(widgets);\r\n\r\n    if (!button.id)\r\n      return null;\r\n\r\n    const draggableId = `${WidgetTypes.Button}_${button.id}`;\r\n    const droppableId = this.props.getDroppableId(button.id, path, [WidgetTypes.Button], 'BUTTONS');\r\n\r\n    let isDropDisabled = false;\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n\r\n    return (\r\n      <DraggableWidget key={draggableId}\r\n                       draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"buttons-list\"\r\n                       isDragDisabled>\r\n        <DroppableWidget droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={WidgetTypes.Button}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, i) => {\r\n            const draggableId = `${widget.id}_${WidgetTypes.Button}`;\r\n            const selection = `${path}_${index + i}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId + i}\r\n                               draggableId={draggableId}\r\n                               index={index + i}\r\n                               className=\"btn-wrapper\"\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <Button label={this.getLabel(widget)} onExecute={() => this.onPropertyValueChange(widget)} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderJoysticks = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const keys = WidgetUtilities.getPropertyKeys(widget?.propertyType);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       index={index}\r\n                       draggableId={id}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}\r\n                       className=\"joystick-group\">\r\n        <div className=\"joystick-group\">\r\n          <JoysticksWrapper type={PropertyType.Vector}\r\n                            keys={keys}\r\n                            value={this.getValue(widget)}\r\n                            min={meta.min}\r\n                            max={meta.max}\r\n                            label={this.getLabel(widget)}\r\n                            onChange={v => this.onThrottledPropertyValueChange(widget, v)} />\r\n        </div>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  getInlineWidgets = (elements: React.ReactNode[], widgets: ICustomStackWidget[], type: WidgetTypes, index: number, limit: number) => {\r\n    const w = [];\r\n\r\n    for (let i = 0; i < limit; i++) {\r\n      if (this.getWidgetType(widgets[index] as ICustomStackProperty) !== type)\r\n        break;\r\n\r\n      const draggableId = `${index}_${widgets[index].id}`;\r\n      elements.push(<DraggableWidget key={draggableId} draggableId={draggableId} index={index} />);\r\n\r\n      w.push(widgets[index++] as ICustomStackProperty);\r\n    }\r\n\r\n    return w;\r\n  }\r\n\r\n  getWidgetType = (widget: ICustomStackProperty) => {\r\n    const { preset } = this.props;\r\n    const property = preset?.Exposed[widget?.property];\r\n    return property?.Metadata?.Widget || widget?.widget;\r\n  }\r\n\r\n  renderWidgets = (widgets: ICustomStackWidget[], path: string) => {\r\n    const elements = [];\r\n    let firstIndex = null;\r\n    let w = [];\r\n\r\n    for (let index = 0; index < widgets.length; index++) {\r\n      const widget = widgets[index] as ICustomStackProperty;\r\n      const widgetType = this.getWidgetType(widget);\r\n      widget.widget = widgetType;\r\n\r\n      let element = null;\r\n      switch (widgetType) {\r\n        case WidgetTypes.Tabs:\r\n          element = this.renderTabs(widgets[index] as ICustomStackTabs, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Sliders:\r\n          element = this.renderSliders(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.ImageSelector:\r\n          element = this.renderImageSelector(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Spacer:\r\n          element = this.renderSpacerWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Joystick:\r\n          element = this.renderJoysticks(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Dropdown:\r\n          element = this.renderDropdown(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Label:\r\n          element = this.renderLabel(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Slider:\r\n          element = this.renderSlider(widget, index, path);\r\n          break;\r\n\r\n        //IB: Custom Widgets Start\r\n        case WidgetTypes.CustomWidget:\r\n          element = this.renderCustomSlider(widget, index, path);\r\n          break;\r\n\r\n        /*case WidgetTypes.AgoraButton: \r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.AgoraButton, index, 4);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderAgoraButtonWidgets(w, firstIndex, path));\r\n          break;*/\r\n        //IB: Custom Widgets End\r\n\r\n        case WidgetTypes.Text:\r\n          element = this.renderTextWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Vector:\r\n          element = this.renderVectorWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Dials:\r\n          element = this.renderDialsWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Dial:\r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.Dial, index, 3);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderDialWidgets(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.Toggle: \r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.Toggle, index, 4);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderToggleWidgets(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.Button: \r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.Button, index, 4);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderButtonWidgets(w, firstIndex, path));\r\n          break;\r\n\r\n\r\n        case WidgetTypes.ColorPicker:\r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.ColorPicker, index, 3);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderColorList(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.MiniColorPicker:\r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.MiniColorPicker, index, 3);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderColorList(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.ColorPickerList:\r\n          elements.push(this.renderColorPickerList(widgets[index] as IColorPickerList, index, path));\r\n          break;\r\n\r\n        default:\r\n          element = <DraggableWidget draggableId={index.toString()} key={index} index={index} isDragDisabled />;\r\n          break;\r\n      };\r\n\r\n      elements.push(element);\r\n    }\r\n\r\n    return elements;\r\n  };\r\n\r\n  getPanelProperties = (panel: IPanel) => {\r\n    const ids = [];\r\n\r\n    for (const p of panel.widgets || []) {\r\n      const widget = p as ICustomStackProperty;\r\n\r\n      switch (p.widget) {\r\n        case WidgetTypes.Tabs:\r\n          const tabs = p as ICustomStackTabs;\r\n          for (const tab of tabs.tabs || [])\r\n            tab.widgets.map((w: ICustomStackProperty) => ids.push(w.property));\r\n          break;\r\n\r\n        case WidgetTypes.ColorPickerList:\r\n          const pickerList = p as IColorPickerList;\r\n          for (const pickerItem of pickerList.items ?? [])\r\n            ids.push(pickerItem.property);\r\n          break;\r\n  \r\n        default:\r\n          ids.push(widget.property);\r\n          break;\r\n      }\r\n    }\r\n\r\n\r\n    return _.compact(ids);\r\n  }\r\n\r\n  onRefreshPanelOptions = async (panel: IPanel) => {\r\n    const { preset } = this.props;\r\n\r\n    const PropertyIds = this.getPanelProperties(panel);\r\n    if (!PropertyIds.length)\r\n      return;\r\n\r\n    const matching = await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'FindMatchingActorsToRebind',\r\n      {\r\n        PresetId: preset.ID,\r\n        PropertyIds\r\n      });\r\n\r\n    \r\n    const selected = await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'GetOwnerActorLabel',\r\n      {\r\n        PresetId: preset.ID,\r\n        PropertyIds\r\n      });\r\n\r\n\r\n    const templates = { ...this.state.templates };\r\n    templates[panel.id] = { matching: matching?.ReturnValue, selected: selected?.ReturnValue };\r\n\r\n    this.setState({ templates });\r\n    sessionStorage.setItem('templates', JSON.stringify(templates));\r\n  }\r\n\r\n  onRebindActor = (panel: IPanel, selected: string) => {\r\n    const templates = { ...this.state.templates };\r\n    const template = templates[panel.id];\r\n    if (!template)\r\n      return;\r\n\r\n    const owner = template.matching[selected];\r\n    if (!owner)\r\n      return;\r\n\r\n    const ids = this.getPanelProperties(panel);\r\n    _api.payload.rebind(ids, owner);\r\n\r\n    template.selected = selected;\r\n    this.setState({ templates });\r\n    sessionStorage.setItem('templates', JSON.stringify(templates));\r\n  }\r\n\r\n  renderPanel = (path: string, panel: IPanel, index: number,) => {\r\n    const { editable, droppable } = this.props;\r\n\r\n    if (!panel.id)\r\n      return null;\r\n\r\n    switch (panel.type) {\r\n      case IPanelType.Panel:\r\n        const draggableId = `${panel.id}_PANEL`;\r\n        const panelPath = `${path}[${index}]widgets`;\r\n        const droppableId = this.props.getDroppableId(draggableId, panelPath,\r\n          [\r\n            'WIDGET',\r\n            WidgetTypes.Button,\r\n            WidgetTypes.Toggle,\r\n            WidgetTypes.ColorPicker,\r\n            WidgetTypes.MiniColorPicker,\r\n            WidgetTypes.ColorPickerList,\r\n            WidgetTypes.Tabs,\r\n            WidgetTypes.Dial,\r\n            WidgetTypes.Dials,\r\n            WidgetTypes.Label,\r\n            WidgetTypes.Spacer,\r\n            WidgetTypes.Dropdown,\r\n          ], 'PANEL');\r\n\r\n        let isDropDisabled = false;\r\n\r\n        if (droppable !== droppableId)\r\n          isDropDisabled = true;\r\n\r\n        const template = this.state.templates[panel.id];\r\n        return (\r\n          <DraggableWidget draggableId={draggableId}\r\n                           key={draggableId}\r\n                           index={index}\r\n                           className={`draggable-panel`}\r\n                           onSelect={this.props.onSelected.bind(this, `${path}_${index}`)}\r\n                           selected={`${this.props.selected}` === `${path}_${index}`}\r\n                           isDragDisabled={!editable}>\r\n            <DroppableWidget droppableId={droppableId}\r\n                             className={`droppable-panel ${!!panel?.title || !!panel?.isTemplate ? 'has-title' : ''}`}\r\n                             isDropDisabled={isDropDisabled}>\r\n              {!!panel?.title && <div className=\"title\">{panel.title}</div>}\r\n              {!!panel.isTemplate && (\r\n                <div className=\"title\">\r\n                    <select className=\"dropdown template-property-select\" \r\n                            tabIndex={-1}\r\n                            onFocus={this.isIos ? null : () => this.onRefreshPanelOptions(panel)}\r\n                            value={template?.selected ? template?.selected : undefined} \r\n                            onChange={e => this.onRebindActor(panel, e.target.value)}>\r\n                      {Object.keys(template?.matching ? template?.matching :{'Click to Select Actor': ''} ).map(match =>\r\n                        <option key={match} value={match}>{match}</option>\r\n                      )}\r\n                    </select>\r\n                    {this.isIos && \r\n                      <button onClick={() => this.onRefreshPanelOptions(panel)}><FontAwesomeIcon icon={['fas', 'sync-alt']} /></button>\r\n                    }\r\n                </div>\r\n              )}\r\n              {this.renderWidgets(panel.widgets, panelPath)}\r\n            </DroppableWidget>\r\n          </DraggableWidget>\r\n        );\r\n\r\n      case IPanelType.List:\r\n        return this.renderList(panel);\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderVectorDrawer = () => {\r\n    const { vector } = this.props;\r\n    if (!vector)\r\n      return null;\r\n\r\n    const meta = this.getWidgetMetadata(vector);\r\n    if (!meta.type)\r\n      return null;\r\n\r\n    return (\r\n      <VectorDrawer widget={vector}\r\n                    label={this.getLabel(vector)}\r\n                    value={this.getValue(vector)}\r\n                    min={meta.min}\r\n                    max={meta.max}\r\n                    onClose={this.props.onSetVectorDrawer}\r\n                    onChange={value => this.onThrottledPropertyValueChange(vector, value)} />\r\n    );\r\n  }\r\n\r\n  renderRootList = () => {\r\n    const { editable, droppable, panels = [], tabKey } = this.props;\r\n    const isList = panels[0]?.type === IPanelType.List;\r\n    const droppableId = this.props.getDroppableId(`${tabKey}_ROOT`, '', ['ALL'], 'ROOT');\r\n\r\n    let isDropDisabled = false;\r\n    if (droppable !== droppableId || isList)\r\n      isDropDisabled = true;\r\n\r\n    if (editable)\r\n      return (\r\n        <DroppableWidget droppableId={droppableId} \r\n                         className=\"droppable-root\" \r\n                         isDropDisabled={isDropDisabled}>\r\n          {panels?.map((panel, index) => this.renderPanel('', panel, index))}\r\n        </DroppableWidget>\r\n      );\r\n\r\n    return <VirtualList droppableId={droppableId}\r\n                        data={panels}\r\n                        className=\"droppable-root\"\r\n                        isDropDisabled={isDropDisabled}\r\n                        itemContent={(index, panel) => this.renderPanel('', panel, index)} />;\r\n  }\r\n\r\n  render() {\r\n    const { dragging, panels = [], vector } = this.props;\r\n    const isList = panels[0]?.type === IPanelType.List;\r\n    let className = 'customstack-wrapper ';\r\n\r\n    if (!!dragging)\r\n      className += 'drag ';\r\n\r\n    if (isList)\r\n      className += 'customstack-list ';\r\n\r\n    if (!!vector)\r\n      className += 'drawer-shown ';\r\n\r\n    return (\r\n      <div className={className}>\r\n        {this.renderRootList()}\r\n        {this.renderVectorDrawer()}\r\n        {this.renderPrecisionModal()}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Draggable, Droppable, DraggableProps, DroppableProps, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { Virtuoso, ItemProps } from 'react-virtuoso';\r\nimport { IPanel, WidgetTypes } from 'src/shared';\r\n\r\n\r\nexport type DraggableWidgetProps = Partial<DraggableProps> & {\r\n  index: number;\r\n  className?: string;\r\n  children?: any;\r\n  alignRight?: boolean;\r\n  selected?: boolean;\r\n\r\n  onPointerChange?:(draggableId: string | null) => void;\r\n  onSelect?: (e?: React.MouseEvent) => void;\r\n};\r\n\r\nexport class DraggableWidget extends React.Component<DraggableWidgetProps> {\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDropAnimating) {\r\n      if (!snapshot.isDragging && !!style.transform) {      \r\n        const position = style.transform.replace(/translate|[(|)]/g, '');\r\n        const [left, top] = position.split(', ');\r\n        \r\n        style = { ...style, transform: '', left, top };\r\n      };\r\n\r\n      return style;\r\n    }\r\n\r\n    return { ...style, transitionDuration: '0.001s' };\r\n  }\r\n\r\n  render() {\r\n    const { children, draggableId, isDragDisabled, index, selected } = this.props;\r\n\r\n    return (\r\n      <Draggable key={draggableId}\r\n                 draggableId={draggableId} \r\n                 index={index}\r\n                 isDragDisabled={isDragDisabled}>\r\n        {(provided, snapshot) => {\r\n          let className = `draggable-item ${this.props.className ?? ''} `;\r\n          let dragHandleClass = 'drag-handle ';\r\n\r\n          if (!isDragDisabled && !!children)\r\n            className += 'edit ';\r\n\r\n          if (snapshot.isDragging)\r\n            className += 'dragging ';\r\n\r\n          if (selected)\r\n            className += 'selected ';\r\n\r\n          return (\r\n            <div ref={provided.innerRef}\r\n                 className={className}\r\n                 {...provided.draggableProps}\r\n                 style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                 onClick={e => {\r\n                   if (!e.defaultPrevented)\r\n                     this.props.onSelect?.(e);\r\n\r\n                   e.preventDefault();\r\n                   e.stopPropagation();\r\n                 }}>\r\n              <span {...provided.dragHandleProps}\r\n                    onPointerDown={() => this.props.onPointerChange?.(draggableId)}\r\n                    className={dragHandleClass}\r\n                    tabIndex={-1}>\r\n                <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\"/>\r\n              </span>\r\n              {children}\r\n            </div>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    );\r\n  }\r\n};\r\n\r\nexport type DroppableWidgetProps = Partial<DroppableProps> & {\r\n  className?: string;\r\n  children?: any;\r\n  type?: WidgetTypes;\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nexport class DroppableWidget extends React.Component<DroppableWidgetProps> {\r\n  \r\n  render() {\r\n    const { children, droppableId, type, style = {}, ...props } = this.props;\r\n\r\n    return (\r\n      <Droppable key={droppableId}\r\n                 droppableId={droppableId}\r\n                 {...props}>\r\n        {(provided, snapshot) => {\r\n          let className = `droppable ${this.props.className ?? ''} `;\r\n\r\n          if (snapshot.isDraggingOver)\r\n            className += 'dragging ';\r\n\r\n          return (\r\n            <div ref={provided.innerRef}\r\n                 className={className}\r\n                 data-type={type}\r\n                 {...provided.droppableProps}\r\n                 style={style}>\r\n              {children}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    );\r\n  }\r\n}\r\n\r\nexport type DroppableVirtualListProps = Partial<DroppableProps> & {\r\n  className?: string;\r\n  data: IPanel[];\r\n\r\n  itemContent: (index: number, panel: IPanel) => React.ReactElement;\r\n}\r\n\r\nexport class VirtualList extends React.Component<DroppableVirtualListProps> {\r\n\r\n  renderItemPlaceholder = (itemProps: ItemProps & { children: React.ReactNode }) => {\r\n    const { children, ...props } = itemProps;\r\n\r\n    return (\r\n      <div {...props} style={{ height: props['data-known-size'] ?? undefined }}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getItemSize = (el: HTMLElement) => {\r\n    const child = el.firstChild as HTMLElement;\r\n\r\n    return child?.clientHeight ?? el.clientHeight;\r\n  }\r\n  \r\n  render() {\r\n    const { data, droppableId, className, ...props } = this.props;\r\n\r\n    return (\r\n      <Droppable {...props}\r\n                 droppableId={droppableId}\r\n                 key={droppableId}>\r\n        {provided => {\r\n          let className = `droppable ${this.props.className ?? ''} `;\r\n\r\n          return <Virtuoso scrollerRef={provided.innerRef}\r\n                           data={data}\r\n                           style={{ height: '100%' }}\r\n                           components={{ Item: this.renderItemPlaceholder }}\r\n                           className={className}\r\n                           itemSize={this.getItemSize}\r\n                           itemContent={this.props.itemContent} />;\r\n        }}\r\n      </Droppable>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { IPreset } from 'src/shared';\r\nimport { Search } from '../controls';\r\n\r\n\r\ntype Props = {\r\n  preset: IPreset;\r\n  pressets: IPreset[];\r\n\r\n  onPresetChange: (preset: IPreset) => void;\r\n  onSearch: (value: string) => void;\r\n}\r\n\r\nexport class Pressets extends React.Component<Props> {\r\n\r\n  render() {\r\n    const { preset, pressets } = this.props;\r\n\r\n    return (\r\n      <div className=\"presets-tab\">\r\n        <Search placeholder=\"Search Presets\" onSearch={this.props.onSearch} />\r\n        <div className=\"presets-wrapper\">\r\n          {pressets.map(p => {\r\n            let className = 'btn preset-btn ';\r\n\r\n            if (p.ID === preset?.ID)\r\n              className += 'active';\r\n\r\n            return (\r\n              <div key={p?.ID} className={className} onClick={this.props.onPresetChange.bind(this, p)}>\r\n                {p?.Name}\r\n                <div className=\"item-icon\">\r\n                  <FontAwesomeIcon icon={['fas', 'external-link-square-alt']} />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n\r\n  onChangeIcon: () => void;\r\n  onRenameTabModal: () => void;\r\n  onDuplicateTab: () => void;\r\n  onAddSnapshotTab: () => void;\r\n  onAddSequencerTab: () => void;\r\n}\r\n\r\nexport class Tab extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className=\"tabs-tab\">\r\n        <div className=\"button-list\">\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onChangeIcon}>Change tab icon</button>\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onRenameTabModal}>Rename Tab</button>\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onDuplicateTab}>Duplicate Tab</button>\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onAddSnapshotTab}>Add Snapshot Tab</button>\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onAddSequencerTab}>Add Sequencer Tab</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Search } from '../controls';\r\nimport { Droppable, Draggable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IPanelType, WidgetTypes, ICustomStackProperty } from 'src/shared';\r\nimport { DropWidgetsType } from '../';\r\n\r\n\r\ntype Props = {\r\n  widgets: DropWidgetsType[];\r\n\r\n  renderWidget: (widget: ICustomStackProperty) => React.ReactNode;\r\n  onSearch: (value: string) => void;\r\n}\r\n\r\nexport class Widgets extends React.Component<Props> {\r\n\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDragging)\r\n      return { ...style, transform: 'none' };\r\n\r\n    if (!snapshot.isDropAnimating)\r\n      return { ...style, height: 'auto', width: 'auto', minWidth: '350px' };\r\n\r\n    return { ...style, height: 'auto', width: 'auto', minWidth: '350px', transitionDuration: '0.001s' };\r\n  }\r\n\r\n  render() {\r\n    const { widgets } = this.props;\r\n\r\n    return (\r\n      <div className=\"widgets-tab\">\r\n        <Search placeholder=\"Search Widgets\" onSearch={this.props.onSearch} />\r\n        <div className=\"layout-widgets\">\r\n          {widgets.map(w => (\r\n            <Droppable droppableId={w.id} key={w.id} isDropDisabled>\r\n              {(provided) => (\r\n                <div {...provided.droppableProps} \r\n                     ref={provided.innerRef}>\r\n                  <Draggable key={w.id} \r\n                             draggableId={w.id}\r\n                             index={0}>\r\n                    {(provided, snapshot) => {\r\n                      let className = 'layout-panel layout-widget draggable-widget';\r\n                      let itemIcon: JSX.Element = null;\r\n                      let widget = null;\r\n                      let dragging = null;\r\n\r\n                      switch (w.type) {\r\n                        case 'PANEL':\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'columns']} />;\r\n                          widget = { type: IPanelType.Panel, widgets: [] };\r\n                          break;\r\n\r\n                        case 'LIST':\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'list']} />;\r\n                          widget = { type: IPanelType.List, items: [{ label: 'Item 1', panels: [] }] };\r\n                          break;\r\n\r\n                        case WidgetTypes.Tabs:\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'table']} />;\r\n                          widget = { widget: WidgetTypes.Tabs, tabs: [{ label: 'Tab 1', widgets: [] }] };\r\n                          break;\r\n\r\n                        case WidgetTypes.Label:\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'font']} />;\r\n                          widget = { widget: WidgetTypes.Label, label: 'New label' };\r\n                          break;\r\n\r\n                        case WidgetTypes.Spacer:\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'square']} />;\r\n                          widget = { widget: WidgetTypes.Spacer, label: '' };\r\n                          break;\r\n\r\n                        case WidgetTypes.Dial:\r\n                          itemIcon = <div className=\"item-icon\"><img src=\"/images/icons/Dial.svg\" alt=\"Slider\" /></div>;\r\n                          widget = { widget: WidgetTypes.Dial, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Slider:\r\n                          itemIcon = <div className=\"item-icon\"><img src=\"/images/icons/Sliders.svg\" alt=\"Slider\" /></div>;\r\n                          widget = { widget: WidgetTypes.Slider, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.ColorPicker:\r\n                          itemIcon = <div className=\"item-icon\">Color Picker</div>;\r\n                          widget = { widget: WidgetTypes.ColorPicker, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.MiniColorPicker:\r\n                          itemIcon = <div className=\"item-icon\">Mini Color Picker</div>;\r\n                          widget = { widget: WidgetTypes.MiniColorPicker, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.ColorPickerList:\r\n                          itemIcon = <div className=\"item-icon\">Color Picker List</div>;\r\n                          widget = { widget: WidgetTypes.ColorPickerList, items: [] };\r\n                          break;\r\n\r\n                        case WidgetTypes.Toggle:\r\n                          itemIcon = <div className=\"item-icon\">Toggle</div>;\r\n                          widget = { widget: WidgetTypes.Toggle, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Joystick:\r\n                          itemIcon = <div className=\"item-icon\"><img src=\"/images/icons/Joystick.svg\" alt=\"Slider\" /></div>;\r\n                          widget = { widget: WidgetTypes.Joystick, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Button:\r\n                          itemIcon = <div className=\"item-icon\">Button</div>;\r\n                          widget = { widget: WidgetTypes.Button, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Text:\r\n                          itemIcon = <div className=\"item-icon\">Text</div>;\r\n                          widget = { widget: WidgetTypes.Text, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Dropdown:\r\n                          itemIcon = <div className=\"item-icon\">Dropdown</div>;\r\n                          widget = { widget: WidgetTypes.Dropdown, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Vector:\r\n                          itemIcon = <div className=\"item-icon\">Vector</div>;\r\n                          widget = { widget: WidgetTypes.Vector, property: null, propertyType: null };\r\n                          break;\r\n                      }\r\n \r\n                      if (snapshot.isDragging) {\r\n                        className += ' dragging';\r\n                        dragging = this.props.renderWidget(widget);\r\n\r\n                        if (!dragging)\r\n                          dragging = (\r\n                            <>\r\n                              <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                              {w.label}\r\n                              <div className=\"item-icon\">{itemIcon}</div>\r\n                            </>\r\n                          );\r\n                      }\r\n\r\n                      return (\r\n                        <>\r\n                          {snapshot.isDragging &&\r\n                            <div className=\"draggable-widget\">\r\n                              <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                              <div className=\"item-label\">{w.label}</div>\r\n                              <div className=\"item-icon\">{itemIcon}</div>\r\n                            </div>\r\n                          }\r\n                          <div {...provided.draggableProps}\r\n                               {...provided.dragHandleProps}\r\n                               className={className}\r\n                               ref={provided.innerRef}\r\n                               style={this.getStyle(provided.draggableProps.style, snapshot)}>\r\n                            {snapshot.isDragging ? dragging : (\r\n                              <>\r\n                                <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                                <span className=\"item-label\">{w.label}</span>\r\n                                <div className=\"item-icon\">{itemIcon}</div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </>\r\n                      );\r\n                    }}\r\n                  </Draggable>\r\n                  <div style={{ display: 'none' }}>{provided.placeholder}</div>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Search } from '../controls';\r\nimport { Droppable, Draggable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { IExposedFunction, IExposedProperty, IGroup, IPreset } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  groups: IGroup[];\r\n  preset: IPreset;\r\n\r\n  renderDraggableItem: (element: IExposedProperty & IExposedFunction, index: number) => void;\r\n  onWidgetsLock: (widgets: (IExposedProperty | IExposedFunction)[]) => void;\r\n  onSerach: (value: string) => void;\r\n}\r\n\r\ntype State = {\r\n  collapsed: Record<string, boolean>;\r\n}\r\n\r\nexport class Properties extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    collapsed: {}\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { preset } = this.props;\r\n\r\n    if (preset?.Name !== prevProps.preset?.Name)\r\n      this.setState({ collapsed: {} });\r\n  }\r\n\r\n  onToggleGroup = (key: string) => {\r\n    const { collapsed } = this.state;\r\n\r\n    this.setState({ collapsed: { ...collapsed, [key]: !collapsed[key] }  });\r\n  }\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDragging)\r\n      return { ...style, transform: 'none' };\r\n\r\n    if (!snapshot.isDropAnimating)\r\n      return style;\r\n\r\n    return { ...style, transitionDuration: '0.001s' };\r\n  }\r\n\r\n  renderGroup = (group: IGroup, index: number) => {\r\n    const { collapsed } = this.state;\r\n    const exposed = [...group.ExposedProperties, ...group.ExposedFunctions];\r\n    \r\n    if (!exposed.length)\r\n      return null;\r\n\r\n    let icon: IconProp = ['fas', 'caret-down'];\r\n    let className = 'items-list ';\r\n\r\n    if (collapsed[group.Name])\r\n      icon = ['fas', 'caret-right'];\r\n    else\r\n      className += 'expanded';\r\n\r\n    return (\r\n      <li key={group.Name}>\r\n        <Draggable draggableId={`${group.Name}_WIDGET`} index={index}>\r\n          {(provided, snapshot) => {\r\n\r\n            if (snapshot.isDragging)\r\n              this.props.onWidgetsLock(_.filter(exposed, p => !!p.Metadata?.Widget));\r\n\r\n            return (\r\n              <>\r\n                {snapshot.isDragging && (\r\n                  <div className=\"list-title\">\r\n                    {group.Name}\r\n                    <FontAwesomeIcon icon={icon} />\r\n                  </div>\r\n                )}\r\n                <div {...provided.draggableProps}\r\n                     {...provided.dragHandleProps}\r\n                     className=\"list-title\"\r\n                     onClick={this.onToggleGroup.bind(this, group.Name)}\r\n                     ref={provided.innerRef}\r\n                     style={this.getStyle(provided.draggableProps.style, snapshot)}>\r\n                  {group.Name}\r\n                  <FontAwesomeIcon icon={icon} />\r\n                </div>\r\n              </>\r\n            );\r\n          }}\r\n        </Draggable>\r\n        <Droppable key={group.Name}\r\n                   droppableId={`ADDWIDGET_${group.Name}`}\r\n                   isDropDisabled>\r\n          {(provided) => {\r\n            return (\r\n              <ul ref={provided.innerRef}\r\n                   className={className}\r\n                {...provided.droppableProps}>\r\n                {!collapsed[group.Name] && exposed.map(this.props.renderDraggableItem)}\r\n                <div style={{ display: 'none' }}>{provided.placeholder}</div>\r\n              </ul>\r\n            );\r\n          }}\r\n        </Droppable>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { groups } = this.props;\r\n\r\n    return (\r\n      <div className=\"properties-tab\">\r\n        <Search placeholder=\"Search Properties\" onSearch={this.props.onSerach} />\r\n        <div className=\"nav-list-container\">\r\n          <Droppable droppableId=\"properties-droppable\">\r\n            {provided => (\r\n              <ul ref={provided.innerRef}\r\n                  className=\"nav-list\"\r\n                {...provided.droppableProps}>\r\n                {groups.map(this.renderGroup)}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { IAsset } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { _api } from 'src/reducers';\r\nimport _ from  'lodash';\r\nimport { SafeImage } from '../controls';\r\n\r\ntype Props = {\r\n  visible?: boolean;\r\n};\r\n\r\ntype State = {\r\n  map: string;\r\n  search: string;\r\n  sortBy: string;\r\n  sortAsc: boolean;\r\n  snapshot?: IAsset;\r\n  snapshots: IAsset[];\r\n  filters: IAsset[];\r\n};\r\n\r\nexport class Snapshot extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    map: '',\r\n    search: '',\r\n    sortBy: 'Metadata.CaptureTime',\r\n    sortAsc: false,\r\n    snapshots: [],\r\n    filters: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAssets();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.visible && !prevProps.visible)\r\n      this.fetchAssets();\r\n  }\r\n\r\n  fetchAssets = async () => {\r\n    let { map } = this.state;\r\n\r\n    if (!map) {\r\n\t    const editorSubsystem = await _api.proxy.function('/Script/UnrealEd.Default__EditorSubsystemBlueprintLibrary', 'GetEditorSubsystem', { Class: '/Script/UnrealEd.UnrealEditorSubsystem' });\r\n      const world = await _api.proxy.function(editorSubsystem.ReturnValue, 'GetEditorWorld', {});\r\n      map = world.ReturnValue;\r\n    }\r\n\r\n    const nativeFilters = await _api.assets.search('', ['LevelSnapshotFilter'], '/Game', {}, 50);\r\n\r\n    const filterArgs = {\r\n      EnableBlueprintNativeClassFiltering: true,\r\n      NativeParentClasses: ['LevelSnapshotFilter'],        \r\n    };\r\n    const bpFilters = _.filter(await _api.assets.search('', ['Blueprint'], '/Game', filterArgs, 50), f => !!f.Metadata['GeneratedClass']);\r\n\r\n    const filters = [...bpFilters, ...nativeFilters];\r\n\r\n    const { search, sortBy, sortAsc } = this.state;\r\n    const assets = await _api.assets.search(search, ['LevelSnapshot'], '/Game', {}, 200);\r\n    let snapshots = _.filter(assets, asset => !map || asset.Metadata?.MapPath === map);\r\n    \r\n    snapshots = this.sortAssets(snapshots, sortBy, sortAsc);\r\n    this.setState({ snapshots, filters, map });\r\n  }\r\n\r\n  fetchAssetsDebounced = _.debounce(this.fetchAssets, 200);\r\n\r\n  sortAssets = (snapshots: IAsset[], sortBy: string, ascending: boolean) => {\r\n    return _.orderBy(snapshots, [sortBy], [ascending ? 'asc' : 'desc'] );\r\n  }\r\n\r\n  onSortChange = () => {\r\n    const { sortBy, sortAsc } = this.state;\r\n    const snapshots = this.sortAssets(this.state.snapshots, sortBy, sortAsc);\r\n\r\n    this.setState({ snapshots });\r\n  }\r\n\r\n  onSetSort = (sortBy: string) => {\r\n    let { sortAsc } = this.state;\r\n    sortAsc = (sortBy === this.state.sortBy) ? !sortAsc : true;\r\n    this.setState({ sortBy, sortAsc }, this.onSortChange);\r\n  }\r\n\r\n  onSearchChange = (search: string)  => {\r\n    this.setState({ search });\r\n    this.fetchAssetsDebounced();\r\n  }\r\n\r\n  showDetails = (snapshot?: IAsset) => {\r\n    this.setState({ snapshot });\r\n  }\r\n\r\n  onCreate = async () => {\r\n    const { map } = this.state;\r\n    if (await SaveModal.show(map))\r\n      this.fetchAssets();\r\n  }\r\n\r\n  onKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Escape' && this.state.snapshot)\r\n      this.setState({ snapshot: null });\r\n  }\r\n\r\n  renderSnapshot = (snapshot: IAsset, index: number) => {\r\n    let className = '';\r\n    if (snapshot === this.state.snapshot)\r\n      className = 'selected-row ';\r\n\r\n    \r\n    const url = _api.assets.thumbnailUrl(snapshot.Path);\r\n\r\n    return (\r\n      <tr key={index} className={className} onClick={() => this.showDetails(snapshot)}>\r\n        <td className=\"name\">\r\n          <div className=\"name-block\">\r\n            <SafeImage src={url} \r\n                        fallback=\"/images/assets/LevelSnapshot.png\"\r\n                        alt={snapshot.Name}\r\n                        className=\"box\" />\r\n            <p>{snapshot.Name}</p>\r\n          </div>\r\n        </td>\r\n\r\n        <td className=\"description\"><p>{snapshot.Metadata?.SnapshotDescription}</p></td>\r\n\r\n        <td className=\"created\"><p>{snapshot.Metadata?.CaptureTime}</p></td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderColumnHeader = (title: string, field: string) => {\r\n    const { sortBy, sortAsc } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <th className={title.toLowerCase()} onClick={() => this.onSetSort(field)}>\r\n          {title}\r\n          {sortBy === field &&\r\n            <FontAwesomeIcon icon={sortAsc ? 'sort-up' : 'sort-down'} className=\"sort-icon\" />\r\n          }\r\n        </th>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { map, search, filters, snapshot, snapshots } = this.state;\r\n\r\n    return (\r\n      <div className=\"snapshot-wrapper\" onClick={() => this.showDetails()} tabIndex={-1}>\r\n        <div className=\"list-wrapper\">\r\n          <div className=\"search-block\">\r\n            <button className=\"btn snapshot-btn\" onClick={this.onCreate}><p>TAKE SNAPSHOT</p></button>\r\n            <div className=\"search-field\">\r\n              <FontAwesomeIcon icon={['fas', 'search']} />\r\n              <input type=\"text\" value={search} onChange={e => this.onSearchChange(e.target.value)} autoComplete=\"no\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-wrapper\" onClick={e => e.stopPropagation()}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  {this.renderColumnHeader('Name', 'Name')}\r\n                  {this.renderColumnHeader('Description', 'Metadata.SnapshotDescription')}\r\n                  {this.renderColumnHeader('Created', 'Metadata.CaptureTime')}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {snapshots.map(this.renderSnapshot)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <SnapshotPreview map={map} filters={filters} snapshot={snapshot} onClose={() => this.showDetails()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\ntype SnapshotPreviewProps = {\r\n  map: string;\r\n  snapshot?: IAsset;\r\n  filters: IAsset[];\r\n  onClose: () => void;\r\n};\r\n\r\ntype SnapshotPreviewState = {\r\n  filter?: string;\r\n  loading?: boolean;\r\n};\r\n\r\nclass SnapshotPreview extends React.Component<SnapshotPreviewProps, SnapshotPreviewState> {\r\n  state: SnapshotPreviewState = {\r\n  };\r\n\r\n  onLoad = async () => {\r\n    const { map, snapshot, onClose, filters } = this.props;\r\n    const { filter, loading } = this.state;\r\n    if (!snapshot || loading)\r\n      return;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n\r\n      let filterInstance;\r\n      if (filter) {\r\n        const filterAsset = _.find(filters, f => f.Path === filter);\r\n\r\n        switch (filterAsset?.Class) {\r\n          case 'Blueprint':\r\n            const createdFilter = await _api.proxy.function(\r\n              '/Script/LevelSnapshotFilters.Default__FilterBlueprintFunctionLibrary', \r\n              'CreateFilterByClass',\r\n              { \r\n                Class: filterAsset.Metadata['GeneratedClass']\r\n              }\r\n            );\r\n            filterInstance = createdFilter?.ReturnValue;\r\n            break;\r\n\r\n\t  default: //'LevelSnapshotFilter'\r\n\t    filterInstance = filterAsset.Path;\r\n            break;\r\n        }\r\n      }\r\n\r\n      await _api.proxy.function(\r\n        '/Script/LevelSnapshots.Default__LevelSnapshotsFunctionLibrary',\r\n        'ApplySnapshotToWorld',\r\n        {\r\n          WorldContextObject: map,\r\n          Snapshot: snapshot.Path,\r\n          OptionalFilter: filterInstance,\r\n        }\r\n      );\r\n\r\n    } catch {\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n    onClose?.();\r\n  }\r\n\r\n  render() {\r\n    const { snapshot, filters } = this.props;\r\n    const { filter, loading } = this.state;\r\n    let className = 'btn snapshot-btn ';\r\n    \r\n    if (!snapshot)\r\n      className += 'disabled';\r\n\r\n    return (\r\n      <div className=\"snapshot-preview-wrapper\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"preview-title\">\r\n          <span>{snapshot?.Metadata?.SnapshotName ? snapshot?.Name : <span className=\"hint-text\">Select a snapshot above</span>}</span>\r\n        </div>\r\n\r\n        {snapshot?.Path &&\r\n          <div className=\"preview-description\">\r\n            <div className=\"description-title\">Asset Path</div>\r\n            {snapshot?.Path}\r\n          </div>\r\n        }\r\n        <div className=\"controls-block\">\r\n          <div className=\"snapshot-dropdown\">\r\n            <div className=\"title\">Filter</div>\r\n            <select className=\"dropdown\" value={filter} onChange={e => this.setState({ filter: e.target.value })}>\r\n              <option value=\"\">[None]</option>\r\n              {filters?.map((asset, index) =>\r\n                <option key={index} value={asset.Path}>{_.head(asset.Name?.split('.'))}</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <button className={className} onClick={this.onLoad}>\r\n            {loading && <FontAwesomeIcon icon={['fas', 'sync-alt']} className=\"spin-icon\" spin />}\r\n            <p>APPLY SNAPSHOT</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\ntype SaveModalProps = {\r\n  map: string;\r\n  close: (result: boolean) => void;\r\n};\r\n\r\ntype SaveModalState = {\r\n  name: string;\r\n  path: string;\r\n  description: string;\r\n  loading?: boolean;\r\n};\r\n\r\nclass SaveModal extends React.Component<SaveModalProps, SaveModalState> {\r\n\r\n  state: SaveModalState = {\r\n    loading: true,\r\n    name: '',\r\n    path: '/Game/LevelSnapshots/',\r\n    description: '',\r\n  };\r\n\r\n  private static pending: (result?: boolean) => void;\r\n\r\n  public static show(map: string): Promise<boolean> {\r\n    SaveModal.pending?.(undefined);\r\n    SaveModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<boolean>(resolve => {\r\n      SaveModal.pending = resolve;\r\n\r\n      ReactDOM.render(<SaveModal map={map} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    try {\r\n      const editor = '/Script/LevelSnapshots.Default__LevelSnapshotsEditorDataManagementSettings';\r\n\r\n      const { RootLevelSnapshotSaveDir } = await _api.proxy.property.get(editor, 'RootLevelSnapshotSaveDir');\r\n      let path: string = RootLevelSnapshotSaveDir?.Path ?? '/Game/LevelSnapshots';\r\n\r\n      const { LevelSnapshotSaveDir } = await _api.proxy.property.get(editor, 'LevelSnapshotSaveDir');\r\n      if (LevelSnapshotSaveDir)\r\n        path += `/${LevelSnapshotSaveDir}`;\r\n\r\n      const { DefaultLevelSnapshotName } = await _api.proxy.property.get(editor, 'DefaultLevelSnapshotName');\r\n\r\n      let InWorldName = this.props.map;\r\n      const match = /([^/]+)\\..+$/.exec(this.props.map);\r\n      if (match?.[1])\r\n        InWorldName = match[1];      \r\n\r\n      \r\n      const PathFormatted = await _api.proxy.function(editor, 'ParseLevelSnapshotsTokensInText', { InTextToParse: path, InWorldName });\r\n      const NameFormatted = await _api.proxy.function(editor, 'ParseLevelSnapshotsTokensInText', { InTextToParse: DefaultLevelSnapshotName, InWorldName });\r\n\r\n      this.setState({ path: PathFormatted.ReturnValue, name: NameFormatted.ReturnValue });\r\n    } catch {\r\n\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  onOK = async () => {\r\n    const { name, path, description, loading } = this.state;\r\n    if (!name || loading)\r\n      return;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      await _api.proxy.function(\r\n        '/Script/LevelSnapshotsEditor.Default__LevelSnapshotsEditorFunctionLibrary',\r\n        'TakeAndSaveLevelSnapshotEditorWorld',\r\n        {\r\n          FileName: name,\r\n          FolderPath: path,\r\n          Description: description\r\n        }\r\n      );\r\n    } catch {\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n    this.props.close(true);\r\n  }\r\n\r\n  onCancel = () => {\r\n    if (!this.state.loading)\r\n      this.props.close(false);\r\n  }\r\n\r\n  onKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n  \r\n  render() {\r\n    const { name, path, description, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onClick={this.onCancel} onKeyPress={this.onKeyPress} tabIndex={-1}>\r\n        <div className=\"save-asset-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"save-row\">\r\n            TAKE SNAPSHOT\r\n            <FontAwesomeIcon icon={['fas', 'times']} onClick={this.onCancel} />\r\n          </div>\r\n\r\n          <div className=\"item-row\">\r\n            <div className=\"item-title\">Name</div>\r\n            <input className=\"item-content name-field\" \r\n                    value={name}\r\n                    onChange={e => this.setState({ name: e.target.value })}\r\n                    autoFocus\r\n                    autoComplete=\"no\"\r\n                    readOnly={loading} />\r\n          </div>\r\n\r\n          <div className=\"item-row\">\r\n            <div className=\"item-title\">Description</div>\r\n            <textarea className=\"item-content description-field\"\r\n                      readOnly={loading}\r\n                      rows={5}\r\n                      value={description}\r\n                      onChange={e => this.setState({ description: e.target.value })} />\r\n          </div>\r\n\r\n          <div className=\"item-row\">\r\n            <div className=\"item-title\">Save Dir</div>\r\n            <input className=\"item-content name\" value={path} onChange={e => this.setState({ path: e.target.value })} autoComplete=\"no\" readOnly={loading} />\r\n          </div>\r\n\r\n          <button className=\"btn snapshot-btn\" disabled={!name} onClick={this.onOK}>\r\n            {loading && \r\n              <FontAwesomeIcon icon={['fas', 'sync-alt']} className=\"spin-icon\" spin />\r\n            }\r\n            TAKE SNAPSHOT\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { _api } from 'src/reducers';\r\nimport _ from  'lodash';\r\nimport { IAsset } from 'src/shared';\r\nimport { SafeImage } from '../controls';\r\n\r\n\r\ntype Props = {\r\n  visible?: boolean;\r\n};\r\n\r\ntype State = {\r\n  search: string;\r\n  assets: IAsset[],\r\n};\r\n\r\nexport class Sequencer extends React.Component<Props, State> {\r\n  state: State = {\r\n    search: '',\r\n    assets: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAssets();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.visible && !prevProps.visible)\r\n      this.fetchAssets();\r\n  }\r\n\r\n  fetchAssets = async () => {\r\n    const { search } = this.state;\r\n    const assets = await _api.assets.search(search, ['LevelSequence'], '/Game', 200);\r\n    this.setState({ assets });\r\n  }\r\n\r\n  fetchAssetsDebounced = _.debounce(this.fetchAssets, 200);\r\n\r\n  onSearchChange = (search: string)  => {\r\n    this.setState({ search });\r\n    this.fetchAssetsDebounced();\r\n  }\r\n\r\n  renderSequence = (asset: IAsset, index: number) => {\r\n    const url = _api.assets.thumbnailUrl(asset.Path);\r\n\r\n    return (\r\n      <tr key={index} className={`col col-${index + 1}`}>\r\n        <td>\r\n          <div className=\"name-block\">\r\n            <SafeImage src={url} \r\n                        fallback=\"/images/assets/Sequencer.png\"\r\n                        alt={asset.Name}\r\n                        className=\"box\" />\r\n            <p>{asset.Name}</p>\r\n          </div>\r\n        </td>\r\n        <td><p>{asset.Path}</p></td>\r\n        <td>\r\n          <div className=\"play-icon\" onClick={() => this.playSequence(asset)}>\r\n            <FontAwesomeIcon icon={['fas', 'play']} />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  playSequence = async (sequence: IAsset) => {\r\n    const sequencer = '/Script/LevelSequenceEditor.Default__LevelSequenceEditorBlueprintLibrary';\r\n    const editor = '/Script/EditorScriptingUtilities.Default__EditorAssetLibrary';\r\n    try {\r\n      await _api.proxy.put('/remote/object/call', { objectPath: editor, functionName: 'LoadAsset', parameters: { 'AssetPath': sequence.Path }  });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'OpenLevelSequence', parameters: { 'LevelSequence': sequence.Path }  });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'Pause' });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'SetCurrentTime', parameters: { NewFrame: 0 } });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'Play' });\r\n    } catch (err) {\r\n      console.log('Failed to play sequence', sequence);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { search, assets } = this.state;\r\n\r\n    return (\r\n      <div className=\"snapshot-wrapper sequencer-wrapper\" tabIndex={-1}>\r\n        <div className=\"list-wrapper\">\r\n          <div className=\"search-block\">\r\n            <div className=\"search-field\">\r\n              <FontAwesomeIcon icon={['fas', 'search']} />\r\n              <input type=\"text\" value={search} onChange={e => this.onSearchChange(e.target.value)} autoComplete=\"no\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"col col-2\">Name</th>\r\n                  <th className=\"col col-3\">Folder</th>\r\n                  <th className=\"col col-4\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {assets.map(this.renderSequence)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ReduxState } from 'src/reducers';\r\nimport { IScreen, IPayload, ScreenType } from 'src/shared';\r\nimport * as Screens from './Screens';\r\n\r\n\r\ntype PropsFromState = Partial<{\r\n  payload: IPayload;\r\n}>;\r\n\r\ntype Props = {\r\n  screen: IScreen;\r\n  visible?: boolean;\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxState): PropsFromState => ({\r\n  payload: state.api.payload\r\n});\r\n\r\n@(connect(mapStateToProps) as any)\r\nexport class Screen extends React.Component<Props & PropsFromState> {\r\n\r\n  render() {\r\n    const { screen, payload, visible } = this.props;\r\n    if (!screen)\r\n      return null;\r\n\r\n    const props = {\r\n      payload,\r\n      visible,\r\n      data: screen.data,\r\n    };\r\n\r\n    switch (screen.type) {\r\n      case ScreenType.Snapshot:\r\n        return <Screens.Snapshot {...props} />;\r\n\r\n      case ScreenType.Sequencer:\r\n        return <Screens.Sequencer {...props} />;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}","import React from 'react';\r\nimport crypto from 'crypto';\r\nimport { ReactComponent as Logo } from '../assets/ue_logo.svg';\r\nimport { _api } from '../reducers';\r\n\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\ntype State = {\r\n  passphrase: string;\r\n  error: boolean;\r\n}\r\n\r\nexport class Login extends React.Component<Props, State> {\r\n  state: State = {\r\n    passphrase: '',\r\n    error: false,\r\n  }\r\n\r\n  onChange = (passphrase: string) => {\r\n    this.setState({ passphrase });\r\n  }\r\n\r\n  onKeyPress = async (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key !== \"Enter\")\r\n      return;\r\n\r\n    const { passphrase } = this.state;\r\n    const secured = crypto.createHash('md5')\r\n                          .update(passphrase).digest('hex');\r\n\r\n    const error = await _api.passphrase.login(secured);\r\n    this.setState({ error });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fullscreen login-screen\">\r\n        <div className='icon-wrapper'>\r\n          <div className=\"app-icon\">\r\n            <Logo className=\"logo\" />\r\n          </div>\r\n          <div>Implicit Bias - Trainer Interface</div>\r\n        </div>\r\n        <div className='form'>\r\n          Password\r\n          <input onChange={e => this.onChange(e.target.value)}\r\n                  onKeyPress={this.onKeyPress}\r\n                  type='password' />\r\n\r\n          {this.state.error &&\r\n            <label className='login-status'>Incorrect Password</label>\r\n          }\r\n        </div>\r\n     </div>\r\n    );\r\n  }\r\n};","import { useState, useEffect } from 'react';\r\nimport AgoraRTC, {\r\n  IAgoraRTCClient, IAgoraRTCRemoteUser, ILocalVideoTrack, ILocalAudioTrack } from 'agora-rtc-sdk-ng';\r\n\r\nlet localTracks = {audioTrack: undefined };\r\n//let localTracks = { videoTrack: undefined, audioTrack: undefined };\r\n\r\nexport default function useAgora(client: IAgoraRTCClient | undefined)\r\n  :\r\n   {\r\n      localAudioTrack: ILocalAudioTrack | undefined ,\r\n      //localVideoTrack: ILocalVideoTrack | undefined ,\r\n      joinState: boolean,\r\n      joinInProgress: boolean,\r\n      aiDenoiserState: boolean,\r\n      leave: Function,\r\n      join: Function,\r\n      controler: Function,\r\n      remoteUsers: IAgoraRTCRemoteUser[],\r\n    }\r\n    {\r\n  //const [localVideoTrack, setLocalVideoTrack] = useState<ILocalVideoTrack | undefined>(undefined);\r\n  const [localAudioTrack, setLocalAudioTrack] = useState<ILocalAudioTrack | undefined>(undefined);\r\n\r\n  const [joinState, setJoinState] = useState(false);\r\n\r\n  const [joinInProgress, setJoinInProgressState] = useState(false);\r\n\r\n  const [aiDenoiserState, setAIDenoiser] = useState(false);\r\n\r\n\r\n  const [remoteUsers, setRemoteUsers] = useState<IAgoraRTCRemoteUser[]>([]);\r\n  \r\n  let options = { appid: null, channel: null, uid: null, token: null };\r\n\r\n  //Call continuslly with early exit\r\n  async function join(appid: string, channel: string, token?: string, uid?: string | number | null) {\r\n\r\n    //Allow single channel only\r\n    if (!client || joinState || joinInProgress) return;\r\n\r\n    setJoinInProgressState(true);\r\n    // let microphoneAudioTrack = await AgoraRTC.createMicrophoneAudioTrack() ;\r\n\r\n    // let cameraVideoTrack = await AgoraRTC.createCameraVideoTrack();\r\n\r\n    // localTracks = { videoTrack: cameraVideoTrack, audioTrack: microphoneAudioTrack };\r\n\r\n    // await client.join(appid, channel, token || null);\r\n\r\n    // @ts-ignore\r\n    [options.uid, localTracks.audioTrack] = await Promise.all([\r\n      //IB: Added uid to allow for selecting id for each client that joins manually.\r\n      client.join(appid, channel, token, uid),\r\n      // IB: End\r\n      AgoraRTC.createMicrophoneAudioTrack(),\r\n      //AgoraRTC.createCameraVideoTrack(),\r\n    ]);\r\n\r\n    setLocalAudioTrack(localTracks.audioTrack);\r\n    //setLocalVideoTrack(localTracks.videoTrack);\r\n    \r\n    // @ts-ignore\r\n    await client.publish(Object.values(localTracks));\r\n\r\n    (window as any).client = client;\r\n    //(window as any).videoTrack = localTracks.videoTrack;\r\n\r\n    setJoinState(true);\r\n    setJoinInProgressState(false);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n   // if (localVideoTrack) {\r\n   //   localVideoTrack.stop();\r\n   //   localVideoTrack.close();\r\n   // }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    await client?.leave();\r\n  }\r\n\r\n  async function controler(flag: boolean){\r\n    //await enableDenoiser4AudioTrack?.controler(flag);\r\n    //console.log(\"execute controler function with flag: \" + flag);\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n\r\n    const handleUserPublished = async (user: IAgoraRTCRemoteUser, mediaType: 'audio' | 'video') => {\r\n      await client.subscribe(user, mediaType);\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    const handleUserUnpublished = (user: IAgoraRTCRemoteUser) => {\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    const handleUserJoined = (user: IAgoraRTCRemoteUser) => {\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    const handleUserLeft = (user: IAgoraRTCRemoteUser) => {\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    client.on('user-published', handleUserPublished);\r\n    client.on('user-unpublished', handleUserUnpublished);\r\n    client.on('user-joined', handleUserJoined);\r\n    client.on('user-left', handleUserLeft);\r\n\r\n    return () => {\r\n      client.off('user-published', handleUserPublished);\r\n      client.off('user-unpublished', handleUserUnpublished);\r\n      client.off('user-joined', handleUserJoined);\r\n      client.off('user-left', handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    //localVideoTrack,\r\n    joinState,\r\n    joinInProgress,\r\n    aiDenoiserState,\r\n    leave,\r\n    join,\r\n    controler,\r\n    remoteUsers,\r\n  };\r\n}","import { ILocalVideoTrack, IRemoteVideoTrack, ILocalAudioTrack, IRemoteAudioTrack } from \"agora-rtc-sdk-ng\";\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nexport interface VideoPlayerProps {\r\n  videoTrack: ILocalVideoTrack | IRemoteVideoTrack | undefined;\r\n  audioTrack: ILocalAudioTrack | IRemoteAudioTrack | undefined;\r\n}\r\n\r\nconst MediaPlayer = (props: VideoPlayerProps) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    if (!container.current) return;\r\n    props.videoTrack?.play(container.current);\r\n    return () => {\r\n      props.videoTrack?.stop();\r\n    };\r\n  }, [container, props.videoTrack]);\r\n  useEffect(() => {\r\n    if(props.audioTrack){\r\n      props.audioTrack?.play();\r\n    }\r\n    return () => {\r\n      props.audioTrack?.stop();\r\n    };\r\n  }, [props.audioTrack]);\r\n  return (\r\n    <div ref={container}  className=\"video-player\" style={{ width: \"320px\", height: \"240px\"}}></div>\r\n  );\r\n};\r\n\r\nexport default MediaPlayer;","import React, { useState,useEffect } from 'react';\r\nimport AgoraRTC from 'agora-rtc-sdk-ng';\r\nimport useAgora from './hooks/useAgora';\r\nimport MediaPlayer from './components/MediaPlayer';\r\nimport './Call.css';\r\n\r\ninterface IAuth {\r\n  uid: string;\r\n  token: string;\r\n}\r\n\r\nconst client = AgoraRTC.createClient({ codec: 'h264', mode: 'rtc' });\r\n/*async function getToken(channel:string): Promise<any> \r\n{\r\nlet result : IAuth = {token:\"\",uid:\"\"};\r\n\r\n  const request: RequestInit = { method:'GET', mode: 'cors', redirect: 'follow', headers: new Headers({\r\n    'Authorization':'fhWJWc2gwn088XxmsJCAgoDn'})};\r\n    // WARNING: Currently using token-free API.\r\n    const res = await (fetch('https://v1r7dh4ice.execute-api.us-east-1.amazonaws.com/prod/api/token?channels='+channel, request))\r\n  .catch((error) => {\r\n    console.error(\"Error Getting Token:\"+ error);\r\n   });\r\n  if(res instanceof Response)\r\n  {\r\n    let answer = await res.json();\r\n  if (!res.ok){\r\n      return result;\r\n  }\r\n  for (let i in answer.channels) {\r\n    result.token = answer.channels[i];\r\n    result.uid = answer.uid;\r\n }\r\nreturn result;\r\n  }\r\nelse\r\n    return result;\r\n}*/\r\n\r\n//Added to allow for passing of app ID token and channel\r\nfunction findGetParameter(parameterName : string) : string{\r\n  var result = '',\r\n      tmp = [];\r\n      window.location.search\r\n      .substr(1)\r\n      .split(\"&\")\r\n      .forEach(function (item) {\r\n        tmp = item.split(\"=\");\r\n        if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\r\n      });\r\n  return result;\r\n}\r\n\r\nfunction DeprecatedCall(props) {\r\n  const appid = \"7e6df1173bb44ad3bedd070112748cf6\";\r\n  const {\r\n    localAudioTrack, //localVideoTrack, \r\n    joinState, joinInProgress, aiDenoiserState,leave, join, controler, remoteUsers\r\n  } = useAgora(client);\r\n\r\n  return (\r\n    <div className='call'>\r\n      <form className='call-form'>\r\n        <div className='button-group'>\r\n          <button id='Audio Channel' type='button' className='btn btn-primary btn-sm voice-button' style={{display: !joinState ? 'inline' : 'none'}} onClick={async () => { \r\n           const codeFromQueryParameter = findGetParameter('code');\r\n           // IB: When testing locally, we need to pass in the \"test\" channel ID for Agora testing.\r\n           const accessCode = codeFromQueryParameter!=='' ? codeFromQueryParameter : 'test';;\r\n            // IB: Pass in Random generated userID from parent.\r\n            join(appid,accessCode, null,parseInt(props.userID));\r\n            }}>Join Voice Channel</button>\r\n          <button id='leave' type='button' className='btn btn-primary btn-sm voice-button' style={{display: joinState ? 'inline' : 'none',color:'#5abaf9'}} onClick={() => {leave()}}>Leave Voice Channel</button>\r\n        </div>\r\n      </form>\r\n      {/*Hidden to avoid taking extra UI space, as video will not be part of our call*/}\r\n      <div className='player-container' style={{display:'none'}} > \r\n        <div className='local-player-wrapper' >\r\n        </div>\r\n        {remoteUsers.map(user => (<div className='remote-player-wrapper' key={user.uid}>\r\n            <p className='remote-player-text'>{`remoteVideo(${user.uid})`}</p>\r\n            <MediaPlayer videoTrack={undefined/*<div>user.videoTrack*/} audioTrack={user.audioTrack}></MediaPlayer>\r\n          </div>))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeprecatedCall;\r\n","import React from 'react';\r\nimport { ITab, IPreset } from '../shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconName } from '@fortawesome/fontawesome-svg-core';\r\nimport { Droppable, Draggable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport DeprecatedCall from '../Call';\r\n\r\n\r\ntype State = {\r\n  allTabsVisible: boolean;\r\n};\r\n\r\ntype Props = {\r\n  preset: IPreset;\r\n  tabs: ITab[];\r\n  selected: number;\r\n  //IB: Including User ID\r\n  agoraUserID:string;\r\n  // IB: End of Additions\r\n  editable?: boolean;\r\n\r\n  onChange: (index: number) => void;\r\n  onNewTab: () => void;\r\n  onDeleteTab: (tab: number) => Promise<void>;\r\n};\r\n\r\nexport class Tabs extends React.Component<Props> {\r\n  ref = React.createRef<HTMLDivElement>();\r\n  state: State = { \r\n    allTabsVisible: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (prevProps.tabs !== this.props.tabs || \r\n        prevProps.selected !== this.props.selected ||\r\n        prevProps.editable !== this.props.editable) \r\n      this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  setRef = (innerRef: (el) => void, el) => {\r\n    this.ref = { current: el };\r\n\r\n    innerRef(el);\r\n  }\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    let transform = style.transform;\r\n    transform = transform?.replace(/(, (-|)[0-9]+)/, ', 0') || '';    \r\n\r\n    return { ...style, transform };\r\n  }\r\n\r\n  onResize = () => {\r\n    const wrapper = this.ref?.current;\r\n    if (!wrapper)\r\n      return;\r\n\r\n    const { children } = wrapper;\r\n    let childrenWidth = 0;\r\n    for (let el of children)\r\n      childrenWidth += el.clientWidth;\r\n    \r\n    this.setState({ allTabsVisible: childrenWidth < wrapper.clientWidth });\r\n    this.onTabChange(this.props.selected);\r\n  }\r\n\r\n  onTabChange = (index: number): void => {\r\n    const wrapper = this.ref.current;\r\n    if (index < 0 || index >= this.props.tabs?.length || !wrapper)\r\n      return;\r\n      \r\n    if (this.props.selected !== index)\r\n      this.props.onChange?.(index);\r\n\r\n    const { children, scrollLeft, clientWidth } = wrapper;\r\n\r\n    let offsetStart = 0;\r\n    for (let i = 0; i < index; i++)\r\n      offsetStart += children[i]?.clientWidth ?? 0;\r\n\r\n    const offsetEnd = offsetStart + children[index]?.clientWidth;\r\n    const visibleLeft = scrollLeft <= offsetStart;\r\n    const visibleRight = offsetEnd <= scrollLeft + clientWidth;\r\n    \r\n    if (!visibleRight)\r\n      wrapper.scrollTo(offsetEnd - clientWidth, 0);\r\n\r\n    if (!visibleLeft) \r\n      wrapper.scrollTo(offsetStart, 0);\r\n  }\r\n\r\n  renderTab = (tab: ITab, index: number) => {\r\n    const { editable, selected } = this.props;\r\n    const id = `tab-${index}`;\r\n\r\n    return(\r\n      <Draggable key={id} \r\n                 draggableId={id}\r\n                 index={index}\r\n                 isDragDisabled={!editable}>\r\n        {(provided, snapshot) => (\r\n          <div className={`tab ${index === selected && 'selected'}`}\r\n               ref={provided.innerRef}\r\n               {...provided.draggableProps}\r\n               {...provided.dragHandleProps}\r\n               style={{ ...this.getStyle(provided.draggableProps.style, snapshot) }}\r\n               onPointerDown={() => this.onTabChange(index)}\r\n               tabIndex={-1}>\r\n            <div className=\"icon\" >\r\n              {!!tab.icon && <FontAwesomeIcon icon={[\"fas\", tab.icon as IconName]} />}\r\n            </div>\r\n            <div className=\"label\">{tab.name}</div>\r\n            {editable && selected === index &&\r\n              <div className=\"delete-tab\" onClick={this.props.onDeleteTab.bind(this, index)}><FontAwesomeIcon icon={['fas', 'times']} /></div>\r\n            }\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { tabs, selected, editable, preset } = this.props;\r\n    const { allTabsVisible } = this.state;\r\n\r\n    let leftTabClassName = 'arrow left ';\r\n    if (selected === 0 || allTabsVisible)\r\n      leftTabClassName += 'disabled';\r\n\r\n    let rightTabClassName = 'arrow right ';\r\n    if (selected === tabs?.length - 1 || allTabsVisible)\r\n      rightTabClassName += 'disabled ';\r\n\r\n    return (\r\n      <div className=\"tabs-wrapper\">\r\n        <div className=\"tabs-wrapper-inner\">\r\n          <Droppable droppableId=\"header-tabs\" \r\n                     direction=\"horizontal\" \r\n                     type=\"HEADER_TABS\"\r\n                     isDropDisabled={!editable}>\r\n            {provided => (\r\n              <div ref={this.setRef.bind(this, provided.innerRef)}\r\n                   className=\"tabs-drop-list\"\r\n                   {...provided.droppableProps}>\r\n                {tabs?.map(this.renderTab)}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n        <div style={{flex: 1}}></div>\r\n        {\r\n        //IB: Passing generated Usesr ID down the chain\r\n        }\r\n        <DeprecatedCall userID={this.props.agoraUserID}/>\r\n        <div className=\"tab-navigation\" style={{display:\"none\"}}>\r\n          {!!editable && \r\n            <div className=\"tab new-tab\" onClick={() => this.props.onNewTab()}><FontAwesomeIcon icon={['fas', 'plus']} /></div>\r\n          }\r\n          <div className={leftTabClassName} onClick={() => this.onTabChange(selected - 1)}><FontAwesomeIcon icon={['fas', 'caret-left']} /></div>\r\n          <div className={rightTabClassName} onClick={() => this.onTabChange(selected + 1)}><FontAwesomeIcon icon={['fas', 'caret-right']} /></div>\r\n          <div className=\"preset-name\">{preset?.Name}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport queryString from 'query-string';\r\nimport { _api, ReduxState } from './reducers';\r\nimport { ConnectionStatus, Tabs, Screen, Stack, RenameModal, AlertModal, IconModal, PropertiesDrawer, Login } from './components';\r\nimport { IPreset, IView, ITab, TabLayout, WidgetTypes, ICustomStackProperty, IPanelType, ScreenType, IPanel, ICustomStackListItem } from './shared';\r\nimport { fas, IconName } from '@fortawesome/free-solid-svg-icons';\r\nimport { BeforeCapture, DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport _ from 'lodash';\r\n\r\ntype PropsFromState = Partial<{\r\n  keyCorrect?: boolean;\r\n  connected?: boolean;\r\n  loading?: boolean;\r\n  isOpen?: boolean;\r\n  view: IView;\r\n  presets: IPreset[]\r\n  preset: IPreset;\r\n  initialize?: () => void;\r\n}>;\r\n\r\nconst mapStateToProps = (state: ReduxState): PropsFromState => ({\r\n  connected: state.api.status.connected,\r\n  keyCorrect: state.api.status.keyCorrect,\r\n  loading: state.api.status.loading,\r\n  isOpen: state.api.status.isOpen,\r\n  presets: _.values(state.api.presets),\r\n  preset: state.api.presets[state.api.preset],\r\n  view: state.api.view,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch): PropsFromState => ({\r\n  initialize: async () => dispatch(_api.initialize()),\r\n});\r\n\r\ntype DropElement = {\r\n  id: string;\r\n  path: string;\r\n  type: string;\r\n  accept: string[];\r\n}\r\n\r\ntype DropBoundaries = {\r\n  id: string;\r\n  top: number;\r\n  bottom: number;\r\n}\r\n\r\ntype State = {\r\n  tab: number;\r\n  editable?: boolean;\r\n  panel?: number;\r\n  dragging?: string;\r\n  droppable?: string;\r\n  selected?: string;\r\n  hoverTab?: string;\r\n  vector?: ICustomStackProperty;\r\n};\r\n\r\nconst characters ='0123456789';\r\n//IB: Range of number IDs is 0 - 10000\r\n// We will use the range 1-9999\r\nfunction generateAgoraUserID():string {\r\n// The maximum is exclusive and the minimum is inclusive\r\n    let min = Math.ceil(1);\r\n    let max = Math.floor(10000);\r\n    let result = Math.floor(Math.random() * (max - min) + min).toString(); \r\n    return result;\r\n  }\r\n\r\n@(connect(mapStateToProps, mapDispatchToProps) as any)\r\nexport class App extends React.Component<PropsFromState, State> {\r\n\r\n  state: State = {\r\n    tab: 0,\r\n    panel: 0\r\n  };\r\n\r\n  //IB: Store Custom User ID\r\n  agoraID = generateAgoraUserID();\r\n  // IB: End Custom State info\r\n\r\n  appRef = React.createRef<HTMLDivElement>();\r\n  panelRef = React.createRef<HTMLDivElement>();\r\n\r\n  widget: any[] = null;\r\n  dropElements: Record<string, DropElement> = {};\r\n  dropBoundaries: DropBoundaries[] = [];\r\n  hoverDelay = null;\r\n  buildInfo: string = '';\r\n\r\n  componentDidMount() {\r\n    this.props.initialize();\r\n    document.onpointermove = this.onPointerMove;\r\n    this.getBuildInfo()\r\n        .then(info => this.buildInfo = info);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsFromState, prevState: State) {\r\n    const { preset } = this.props;\r\n    const { editable } = this.state;\r\n\r\n    if (preset?.Name !== prevProps.preset?.Name)\r\n      this.setState({ tab: 0 });\r\n\r\n    if (editable !== prevState.editable)\r\n      this.setState({ selected: null });\r\n      \r\n    // IB: Commented out as version mismatch is allowed now as we are detaching the server and client.\r\n    //if (this.props.connected && !prevProps.connected)\r\n    //this.checkVersionMatch();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.onpointermove = null;\r\n  }\r\n\r\n  getBuildInfo = async (): Promise<string> => {\r\n    try {\r\n      const req = await fetch('/version.json');\r\n      return await req.text();\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  // IB: Commented out as version mismatch is allowed now as we are detaching the server and client.\r\n  /*checkVersionMatch = async () => {\r\n    const buildInfo = await this.getBuildInfo();\r\n    if (!this.buildInfo || !buildInfo)\r\n      return;\r\n\r\n    if (this.buildInfo === buildInfo)\r\n      return;\r\n\r\n    const reload = await AlertModal.show('The web app seems to be outdated, reload?');\r\n    if (reload)\r\n      document.location.reload();\r\n  }\r\n  */\r\n\r\n  onDropElementAdd = (id: string, path: string = '', accept: string[], type) => {\r\n    this.dropElements[id] = { id, path, accept, type };\r\n\r\n    return id;\r\n  }\r\n\r\n  onPointerMove = (e: PointerEvent) => {\r\n    const { dragging, droppable } = this.state;\r\n\r\n    if (!dragging)\r\n      return;\r\n\r\n    const elements = document.elementsFromPoint(e.clientX, e.clientY);\r\n    const tab = elements.find(el => !!el?.getAttribute('data-prefix'));\r\n\r\n    if (tab) {\r\n      const prefix = tab.getAttribute('data-prefix');\r\n      const id = tab.getAttribute('data-value');\r\n\r\n      clearTimeout(this.hoverDelay);\r\n      return this.hoverDelay = setTimeout(() => this.setState({ hoverTab: `${prefix}_${id}` }), 300);\r\n    }\r\n\r\n    clearTimeout(this.hoverDelay);\r\n\r\n    const el = elements.find(el => !!el?.getAttribute('data-rbd-droppable-id'));\r\n    const attr = el?.getAttribute('data-rbd-droppable-id');\r\n\r\n    if (!attr || droppable === attr)\r\n      return;\r\n\r\n    const dropTypes = this.dropElements[attr]?.accept || [];\r\n    const type = _.last(dragging.split('_'));\r\n\r\n    if (dropTypes.includes(type) || _.first(dropTypes) === 'ALL')\r\n      this.setState({ droppable: attr });\r\n  }\r\n\r\n  onKeyDown = async (e: React.KeyboardEvent) => {\r\n    if (!e.ctrlKey && !e.metaKey && e.key !== 'Delete')\r\n      return;\r\n\r\n    const { tab, selected, editable } = this.state;\r\n\r\n    if (e.key === 'Delete') {\r\n      if (!editable || !selected || e.target instanceof HTMLInputElement)\r\n        return;\r\n\r\n      const { view } = this.props;\r\n      const tab = view.tabs?.[this.state.tab];\r\n      const [path, index] = selected?.split('_');\r\n\r\n      const widgets = _.get(tab.panels, path, tab.panels) as ICustomStackProperty[];\r\n\r\n      if (!widgets.length)\r\n        return;\r\n\r\n      if (!e.shiftKey) {\r\n        if (!await AlertModal.show('Are you sure you want to delete ?'))\r\n          return;\r\n      }\r\n\r\n      widgets.splice(+index, 1);\r\n      _api.views.set(view);\r\n\r\n      return this.appRef?.current?.focus();\r\n    }\r\n\r\n    let tabNumber = parseInt(e.key);\r\n    if (!isNaN(tabNumber)) {\r\n      const { view } = this.props;\r\n\r\n      // tabNumber == 1-9 tab #index, 0 - last tab\r\n      tabNumber = tabNumber || view.tabs?.length || 1;\r\n\r\n      this.onTabChange(tabNumber - 1);\r\n      e.preventDefault();\r\n\r\n      return;\r\n    }\r\n\r\n    switch (e.nativeEvent.code) {\r\n      case 'KeyE':\r\n        e.preventDefault();\r\n        this.setState({ editable: !this.state.editable });\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        this.onTabChange(tab - 1);\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        this.onTabChange(tab + 1);\r\n        break;\r\n    }\r\n  }\r\n\r\n  isEditable = (tab: number): boolean => {\r\n    const { view } = this.props;\r\n\r\n    if (!view.tabs?.length)\r\n      return false;\r\n\r\n    const { layout, panels } = view.tabs[tab] ?? {};\r\n    switch (layout) {\r\n      case TabLayout.Stack:\r\n        return !panels?.length;\r\n\r\n      case TabLayout.Screen:\r\n        return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  onTabChange = (tab: number) => {\r\n    const { view } = this.props;\r\n\r\n    tab = Math.min(Math.max(0, tab), view.tabs?.length - 1) || 0;\r\n    const editable = this.isEditable(tab) || this.state.editable;\r\n    this.setState({ tab, vector: null, editable });\r\n  }\r\n\r\n  getNewTabName = (): string => {\r\n    let last = 0;\r\n    for (const tab of this.props.view?.tabs ?? []) {\r\n      const match = /^Tab (\\d+)$/i.exec(tab.name);\r\n      const index = parseInt(match?.[1]);\r\n      if (!isNaN(index) && index > last)\r\n        last = index;\r\n    }\r\n\r\n    return `Tab ${last + 1}`;\r\n  }\r\n\r\n  getRandomIcon = (): IconName => {\r\n    const iconPack = Object.keys(fas);\r\n    const keys = iconPack.map(key => fas[key].iconName);\r\n    const index = Math.round(performance.now() * 10000) % keys.length;\r\n    return keys[index];\r\n  }\r\n\r\n  onNewTab = (panels: IPanel[] = []) => {\r\n    const { view } = this.props;\r\n    \r\n    this.createNewTabInternal(panels);\r\n    _api.views.set(view);\r\n\r\n    this.onTabChange(view.tabs.length - 1);\r\n    this.setState({ editable: true });\r\n  }\r\n\r\n  onNewTabs = (items: ICustomStackListItem[]) => {\r\n    const { view } = this.props;    \r\n\r\n    for (const item of items)\r\n      this.createNewTabInternal(item.panels, item.label);\r\n\r\n    _api.views.set(view);\r\n\r\n    this.onTabChange(view.tabs.length - 1);\r\n    this.setState({ editable: true });\r\n  }\r\n\r\n  createNewTabInternal = (panels: IPanel[] = [], name?: string) => {\r\n    const { view } = this.props;\r\n\r\n    view.tabs.push({\r\n      name: name ?? this.getNewTabName(),\r\n      icon: this.getRandomIcon(),\r\n      layout: TabLayout.Stack,\r\n      panels\r\n    });\r\n  }\r\n\r\n  onDuplicateTab = () => {\r\n    const { view } = this.props;\r\n    const { tab } = this.state;\r\n\r\n    const duplicatedTab: ITab = {\r\n      ...view.tabs[tab],\r\n      name: this.getNewTabName(),\r\n    };\r\n\r\n    view.tabs.push(duplicatedTab);\r\n    _api.views.set(view);\r\n    this.onTabChange(view.tabs.length - 1);\r\n    this.setState({ editable: true });\r\n  }\r\n\r\n  onAddSnapshotTab = () => {\r\n    const { view } = this.props;\r\n\r\n    view.tabs.push({\r\n      name: 'Snapshot',\r\n      icon: 'save',\r\n      layout: TabLayout.Screen,\r\n      screen: { type: ScreenType.Snapshot },\r\n    });\r\n\r\n    _api.views.set(view);\r\n    this.onTabChange(view.tabs.length - 1);\r\n  }\r\n\r\n  onAddSequencerTab = () => {\r\n    const { view } = this.props;\r\n\r\n    view.tabs.push({\r\n      name: 'Sequences',\r\n      icon: 'play',\r\n      layout: TabLayout.Screen,\r\n      screen: { type: ScreenType.Sequencer },\r\n    });\r\n\r\n    _api.views.set(view);\r\n    this.onTabChange(view.tabs.length - 1);\r\n  }\r\n\r\n  onSetTabsDrawer = (editable: boolean) => {\r\n    this.setState({ editable });\r\n  }\r\n\r\n  onPresetChanged = (preset: IPreset) => {\r\n    if (preset.ID !== this.props.preset?.ID)\r\n      _api.presets.select(preset);\r\n  }\r\n\r\n  onTabRename = async () => {\r\n    const { view } = this.props;\r\n    const { tab } = this.state;\r\n\r\n    const oldName = view.tabs[tab].name;\r\n    const name = await RenameModal.rename(oldName, 'Tab title');\r\n    if (!name || name === oldName)\r\n      return;\r\n\r\n    view.tabs[tab].name = name;\r\n    _api.views.set(view);\r\n  }\r\n\r\n  onTabDelete = async (tab: number) => {\r\n    if (!await AlertModal.show('Are you sure you want to delete this tab?'))\r\n      return;\r\n\r\n    const { view } = this.props;\r\n    if (tab < 0 || tab >= view.tabs.length)\r\n      return;\r\n\r\n    view.tabs.splice(tab, 1);\r\n    _api.views.set(view);\r\n    tab = Math.min(tab, view.tabs.length - 1);\r\n\r\n    this.setState({ tab });\r\n  }\r\n\r\n  onTabIconChange = async () => {\r\n    const { view } = this.props;\r\n    const tab = view.tabs[this.state.tab];\r\n    if (!tab)\r\n      return;\r\n\r\n    const newIcon = await IconModal.show(tab.icon);\r\n\r\n    if (newIcon) {\r\n      tab.icon = newIcon;\r\n      _api.views.set(view);\r\n    }\r\n  }\r\n\r\n  setVectorDrawer = (widget?: ICustomStackProperty) => {\r\n    let vector = null;\r\n    if (widget?.widgets?.length)\r\n      vector = widget;\r\n\r\n    this.setState({ vector });\r\n  }\r\n\r\n  resetDragState = (state: any = {}) => {\r\n    this.widget = null;\r\n\r\n    this.setState({ dragging: null, droppable: null, selected: null, ...state });\r\n  }\r\n\r\n  onBeforeCapture = (initial: BeforeCapture) => {\r\n    let { selected } = this.state;\r\n    if (!initial.draggableId.startsWith('REORDER'))\r\n      selected = null;\r\n\r\n    this.setState({ dragging: initial.draggableId, selected });\r\n  }\r\n\r\n  onDragEnd = (result: DropResult) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination)\r\n      return this.resetDragState();\r\n\r\n    const { view } = this.props;\r\n\r\n    if (result.type === 'HEADER_TABS') {\r\n      const tab = view.tabs[source.index];\r\n\r\n      view.tabs.splice(source.index, 1);\r\n      view.tabs.splice(destination.index, 0, tab);\r\n      _api.views.set(view);\r\n\r\n      this.onTabChange(destination.index);\r\n\r\n      return this.resetDragState();\r\n    };\r\n\r\n    const tab = view.tabs?.[this.state.tab];\r\n    const drop = this.dropElements[destination.droppableId];\r\n\r\n    if (['TABS-REORDER', 'LIST-REORDER'].includes(result.type)) {\r\n      let tabs = _.get(tab?.panels, drop.path, tab?.panels);\r\n\r\n      if (result.type === 'TABS-REORDER')\r\n        tabs = tabs.tabs;\r\n\r\n      if (result.type === 'LIST-REORDER')\r\n        tabs = tabs.items;\r\n\r\n      const drag = tabs[source.index];\r\n\r\n      tabs.splice(source.index, 1);\r\n      tabs.splice(destination.index, 0, drag);\r\n\r\n      return _api.views.set(view);\r\n    };\r\n\r\n    if (!drop)\r\n      return this.resetDragState();\r\n\r\n    const sourcePath = this.dropElements[source.droppableId]?.path;\r\n    const dropPath = drop?.path;\r\n    const dragType = _.last(draggableId.split('_'));\r\n\r\n    const index = source.index;\r\n\r\n    if (!tab.panels)\r\n      tab.panels = [];\r\n\r\n    const panels = [...tab.panels];\r\n    const dropDestination = _.get(tab?.panels, dropPath, tab?.panels);\r\n\r\n    if (!this.widget?.length) {\r\n      this.widget = _.get(tab?.panels, sourcePath, tab?.panels).splice(index, 1);\r\n\r\n      if (dropPath === sourcePath && [WidgetTypes.Button, WidgetTypes.ColorPicker, WidgetTypes.MiniColorPicker, WidgetTypes.Toggle].includes(this.widget[0]?.widget as WidgetTypes)) {\r\n        if (destination.droppableId !== source.droppableId && source.index < destination.index)\r\n          destination.index -= 1;\r\n      }\r\n    }\r\n\r\n    let el = [...this.widget];\r\n\r\n    switch (dragType) {\r\n      case 'PANEL':\r\n        break;\r\n\r\n      case 'LIST':\r\n        el = [{ type: IPanelType.List, items: [{ label: 'Item 1', panels }] }];\r\n        dropDestination.splice(0, dropDestination.length);\r\n        break;\r\n\r\n      default:\r\n        if (['ROOT', 'LIST'].includes(drop.type))\r\n          el = [{ type: IPanelType.Panel, widgets: el }];\r\n        break;\r\n    }\r\n\r\n    dropDestination.splice(destination.index, 0, ...el);\r\n\r\n    this.resetDragState({ selected: `${dropPath}_${destination.index}_${_.first(el).property || null}` });\r\n    _api.views.set(view);\r\n  }\r\n\r\n  onSelected = (selected: string) => {\r\n    if (!this.state.editable)\r\n      return;\r\n\r\n    this.setState({ selected });\r\n  }\r\n\r\n  onResetSelection = (e: React.MouseEvent) => {\r\n    this.setState({ selected: null });\r\n  }\r\n\r\n  renderTab = () => {\r\n    const { view } = this.props;\r\n    if (!view.tabs || !view.tabs.length)\r\n      return null;\r\n\r\n    const index = this.state.tab;\r\n    const tab = view.tabs[index];\r\n\r\n    let visible = true;\r\n    const style: React.CSSProperties = {};\r\n    if (this.state.tab !== index) {\r\n      visible = false;\r\n      style.display = 'none';\r\n    }\r\n\r\n    let content = null;\r\n    switch (tab?.layout) {\r\n      case TabLayout.Stack:\r\n        content = this.renderStack(tab, visible, index);\r\n        break;\r\n\r\n      case TabLayout.Screen:\r\n        content = this.renderScreen(tab, visible);\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <section id=\"panels\" key={index} className={`layout-${tab.layout}`} style={style}>\r\n        {content}\r\n      </section>\r\n    );\r\n  }\r\n\r\n  renderStack = (tab: ITab, visible: boolean, index: number) => {\r\n    const { editable, dragging, droppable, selected, hoverTab, vector } = this.state;\r\n    const tabKey = `${tab.name}-${index}`;\r\n    return (\r\n      <div ref={this.panelRef} className=\"panel\" onClick={this.onResetSelection}>\r\n        <Stack \r\n               agoraUserID={this.agoraID}\r\n               panels={tab.panels}\r\n               editable={editable}\r\n               visible={visible}\r\n               dragging={dragging}\r\n               droppable={droppable}\r\n               selected={selected}\r\n               tabKey={tabKey}\r\n               hoverTab={hoverTab}\r\n               vector={vector}\r\n               onSelected={this.onSelected}\r\n               getDroppableId={this.onDropElementAdd}\r\n               onSetVectorDrawer={this.setVectorDrawer} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderScreen = (tab: ITab, visible: boolean) => {\r\n    return (\r\n      <div className=\"panel\">\r\n        <Screen screen={tab.screen} visible={visible} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onUpdateView = (update: boolean) => {\r\n    const { view } = this.props;\r\n\r\n    if (update)\r\n      this.setState({ selected: null });\r\n\r\n    _api.views.set(view);\r\n  }\r\n\r\n  checkPassphrase = async (passphrase: string): Promise<boolean> => {\r\n    return await _api.passphrase.login(passphrase);\r\n  }\r\n\r\n  renderStatus = () => {\r\n    const { keyCorrect, connected, loading, isOpen, preset } = this.props;\r\n\r\n    if (!connected)\r\n      return <ConnectionStatus />;\r\n\r\n    if (!keyCorrect && !isOpen)\r\n      return <Login />;\r\n    if (loading  || !preset) {\r\n      return (\r\n        <div className=\"fullscreen\">\r\n          <div className=\"app-icon\">\r\n            <FontAwesomeIcon icon={['fas', 'sync-alt']} spin />\r\n          </div>\r\n          <div>Loading Preset Data...</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    //if (!preset)\r\n    //  return <h1 className=\"fullscreen opaque\">No Preset Available</h1>;\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n    const { view, preset, presets } = this.props;\r\n    const { tab, editable, selected } = this.state;\r\n    return (\r\n      <DragDropContext onBeforeCapture={this.onBeforeCapture}\r\n                       onDragEnd={this.onDragEnd}>\r\n        <div id=\"app\"\r\n             className={`${editable ? 'tabs-open' : ''} `}\r\n             tabIndex={1}\r\n             ref={this.appRef}\r\n             onKeyDown={this.onKeyDown} >\r\n\r\n          {this.renderStatus()}\r\n\r\n          <nav id=\"top-bar\">\r\n            <div className=\"app-icon\">\r\n              <img src=\"/images/favicon/32x32.png\" alt=\"Unreal Engine\" />\r\n            </div>\r\n            <div id=\"mode-toggle\" className=\"tab edit-tab mode-toggle\">\r\n              <label className=\"switch toggle-mode\">\r\n                <input type=\"checkbox\" checked={!!editable} onChange={() => this.onSetTabsDrawer(!editable)} />\r\n                <span className=\"slider inline\"></span>\r\n              </label>\r\n            </div>\r\n\r\n            <Tabs preset={preset}\r\n                  //IB: Start\r\n                  agoraUserID={this.agoraID}\r\n                  // IB: End\r\n                  tabs={view.tabs}\r\n                  selected={tab}\r\n                  onChange={this.onTabChange}\r\n                  onNewTab={this.onNewTab}\r\n                  editable={editable}\r\n                  onDeleteTab={this.onTabDelete} />\r\n          </nav>\r\n\r\n          {!!preset &&\r\n            <PropertiesDrawer \r\n                              //IB: Passing Agora User ID downstream\r\n                              agoraUserID={''}\r\n                              //\r\n                              preset={preset}\r\n                              presets={presets}\r\n                              editable={editable}\r\n                              tab={tab}\r\n                              view={view}\r\n                              panels={view.tabs[tab]?.panels || []}\r\n                              selected={selected}\r\n                              onChangeIcon={this.onTabIconChange}\r\n                              onRenameTabModal={this.onTabRename}\r\n                              onDuplicateTab={this.onDuplicateTab}\r\n                              onAddSnapshotTab={this.onAddSnapshotTab}\r\n                              onAddSequencerTab={this.onAddSequencerTab}\r\n                              onPresetChange={this.onPresetChanged}\r\n                              onUpdateView={this.onUpdateView}\r\n                              onSelected={this.onSelected}\r\n                              onNewTabs={this.onNewTabs}\r\n                              lockWidget={widget => this.widget = widget} />\r\n          }\r\n          {this.renderTab()}\r\n        </div>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(fas);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\nimport { App } from './App';\r\nimport './styles/style.less';\r\nimport './IconLibrary';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}