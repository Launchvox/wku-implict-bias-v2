{"version":3,"sources":["shared/index.ts","reducers/api.ts","reducers/index.ts","assets/ue_logo.svg","components/controls/ColorPicker.tsx","components/ConnectionStatus.tsx","components/controls/Button.tsx","utilities/WidgetUtilities.ts","components/controls/Dial.tsx","components/controls/ColorPickerList.tsx","components/controls/DialsWrapper.tsx","components/controls/Joystick.tsx","components/controls/JoysticksWrapper.tsx","components/controls/SafeImage.tsx","components/controls/ValueInput.tsx","components/controls/Slider.tsx","components/controls/SlidersWrapper.tsx","components/controls/TimeControl.tsx","components/controls/Tabs.tsx","components/controls/Text.tsx","components/controls/Toggle.tsx","components/controls/VectorControl.tsx","components/controls/VectorDrawer.tsx","components/controls/Search.tsx","components/controls/SliderWheel.tsx","components/Widgets/AssetWidget.tsx","components/Widgets/DropdownWidget.tsx","components/Widgets/ImageSelectorWidget.tsx","components/Widgets/SlidersWidget.tsx","components/Widgets/SliderWidget.tsx","components/Widgets/TabWidget.tsx","components/Widgets/ToggleWidget.tsx","components/Widgets/VectorWidget.tsx","components/modals/AlertModal.tsx","components/modals/IconModal.tsx","components/modals/PrecisionModal.tsx","components/modals/RenameModal.tsx","components/modals/SearchModal.tsx","components/Stack.tsx","components/PropertiesDrawer.tsx","components/DragDropWidgets.tsx","components/Properties/Pressets.tsx","components/Properties/Tab.tsx","components/Properties/Widgets.tsx","components/Properties/Properties.tsx","components/Screens/ColorCorrection/ColorCorrection.tsx","assets/cc_icon.svg","assets/lc_icon.svg","components/Screens/ColorCorrection/CorrectionColorPicker.tsx","components/Screens/ColorCorrection/CorrectionColorSlider.tsx","components/Screens/ColorCorrection/PaginationContent.tsx","components/Screens/LightCards.tsx","components/Screens/Playlist.tsx","components/Screens/Snapshot.tsx","components/Screens/Sequencer.tsx","components/Screen.tsx","components/Login.tsx","hooks/useAgora.tsx","components/MediaPlayer.tsx","Call.tsx","components/Tabs.tsx","components/SignalIcon.tsx","components/EmptyTab.tsx","example/CustomWidget.tsx","App.tsx","IconLibrary.ts","index.tsx"],"names":["PropertyType","ConnectionSignal","WidgetTypes","IPanelType","TabLayout","ScreenType","_preset","_dispatch","_getState","_socket","_pingInterval","staticIo","event","this","respond","connected","version","console","log","args","API","STATUS","Good","fn","functions","undefined","warn","_host","_initialize","dispatch","getState","on","isOpen","keyCorrect","clearInterval","presets","PRESETS","payloads","PAYLOADS","PAYLOAD","preset","property","value","PAYLOADS_VALUE","changes","view","VIEW","loading","_api","get","pingTime","pongTime","signal","diff","Bad","Normal","emit","_request","method","url","body","callback","passphrase","a","request","mode","redirect","headers","FormData","JSON","stringify","fetch","res","text","answer","length","parse","status","ok","_get","_put","createAction","PRESET_SELECT","LOCK_UI","HISTORY_UPDATE","initialize","bind","ping","Date","getTime","lockUI","locked","undoHistory","api","undo","redo","payload","action","shift","push","time","set","redoHistory","pop","unshift","load","id","presetId","Promise","resolve","reject","setTimeout","favorite","select","ID","views","tabs","name","layout","Empty","login","localStorage","setItem","all","historyPush","lastUndo","_","last","valueOf","execute","func","metadata","meta","rebind","properties","owner","assets","search","q","types","prefix","filterArgs","count","thumbnailUrl","asset","proxy","put","function","objectPath","functionName","parameters","generateTransaction","then","ret","ReturnValue","propertyName","access","propertyValue","initialState","lockedUI","reducer","createReducer","state","dotProp","merge","presetsMap","keyBy","params","URLSearchParams","window","location","getItem","combineReducers","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SliderType","ColorPickerParts","ColorMode","createElement","d","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","ConnectionStatus","className","React","Component","Button","onExecute","onClick","label","WidgetUtilities","type","Int8","min","max","Int16","Int32","Uint16","Uint32","Float","Vector","Vector2D","Vector4","LinearColor","Rotator","Double","Number","MIN_VALUE","MAX_VALUE","Color","number","parseFloat","isNaN","exposed","Exposed","parseNumber","Metadata","Min","Max","render","custom","customWidgets","propertyWidgets","propertyType","Int64","Uint64","Slider","Dial","Boolean","Uint8","Toggle","Joystick","Sliders","Dials","ColorPicker","MiniColorPicker","String","Text","startsWith","Dropdown","Asset","color","rgb","vector","rgbColor","R","X","G","Y","B","Z","A","s","r","g","b","Math","h","v","hsvColor","floor","f","p","t","c","createRef","alpha","getValue","colorToRgb","rgb2Hsv","setState","angle","onChange","e","monitoring","circleRef","current","setPointerCapture","pointerId","onPointerRgbMove","rectangleRef","onPointerHsvMove","rect","getBoundingClientRect","xCenter","right","left","yCenter","bottom","top","x","clientX","y","clientY","radius","sqrt","maxRadius","clientHeight","radians","atan2","normalize","PI","hsv2rgb","colorValue","rgbToColor","onSetColor","hsv","releasePointerCapture","sign","step","background","radian","Rgb","maxCircleRadius","circleX","sin","circleY","cos","rectangleWidth","clientWidth","rectangleHeight","rectangleX","rectangleY","parts","widget","visible","map","part","Circle","Saturation","Value","slider","precision","draggable","onValueInputChange","pos","getPointerPosition","style","transform","onPointerMove","onPointerDown","onPointerRgbDown","onPointerUp","onPointerRgbUp","rectangleStyle","backgroundColor","rectanglePointerStyle","onPointerHsvDown","onPointerHsvUp","updateValues","prevProps","forceUpdate","reset","getVisibleParts","onPrecisionModal","icon","rendeCircleRectangle","Wheel","toFixed","onWheelMove","onHsvWheelMove","onValueSliderChange","Alpha","Inputs","renderRgbInput","getPreviewColorStyles","DialMode","ColorPickerSlider","SliderWidth","pointer","dragOffset","dragValue","abs","round","prevState","onPointerLostCapture","getPercentage","ColorPickerList","selected","item","index","path","preventDefault","onSelect","list","first","items","dragging","selection","split","parent","find","isDragDisabled","getPropertyValue","draggableId","getMaxColorValue","onItemSelect","getPropertyLabel","getAlpha","Intl","NumberFormat","onMove","Range","getValueFromAngle","Rotation","linesList","largeLineStep","tickAngle","shortLines","rangeAngle","isActive","shortTickAngle","active","startAngle","endAngle","largeLines","endlessAngle","renderSmallLines","begin","end","range","getRange","Endless","prevAngle","getAngle","phi","display","decimals","beautify","format","calcLength","angleInProc","svgCircleDegreeLength","angleCalc","size","wrapperStyle","dialInputStyle","position","hidePrecision","onLostPointerCapture","onUp","onDown","tabIndex","rotate","getPaintOverRotate","circlePaintOver","getCirclePaintOver","renderLines","stopPropagation","hideReset","cxcy","circleRotateAngle","strokeDashoffset","xmlns","x1","x2","y1","y2","offset","stopColor","cx","cy","fill","strokeWidth","strokeDasharray","DialsWrapper","getPropertyKeys","filter","includes","proportionally","getProperties","prev","ratio","val","onProportionallyToggle","dials","dialSize","renderProportionallyIcon","interval","makeMove","setInterval","joystickValue","onPointerMoveCapture","onLostPointerCaptureCapture","onPointerLost","JoysticksWrapper","speed","z","axis","showReset","leftJoystick","getJoystick","rightJoystick","renderInput","onSpeedChange","showLabel","SafeImage","hasError","fallback","alt","src","onError","ValueInput","input","dragStartX","touchTime","performance","now","getNumberValue","innerWidth","onChangeValue","setPropsValue","newValue","disabled","onDoubleClick","inputMode","pattern","onManualChange","onKeyDown","onBlur","onContextMenu","touchMode","classList","contains","circle","percent","nativeEvent","code","showGrid","showLimits","renderGridLines","TimeKey","SlidersWrapper","sliderValue","getPropertyPrecision","onSliderChange","Tabs","elements","containerRef","getElementsByClassName","el","offsetLeft","onTabChange","children","defaultActiveKey","child","selector","selectorRef","getSelectorPosition","tab","updateActive","addEventListener","updateSelector","removeEventListener","leftIcon","rightIcon","onlyHeader","Array","isArray","renderTabHeader","renderTabContent","TabPane","TimeControl","num","toString","padStart","hours","minutes","getTwoDigits","dir","normalizeValue","m","Hours","Minutes","slice","getInputValues","onTimeChange","hoursInputRef","onInputClick","onInputChange","minutesInputRef","dashArr","from","VectorControl","activeKey","sliderRef","pointerRef","onMouseMove","center","transition","translate","onKeySelect","defaultValue","getIsDisabled","resetActiveKey","renderPropertyInput","onMouseDown","onMouseUp","getPointerStyles","onReset","VectorDrawer","widgets","setMode","modes","compact","w","onClose","rotator","dialMode","showModes","renderMode","renderJoystick","Search","onSearch","toLowerCase","placeholder","SliderWheel","vertical","onWheelStart","delta","sum","circles","renderCircles","AssetWidget","typePath","substring","replace","SearchModal","open","Path","browse","readOnly","onBrowse","DropdownWidget","options","option","ImageSelectorWidget","itemSize","minHeight","startCase","SlidersWidget","isSlider","selectedProperties","Fragment","SliderWidget","isRange","TabWidget","data-prefix","data-value","ToggleWidget","checked","VectorWidget","onToggleVectorDrawer","onSetVector","k","onAxisChange","AlertModal","onCancel","close","document","onKeyPress","onOK","pending","div","getElementById","prepend","ReactDOM","finally","unmountComponentAtNode","parentNode","removeChild","IconModal","filterText","onFilterChangeDelayed","toLocaleLowerCase","debounce","onFilterChange","fas","iconName","onFilterTextChange","autoFocus","autoComplete","onResetFilter","renderIcons","PrecisionModal","negative","factor","onSetMeta","getHsvColor","hsvToColor","getHsvValue","W","values","getInputKey","onRgbValueInputChange","onRgbStepChange","onRgbWheelMove","multiplier","toUpperCase","onHsvValueInputChange","onHsvStepChange","onHsvWheelStart","onMetadataChange","update","show","originalValue","stepSize","nextStep","backStep","isDisabled","isEqual","renderMinMaxSlider","onStepChange","onRevertChanges","rgbBtnClassName","hsvBtnClassName","Hsv","renderHsvInput","renderColorPickerModal","renderNumberPrecicionModal","loaded","sensitivity","renderPrecisionModalContent","RenameModal","fetchAssets","fetchAssetsDebounced","Name","spin","renderAssetItem","TabType","tempId","Stack","connect","draggingId","templates","Description","DisplayName","Function","throttle","onPropertyValueChange","field","str","Type","getMetadata","precisionModal","getWidgetMetadata","getLabel","onPropertyAxisValueChange","onThrottledPropertyValueChange","getWidgetId","onPointerChange","onDragChange","onSelected","editable","droppable","droppableId","getDroppableId","isDropDisabled","listIndex","Widget","direction","firstTab","Label","Spacer","renderWidgets","isSelected","panels","panel","renderPanel","data","itemContent","listId","firstListItem","selectedItem","itemId","renderListItemContent","UnderlyingProperty","EnumValues","trim","spaces","toggle","TypePath","dial","axisValue","onSetVectorDrawer","button","limit","getWidgetType","firstIndex","widgetType","element","renderTabs","renderSliders","ImageSelector","renderImageSelector","renderSpacerWidget","renderJoysticks","renderDropdown","renderLabel","renderSlider","renderTextWidget","renderVectorWidget","renderDialsWidget","renderAssetWidget","getInlineWidgets","renderDialWidgets","renderToggleWidgets","renderButtonWidgets","renderColorList","renderColorPickerList","ids","pickerList","pickerItem","PropertyIds","getPanelProperties","PresetId","matching","sessionStorage","template","Panel","panelPath","isTemplate","onFocus","isIos","onRefreshPanelOptions","onRebindActor","match","List","renderList","tabKey","isList","root","querySelector","test","navigator","platform","ontouchmove","touches","touch","scrollY","pageY","scrollTop","scrollTo","ongesturechange","ongestureend","hoverTab","onPointerEnter","renderRootList","renderVectorDrawer","renderPrecisionModal","DraggableWidget","snapshot","isDropAnimating","isDragging","transitionDuration","provided","innerRef","draggableProps","getStyle","defaultPrevented","dragHandleProps","DroppableWidget","isDraggingOver","data-type","droppableProps","VirtualList","itemProps","firstChild","scrollerRef","components","Item","renderItemPlaceholder","getItemSize","Pressets","onDebouncedFavoriteClick","IsFavorite","onPresetChange","onFavoritePreset","pressets","spinIconClassName","onFavoriteToggled","Tab","onChangeIcon","onRenameTabModal","onDuplicateTab","Widgets","minWidth","itemIcon","renderWidget","Properties","collapsed","group","ExposedProperties","ExposedFunctions","onWidgetsLock","onToggleGroup","renderDraggableItem","groups","onSerach","renderGroup","Section","CCRMode","ColorProperty","ActorsGroup","SliderMode","Sensitivity","Presets","PropertiesDrawer","filteredGroups","Groups","filteredWidgets","sortBy","filteredPresets","editTab","usedProperties","usedPropArray","uniq","reduce","result","listItem","getPropertiesofWidget","picker","filterGroup","prop","onUpdateView","splice","onViewUpdatedDebounced","lockWidget","onWidgetTabRemove","renderDelete","onListItemRemove","onNewTabs","available","colorPicker","renderCompatibleWidgets","renderPropertyLabel","initial","xor","onDiscardStateMetadata","ScaleSlider","getMinMax","onWidgetRemove","renderMinMax","vectorModes","Proportionally","onVectorModeChange","renderSlidersEdit","param","UnderlyingFunction","Arguments","ueLabel","onFunctionParameterChanged","arg","argName","renderTabsEdit","renderListsEdit","renderPanelEdit","renderColorPickersListEdit","renderColorPickerEdit","renderLabelEdit","renderSpacerEdit","renderDialEdit","renderDialsEdit","renderVectorEdit","renderFunctionEdit","compatible","onPropertyChange","isPropertyUsed","getCompatibleWidgets","noValue","onWidgetTypeChanged","widgetClassName","data-tooltip","getWidgetFromElement","onPropertiesFilter","onWidgetsFilter","onPresetFilter","buildPropertyList","resetFilter","isPropertyAvailable","renderTab","renderCompatibleProperties","renderProperties","ColorCorrection","actors","favorites","Global","colorProperty","Gain","section","actorsGroup","All","sliderMode","Infinity","onRefreshActors","onRefreshValues","Enabled","LightCards","bHidden","updateSelection","Class","timestamp","actor","remove","actionsStack","lastIndexOf","getRootComponentPath","onPropertyValueChangeInternal","onRootPropertyValueChangeInternal","Favorites","onRefresh","Offset","onInfiniteWheelMove","replaceAll","opt","executeButton","renderColorSlider","grading","def","isColorModeModified","onFavoriteToggle","pagination","start","fromEntries","toPairs","actorsKeys","getActorClassName","onActorSelect","onToggleActorEnable","renderChangeIndication","Highlights","Midtones","Shadows","onSpawnActor","contents","onThrottledRootPropertyValueChange","Pitch","Roll","Yaw","renderTabsIcons","renderPositionTab","renderSelect","renderToggle","pages","renderAdvancedContent","renderAppearanceContent","renderOrientationContent","timer","getColorProperty","availableFavorites","pickBy","onSectionChange","onRangeUpdate","onColorPropertyChange","onColorModeChange","isColorPropertyModified","onDeleteActor","pageItems","actorsLength","total","renderActorsContent","renderSection","gradientUnits","gradientTransform","stopOpacity","opacity","CorrectionColorPicker","colorMode","isObject","hue","onColorChange","sliderProperty","getPropertyType","getColorResetValue","pointerEvents","getSectionProps","renderModifyIndicator","getValueColor","onShiftSliderMove","CorrectionColorSlider","onRgbChange","onHsvChange","getHsv","getRgbValue","getVSliderMinColor","sliderMax","wheel","getSSliderColor","getVSliderColor","PaginationContent","onPaginationClick","renderPaginationArrow","renderColorPicker","Playlist","sequences","activeTooltip","WorldContextObject","player","currentPlaylist","folder","dirname","basename","filename","playlistAsset","onLoadPlaylist","playlist","Items","changed","PlaylistItems","playing","IsPlaying","InPlaylist","itemPath","sequence","onSetPlaylistItem","Sequence","onPlaylistItemAction","seq","onSequenceBrowse","StartFrameOffset","EndFrameOffset","bHoldAtFirstFrame","NumLoops","onclick","onDocumentClick","onInitialize","onCheckSequenceStatus","filterLowerCase","onPlaylistBrowse","onPlaylistAction","onAddItem","onSearchChange","colSpan","renderPlaylistItem","Snapshot","sortAsc","snapshots","filters","editorSubsystem","nativeFilters","EnableBlueprintNativeClassFiltering","NativeParentClasses","bpFilters","MapPath","sortAssets","ascending","orderBy","onSortChange","SaveModal","showDetails","SnapshotDescription","CaptureTime","onSetSort","onCreate","renderColumnHeader","renderSnapshot","SnapshotPreview","filterAsset","filterInstance","OptionalFilter","SnapshotName","head","onLoad","description","FileName","FolderPath","editor","RootLevelSnapshotSaveDir","LevelSnapshotSaveDir","DefaultLevelSnapshotName","InWorldName","exec","InTextToParse","PathFormatted","NameFormatted","rows","Sequencer","playSequence","sequencer","NewFrame","renderSequence","Screen","screen","Login","localTracks","audioTrack","MediaPlayer","container","useRef","useEffect","videoTrack","play","stop","client","AgoraRTC","createClient","codec","findGetParameter","parameterName","tmp","substr","forEach","decodeURIComponent","DeprecatedCall","useState","localAudioTrack","setLocalAudioTrack","joinState","setJoinState","joinInProgress","setJoinInProgressState","aiDenoiserState","remoteUsers","setRemoteUsers","appid","channel","uid","token","join","createMicrophoneAudioTrack","publish","leave","flag","handleUserPublished","user","mediaType","subscribe","handleUserUnpublished","handleUserJoined","handleUserLeft","off","controler","useAgora","accessCode","photonRoom","parseInt","userID","allTabsVisible","wrapper","childrenWidth","scrollLeft","offsetStart","offsetEnd","visibleLeft","onDeleteTab","onResize","leftTabClassName","rightTabClassName","setRef","agoraUserID","onNewTab","SignalIcon","EmptyTab","screens","onAddScreen","generateAgoraUserID","ceil","random","App","req","getBuildInfo","buildInfo","reload","accept","dropElements","elementsFromPoint","getAttribute","clearTimeout","hoverDelay","attr","dropTypes","ctrlKey","metaKey","HTMLInputElement","shiftKey","appRef","focus","tabNumber","isEditable","createNewTabInternal","getNewTabName","getRandomIcon","duplicatedTab","oldName","rename","newIcon","destination","resetDragState","drop","drag","sourcePath","dropPath","dragType","dropDestination","content","renderStack","renderScreen","onScreenAdd","panelRef","onResetSelection","agoraID","onDropElementAdd","setVectorDrawer","onpointermove","info","checkVersionMatch","appClassName","onBeforeCapture","onDragEnd","renderStatus","onTabDelete","onLockedChange","onTabIconChange","onTabRename","onPresetChanged","library","add","far","store","createStore","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.2884e9d3.chunk.js","sourcesContent":["export enum PropertyType {\r\n  Boolean =         'bool',\r\n  Int8 =            'int8',\r\n  Int16 =           'int16',\r\n  Int32 =           'int32',\r\n  Int64 =           'int64',\r\n  Uint8 =           'uint8',\r\n  Uint16 =          'uint16',\r\n  Uint32 =          'uint32',\r\n  Uint64 =          'uint64',\r\n  Float =           'float',\r\n  Double =          'double',\r\n  Vector =          'FVector',\r\n  Vector2D =        'FVector2D',\r\n  Vector4 =         'FVector4',\r\n  Rotator =         'FRotator',\r\n  Color =           'FColor',\r\n  LinearColor =     'FLinearColor',\r\n  String =          'FString',\r\n  Text =            'FText',\r\n\r\n  Function =        'Function',\r\n}\r\n\r\nexport enum ConnectionSignal {\r\n  Good =   'GOOD',\r\n  Normal = 'NORMAL',\r\n  Bad =    'BAD',\r\n}\r\n\r\nexport interface ColorProperty {\r\n  R: number;\r\n  G: number;\r\n  B: number;\r\n  A?: number;\r\n}\r\n\r\nexport interface VectorProperty {\r\n  X: number;\r\n  Y: number;\r\n  Z: number;\r\n  W?: number;\r\n}\r\n\r\nexport interface RotatorProperty {\r\n  Pitch: number;\r\n  Yaw: number;\r\n  Roll: number;\r\n}\r\n\r\nexport type PropertyValue = boolean | number | string | VectorProperty | RotatorProperty | ColorProperty | IPayload;\r\n\r\nexport type JoystickValue = { [key: string]: number };\r\n\r\nexport type IHsvColor = {\r\n  h: number;\r\n  s: number;\r\n  v: number;\r\n  a?: number;\r\n};\r\n\r\nexport interface IFunctionParameter {\r\n  Name: string;\r\n  Description: string;\r\n  Type: PropertyType;\r\n  Optional?: boolean;\r\n  OutParameter?: boolean;\r\n}\r\n\r\nexport interface IFunction {\r\n  Name: string;\r\n  Description?: string;\r\n  Arguments: IFunctionParameter[];\r\n}\r\n\r\nexport interface IExposedFunction {\r\n  ID: string;\r\n  DisplayName: string;\r\n  UnderlyingFunction: IFunction;\r\n  Metadata: { [key: string]: string };\r\n\r\n  //Added\r\n  Type: PropertyType;\r\n}\r\n\r\nexport interface IProperty {\r\n  Name: string;\r\n  Description: string;\r\n  Type: PropertyType;\r\n  TypePath: string;\r\n  Metadata: { [key: string]: string };\r\n}\r\n\r\nexport interface IExposedProperty {\r\n  ID: string;\r\n  DisplayName: string;\r\n  Metadata: Record<string, string>;\r\n  Widget: WidgetType;\r\n  UnderlyingProperty: IProperty;\r\n  OwnerObjects: IObject[];\r\n\r\n  //Added\r\n  Type: PropertyType;\r\n  TypePath: string;\r\n}\r\n\r\nexport interface IController {\r\n  ID: string;\r\n  Name: string;\r\n  Type: PropertyType;\r\n  TypePath: string;\r\n  Path: string;\r\n\r\n  DisplayName: string;\r\n  Metadata: Record<string, string>;\r\n  Widget: WidgetType;\r\n\r\n\r\n  UnderlyingProperty: IProperty;\r\n  OwnerObjects: IObject[];\r\n}\r\n\r\nexport interface IActor {\r\n  Name: string;\r\n  Path: string;\r\n  Class: string;\r\n}\r\n\r\nexport interface IExposedActor {\r\n  DisplayName: string;\r\n  UnderlyingActor: IActor;\r\n}\r\n\r\nexport interface IGroup {\r\n  Name: string;\r\n  ExposedProperties: IExposedProperty[];\r\n  ExposedFunctions: IExposedFunction[];\r\n}\r\n\r\nexport interface IPreset {\r\n  Path: string;\r\n  Name: string;\r\n  ID: string;\r\n  Groups: IGroup[];\r\n  \r\n  ExposedProperties?: IExposedProperty[];\r\n  ExposedFunctions?: IExposedFunction[];\r\n  Controllers?: IController[];\r\n  Exposed?: Record<string, IExposedProperty | IExposedFunction | IController>;\r\n  IsFavorite?: boolean;\r\n}\r\n\r\nexport type IPresets = { [preset: string]: IPreset };\r\n\r\nexport interface IObject {\r\n  Name: string;\r\n  Class: string;\r\n  Path: string;\r\n}\r\n\r\nexport interface IAsset extends IObject {\r\n  Metadata: Record<string, string>;\r\n}\r\n\r\nexport type IPayload = { [property: string]: PropertyValue | IPayload };\r\n\r\nexport type IPayloads = { [preset: string]: IPayload };\r\n\r\nexport enum WidgetTypes {\r\n  Asset =           'Asset',\r\n  Dial =            'Dial',\r\n  Dials =           'Dials',\r\n  Slider =          'Slider',\r\n  Sliders =         'Sliders',\r\n  ScaleSlider =     'Scale Slider',\r\n  ColorPicker =     'Color Picker',\r\n  MiniColorPicker = 'Mini Color Picker',\r\n  ColorPickerList = 'Color Picker List',\r\n  Toggle =          'Toggle',\r\n  Joystick =        'Joystick',\r\n  Button =          'Button',\r\n  Text =            'Text',\r\n  Label =           'Label',\r\n  Dropdown =        'Dropdown',\r\n  ImageSelector =   'Image Selector',\r\n  Vector =          'Vector',\r\n  Spacer =          'Spacer',\r\n  Tabs =            'Tabs',\r\n}\r\n\r\nexport type WidgetType = keyof typeof WidgetTypes | string;\r\n\r\n\r\nexport type IWidgetMeta = {\r\n  Description?: string;\r\n  Min?: number;\r\n  Max?: number;\r\n} & { [key: string]: any };\r\n\r\n\r\nexport enum IPanelType {\r\n  Panel = 'PANEL',\r\n  List  = 'LIST',\r\n}\r\n\r\nexport interface IPanel {\r\n  id?: string;\r\n  title?: string;\r\n  isTemplate?: boolean;\r\n  type: IPanelType;\r\n  widgets?: ICustomStackWidget[];\r\n  items?: ICustomStackListItem[];\r\n}\r\n\r\nexport interface IColorPickerList {\r\n  id?: string;\r\n  widget: WidgetTypes.ColorPickerList;\r\n  items: ICustomStackProperty[];\r\n}\r\n\r\nexport enum TabLayout {\r\n  Stack =    'Stack',\r\n  Screen =   'Screen',\r\n  Empty =    'Empty',\r\n}\r\n\r\nexport enum ScreenType {\r\n  Stack =           'Stack',\r\n  Playlist =        'Playlist',\r\n  Snapshot =        'Snapshot',\r\n  Sequencer =       'Sequencer',\r\n  ColorCorrection = 'ColorCorrection',\r\n  LightCards =      'LightCards',\r\n}\r\n\r\nexport interface IScreen {\r\n  type: ScreenType;\r\n  data?: any;\r\n}\r\n\r\nexport interface IDropdownOption {\r\n  value: string;\r\n  label?: string;\r\n}\r\n\r\nexport interface ICustomStackProperty {\r\n  id?: string;\r\n  property: string;\r\n  propertyType: PropertyType;\r\n  widget: WidgetType;\r\n\r\n  // Label only\r\n  label?: string;\r\n\r\n  // Vector only\r\n  widgets?: WidgetType[];\r\n\r\n  // Dropdown only\r\n  options?: IDropdownOption[];\r\n\r\n  // Function arguments\r\n  args?: Record<string, any>;\r\n\r\n  // Space only\r\n  spaces?: number;\r\n}\r\n\r\nexport interface ICustomStackItem {\r\n  id?: string;\r\n  label: string;\r\n  widgets: ICustomStackWidget[];\r\n}\r\n\r\nexport interface ICustomStackTabs {\r\n  id?: string;\r\n  widget: 'Tabs';\r\n  tabs: ICustomStackItem[];\r\n}\r\n\r\nexport interface ICustomStackListItem {\r\n  id?: string;\r\n  label: string;\r\n  check?: { actor: string; property: string; };\r\n  panels: IPanel[];\r\n}\r\n\r\nexport type ICustomStackWidget = ICustomStackProperty | ICustomStackTabs | IColorPickerList;\r\n\r\nexport interface IView {\r\n  tabs: ITab[];\r\n}\r\n\r\nexport interface ITab {\r\n  name: string;\r\n  icon: string;\r\n  layout: TabLayout;\r\n  panels?: IPanel[];\r\n  screen?: IScreen;\r\n}\r\n\r\nexport interface IHistory {\r\n  property: string;\r\n  value: any;\r\n  time: Date;\r\n}","import { Dispatch } from 'redux';\r\nimport { SimpleActionCreator, createAction, createReducer } from 'redux-act';\r\nimport dotProp from 'dot-prop-immutable';\r\n//import io from 'socket.io-client';\r\nimport { IAsset, IPayload, IPayloads, IPreset, IView, PropertyValue, TabLayout, IHistory, ConnectionSignal } from '../shared';\r\nimport _ from 'lodash';\r\n\r\n\r\nexport type ApiState = {\r\n  presets: { [id: string]: IPreset };\r\n  preset?: string;\r\n  payload: IPayload;\r\n  payloads: IPayloads;\r\n  view: IView;\r\n  status: {\r\n    connected?: boolean;\r\n    keyCorrect?: boolean;\r\n    loading?: boolean;\r\n    isOpen?: boolean;\r\n    signal?: ConnectionSignal;\r\n  },\r\n  lockedUI: boolean;\r\n  undo: IHistory[],\r\n  redo: IHistory[],\r\n};\r\n\r\n//Ian Berget: Created to allow for static hmtl IO integrating with Photon engine.\r\nclass staticIo {\r\n  functions: { [id: string] : Function; } = {};\r\n\r\n  emit( event: string, ...args: any[] ) : void {\r\n    switch (event) {\r\n      case \"client\":\r\n         //Ian Berget, modifying to alway show connected.\r\n        this.respond(\"connected\",{ connected:true, version:\"1.0.0\" });\r\n        break;\r\n\r\n      case \"view\":\r\n        console.log(\"view\");\r\n        break;\r\n    \r\n      case \"value\":\r\n        console.log(\"value:\" + args);\r\n        this.respond('value', args);//Preset,Property,Value\r\n        break;\r\n\r\n      case \"execute\":\r\n        console.log(\"execute\");\r\n        break;\r\n\r\n      case \"metadata\":\r\n        console.log(\"metadata\");\r\n        break;\r\n\r\n      case \"rebind\":\r\n        console.log(\"rebind\");\r\n        break;\r\n\r\n      case \"search\":\r\n        console.log(\"search\");\r\n        break;\r\n    \r\n      default:\r\n        console.log(\"default\");\r\n    }\r\n    _dispatch(API.STATUS(ConnectionSignal.Good));\r\n  }\r\n  on( event: string, fn: Function ) : staticIo  {\r\n    this.functions[event]=fn;\r\n    //Allow statement chaining.\r\n    return this;\r\n  }\r\n  respond(event: string, ...args: any[]) : void \r\n  {\r\n    if(this.functions[event] != null && this.functions[event] != undefined)\r\n    {\r\n        this.functions[event](args);\r\n    }\r\n    else{\r\n      console.warn(\"The event \" + event + \" was not found.\");\r\n    }\r\n  }\r\n}\r\n\r\nlet _preset;\r\nlet _dispatch: Dispatch;\r\nlet _getState: () => { api: ApiState };\r\n//Ian Berget: Removing socket, as we will instead use Photon for networking.\r\nlet _socket: staticIo;\r\n//let _socket: SocketIOClient.Socket;\r\n/////////////////////////////////////\r\n//let _passphrase: string;\r\nlet _pingInterval: NodeJS.Timeout;\r\n\r\n//Ian Berget: Modifying to allow access through static system.\r\nconst _host = 'https://hdbbagmsb5.execute-api.us-east-1.amazonaws.com/prod';//(process.env.NODE_ENV === 'development' ? `http://${window.location.hostname}:7001` : '');\r\n\r\nfunction _initialize(dispatch: Dispatch, getState: () => { api: ApiState }) {\r\n  _dispatch = dispatch;\r\n  _getState = getState;\r\n  //_passphrase = localStorage.getItem('passphrase'); \r\n\r\n  _socket = new staticIo();\r\n  //_socket = io(`${_host}/`, { path: '/api/io' });\r\n\r\n  _socket\r\n    .on('disconnect', () => {\r\n      dispatch(API.STATUS({ connected: false, isOpen: false, keyCorrect: false, version: undefined }));\r\n      clearInterval(_pingInterval);\r\n    })\r\n    .on('presets', (presets: IPreset[]) => dispatch(API.PRESETS(presets)))\r\n    .on('payloads', (payloads: IPayloads) => {\r\n      dispatch(API.PAYLOADS(payloads));\r\n      if (!_preset || !payloads[_preset])\r\n        return;\r\n\r\n      dispatch(API.PAYLOAD(payloads[_preset]));\r\n    })\r\n    .on('value', (preset: string, property: string, value: PropertyValue) => {\r\n      dispatch(API.PAYLOADS_VALUE({ [preset]: { [property]: value }}));\r\n      if (_preset === preset)\r\n        dispatch(API.PAYLOAD({ [property]: value }));\r\n    })\r\n    .on('values', (preset: string, changes: { [key: string]: PropertyValue }) => {\r\n      dispatch(API.PAYLOADS_VALUE({ [preset]: changes }));\r\n      if (_preset === preset)\r\n        dispatch(API.PAYLOAD(changes));\r\n    })\r\n    .on('view', (preset: string, view: IView) => {\r\n      if (_preset !== preset)\r\n        return;\r\n\r\n      dispatch(API.VIEW(view));\r\n    })\r\n    .on('connected', (connected: boolean, version: string) => {\r\n      if (_pingInterval)\r\n        clearInterval(_pingInterval);\r\n      \r\n      _pingInterval = null;\r\n      //if (_passphrase !== null)\r\n      //  _api.passphrase.login(_passphrase);\r\n\r\n      //Ian Berget: Forcing connected state\r\n      dispatch(API.STATUS({ connected: true, isOpen: true, keyCorrect: true, version: \"1.0.0\" }));\r\n      clearInterval(_pingInterval);\r\n      _socket.respond('opened',{isOpen:true});\r\n    })\r\n    .on('opened', (isOpen: boolean) => {\r\n      dispatch(API.STATUS({ isOpen, loading: false }));\r\n      _api.presets.get();\r\n      \r\n      //Ian Berget: Commenting out until we can confirm how this influences the rendering process.\r\n      //_api.payload.all();\r\n      //_pingInterval = setInterval(_api.ping, 1000); //Don't refresh\r\n    })\r\n    .on('loading', (loading: boolean) => {\r\n      dispatch(API.STATUS({ loading }));\r\n    })\r\n    .on('pong', (pingTime: number, pongTime: number) => {\r\n      let signal = ConnectionSignal.Good;\r\n      const diff = pongTime - pingTime;\r\n\r\n      if (diff > 50)\r\n        signal = ConnectionSignal.Bad;\r\n      else if (diff > 15)\r\n        signal = ConnectionSignal.Normal;\r\n\r\n\r\n      dispatch(API.STATUS({ signal }));\r\n    });\r\n\r\n    //Ian Berget: Forcing initial ping within class itself\r\n    _socket.emit('client');\r\n}\r\n\r\ntype IRequestCallback = Function | string | undefined;\r\n\r\nasync function _request(method: string, url: string, body: string | object | undefined, callback: IRequestCallback, passphrase?: string): Promise<any> {\r\n  const request: RequestInit = { method, mode: 'cors', redirect: 'follow', headers: {} };\r\n  if (body instanceof FormData || typeof(body) === 'string') {\r\n    request.body = body;\r\n  } else if (typeof(body) === 'object') {\r\n    request.body = JSON.stringify(body);\r\n    request.headers['Content-Type'] = 'application/json';\r\n  }\r\n\r\n  //Ian Berget: Disallowed by CORS\r\n  //request.headers['passphrase'] = passphrase ?? _passphrase;\r\n\r\n  const res = await fetch(_host + url, request);\r\n\r\n  let answer: any = await res.text();\r\n  if (answer.length > 0)\r\n    answer = JSON.parse(answer);\r\n  \r\n  if (res.status === 401)\r\n    _dispatch(API.STATUS(answer));\r\n\r\n  if (!res.ok)\r\n    throw answer;\r\n\r\n  if (typeof (callback) === 'function')\r\n    _dispatch(callback(answer));\r\n\r\n  return answer;\r\n}\r\n\r\nfunction _get(url: string, callback?: IRequestCallback, passphrase?: string)        { return _request('GET', url, undefined, callback, passphrase) };\r\nfunction _put(url: string, body: any, passphrase?: string)                          { return _request('PUT', url, body, undefined, passphrase) };\r\n\r\n\r\n//Ian Berget: Creating standins for get requests that don't require additional data.\r\nfunction _getPreset(presetId: string, callback?: IRequestCallback): Promise<IPreset>       \r\n{ \r\n  return new Promise<IPreset>(function(resolve, reject) {\r\n    // some async operation here\r\n    setTimeout(function() {\r\n        // resolve the promise with some value\r\n        resolve(API.PRESETS[presetId]);\r\n    }, 1);\r\n  }); //Ian Berget: Forcing as async for parity with original API.\r\n};\r\nfunction _getPayload(presetId: string, callback?: IRequestCallback): Promise<IPayload>       \r\n{ \r\n  return new Promise<IPayload>(function(resolve, reject) {\r\n    // some async operation here\r\n    setTimeout(function() {\r\n        // resolve the promise with some value\r\n        resolve(API.PAYLOAD[presetId]);\r\n    }, 1);\r\n  }); //Ian Berget: Forcing as async for parity with original API.\r\n};\r\n\r\nconst API = {\r\n  STATUS: createAction<any>('API_STATUS'),\r\n  PRESETS: createAction<IPreset[]>('API_PRESETS'),\r\n  PRESET_SELECT: createAction<string>('API_PRESET_SELECT'),\r\n  VIEW: createAction<IView>('API_VIEW'),\r\n  PAYLOAD: createAction<IPayload>('API_PAYLOAD'),\r\n  PAYLOADS: createAction<IPayloads>('API_PAYLOADS'),\r\n  PAYLOADS_VALUE: createAction<IPayloads>('API_PAYLOADS_VALUE'),\r\n  LOCK_UI: createAction<boolean>('LOCK_UI'),\r\n  HISTORY_UPDATE: createAction<{ undo: IHistory[], redo: IHistory[] }>('HISTORY_UPDATE'),\r\n};\r\n\r\n\r\nexport const _api = {\r\n  //Ian Berget: Expanding initialize to include logic to mark the system as connected, as the API layer has been replaced.\r\n  initialize: () => _initialize.bind(null),\r\n  ping: () => _socket.emit('client', new Date().getTime()),\r\n  lockUI: (locked: boolean) => _dispatch(API.LOCK_UI(locked)),\r\n  undoHistory: () => {\r\n    const { undo, redo, payload } = _getState().api;\r\n    const action = undo.shift();\r\n\r\n    if (!action)\r\n      return;\r\n    \r\n    redo.push({ property: action.property, value: payload[action.property], time: new Date() });\r\n\r\n    _dispatch(API.HISTORY_UPDATE({ undo, redo }));\r\n    _api.payload.set(action.property, action.value, false);\r\n  },\r\n  redoHistory: () => {\r\n    const { undo, redo, payload } = _getState().api;\r\n    const action = redo.pop();\r\n\r\n    if (!action)\r\n      return;\r\n\r\n    undo.unshift({ property: action.property, value: payload[action.property], time: new Date() });\r\n\r\n    _dispatch(API.HISTORY_UPDATE({ undo, redo }));\r\n    _api.payload.set(action.property, action.value, false);\r\n  },\r\n\r\n  presets: {\r\n    get: (): Promise<IPreset[]> => _get('/api/presets', API.PRESETS),\r\n    load: (id: string): Promise<IPreset> => _getPreset(id),//_get(`/api/presets/${id}/load`),\r\n    favorite: (id: string, value: boolean): Promise<IPreset> => _put(`/api/presets/${id}/favorite`, { value }),\r\n    select: (preset?: IPreset) => {\r\n      _api.presets.load(preset?.ID);\r\n\r\n      _dispatch(API.PRESET_SELECT(preset?.ID));\r\n      _dispatch(API.HISTORY_UPDATE({ undo: [], redo: [] }));\r\n    },\r\n  },\r\n  views: {\r\n    get: async(preset: string): Promise<IView> => {\r\n      let view = await _get(`/api/presets/view?preset=${preset}`);\r\n      if (typeof(view) !== 'object' || !view?.tabs?.length) {\r\n        view = {\r\n          tabs: [{ name: 'Tab 1', layout: TabLayout.Empty }]\r\n        };\r\n      }\r\n\r\n      _dispatch(API.VIEW(view));\r\n\r\n      return view;\r\n    },\r\n    set: (view: IView) => {\r\n      _socket.emit('view', _preset, view);\r\n    },\r\n  },\r\n  passphrase: {\r\n    login: async(passphrase: string): Promise<boolean> => {\r\n      const ok = await _get('/api/passphrase', API.STATUS, passphrase);\r\n      if (!ok)\r\n        return false;\r\n\r\n      localStorage.setItem('passphrase', passphrase);\r\n      //_passphrase = passphrase;\r\n      _api.presets.get();\r\n      _api.payload.all();\r\n      return true;\r\n    },\r\n  },\r\n  payload: {\r\n    get: (preset: string): Promise<IPayload> => _getPayload(preset, API.PAYLOAD),//_get(`/api/presets/payload?preset=${preset}`, API.PAYLOAD),\r\n    all: (): Promise<IPayloads> => _get('/api/payloads', API.PAYLOADS),\r\n    //Ian Berget: Removing use of history.\r\n    set: (property: string, value: PropertyValue, historyPush = false) => {\r\n      let { undo, redo, payloads } = _getState().api;\r\n\r\n      if (historyPush) {\r\n        if (undo.length > 50)\r\n          undo.shift();\r\n\r\n        if (redo.length > 0)\r\n          redo = [];\r\n\r\n        const lastUndo = _.last(undo);\r\n        const time = new Date();\r\n\r\n        if (lastUndo?.property === property && (time.valueOf() - lastUndo?.time?.valueOf()) < 60 * 1000)\r\n          lastUndo.value = payloads[_preset][property];\r\n        else\r\n          undo.unshift({ property, value: payloads[_preset][property], time });\r\n\r\n          _dispatch(API.HISTORY_UPDATE({ undo, redo }));\r\n      }\r\n\r\n      _socket.emit('value', _preset, property, value);\r\n    },\r\n    execute: (func: string, args?: Record<string, any>) => {\r\n      _socket.emit('execute', _preset, func, args ?? {});\r\n    },\r\n    metadata: (property: string, meta: string, value: string) => {\r\n      _socket.emit('metadata', _preset, property, meta, value);\r\n    },\r\n    rebind: (properties: string[], owner: string) => {\r\n      _socket.emit('rebind', _preset, properties, owner);\r\n    },\r\n  },\r\n  assets: {\r\n    search: (q: string, types: string[], prefix: string, filterArgs = {}, count: number = 50): Promise<IAsset[]> => {\r\n      return new Promise(resolve => _socket.emit('search', q, types, prefix, filterArgs, count, resolve));\r\n    },\r\n    thumbnailUrl: (asset: string) => `${_host}/api/thumbnail?asset=${asset}`,\r\n  },\r\n  proxy: {\r\n    get: (url: string) => _put('/api/proxy', { method: 'GET', url }),\r\n    put: (url: string, body: any) => _put('/api/proxy', { method: 'PUT', url, body }),\r\n    function: (objectPath: string, functionName: string, parameters: Record<string, any> = {}): Promise<any> => {\r\n      const body = { objectPath, functionName, parameters, generateTransaction: true };\r\n      return _api.proxy.put('/remote/object/call', body)\r\n                        .then(ret => ret?.ReturnValue);\r\n    },\r\n    property: {\r\n      get: <T = {}>(objectPath: string, propertyName?: string): Promise<T> => {\r\n        const body = { \r\n          objectPath,\r\n          propertyName,\r\n          access: 'READ_ACCESS',\r\n        };\r\n        return _api.proxy.put('/remote/object/property', body);        \r\n      },\r\n      set: (objectPath: string, propertyName: string, propertyValue: any) => {\r\n        const body = { \r\n          objectPath,\r\n          propertyName,\r\n          propertyValue: { [propertyName]: propertyValue },\r\n          access: 'WRITE_ACCESS',\r\n        };\r\n        return _api.proxy.put('/remote/object/property', body);        \r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst initialState: ApiState = {\r\n  presets: {},\r\n  payload: {},\r\n  payloads: {},\r\n  view: { tabs: null },\r\n  status: {\r\n    connected: false,\r\n    signal: ConnectionSignal.Good,\r\n    keyCorrect: false,\r\n    isOpen: false,\r\n  },\r\n  lockedUI: false,\r\n  undo: [],\r\n  redo: [],\r\n};\r\n\r\nconst reducer = createReducer<ApiState>({}, initialState);\r\n\r\nreducer\r\n  .on(API.STATUS, (state, status) => {\r\n    return dotProp.merge(state, 'status', status);\r\n  })\r\n  .on(API.PRESETS, (state, presets) => {\r\n    const presetsMap = _.keyBy(presets, 'ID');\r\n    state = dotProp.set(state, 'presets', presetsMap);\r\n\r\n    let { preset } = state;\r\n\r\n    // Is loaded preset still available?\r\n    if (preset && !presetsMap[preset])\r\n      preset = undefined;\r\n\r\n    // If there isn't a loaded preset\r\n    if (!preset) {\r\n      // 1. Load the preset name specified in the url\r\n      const params = new URLSearchParams(window.location.search);\r\n      preset = params.get('preset');\r\n\r\n      // 2. Load last used preset\r\n      if (!preset || !presetsMap[preset])\r\n        preset = localStorage.getItem('preset');\r\n\r\n      // 3. Load first preset\r\n      if (!preset || !presetsMap[preset])\r\n        preset = presets[0]?.ID;\r\n\r\n      // No available preset\r\n      if (!preset) {\r\n        _preset = undefined;\r\n        return { ...state, preset: undefined, view: { tabs: null }, payload: {} };\r\n      }\r\n\r\n      _preset = preset;\r\n      _api.presets.load(preset)\r\n          .then(() => Promise.all([\r\n              _api.views.get(preset),\r\n              _api.payload.get(preset),\r\n          ]));\r\n\r\n      return { ...state, preset, view: { tabs: [] }, payload: {} };\r\n    }\r\n\r\n    return state;\r\n  })\r\n  .on(API.VIEW, (state, view) => dotProp.merge(state, 'view', view))\r\n  .on(API.PAYLOADS, (state, payloads) => ({ ...state, payloads }))\r\n  .on(API.PAYLOADS_VALUE, (state, payloads) => {\r\n    for (const preset in payloads) {\r\n      const payload = payloads[preset];\r\n      for (const property in payload) {\r\n        state = dotProp.set(state, ['payloads', preset, property], payload[property]);\r\n      }\r\n    }\r\n    \r\n    return state;\r\n  })\r\n  .on(API.PAYLOAD, (state, payload) => {\r\n    for (const property in payload)\r\n      state = dotProp.set(state, ['payload', property], payload[property]);\r\n    \r\n    return state;\r\n  })\r\n  .on(API.PRESET_SELECT, (state, preset) => {\r\n    _preset = preset;\r\n    localStorage.setItem('preset', preset);\r\n    _api.views.get(preset);\r\n    _api.payload.get(preset);\r\n    return { ...state, preset, view: { tabs: [] }, payload: {} };\r\n  })\r\n  .on(API.LOCK_UI, (state, lockedUI) => {\r\n    return { ...state, lockedUI };\r\n  })\r\n  .on(API.HISTORY_UPDATE, (state, { undo, redo }) => {\r\n    return { ...state, undo, redo };\r\n  });\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\nimport api, { ApiState } from './api';\r\n\r\n\r\nexport interface ReduxState {\r\n  api: ApiState,\r\n}\r\n\r\nexport default combineReducers({\r\n  api,\r\n});\r\n\r\n\r\nexport { _api } from './api';\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Layer_1-2\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M160.2,227.1c-3.6,2.7-12.1,7.4-27.7,5.5-19.5-2.3-34.9-23.6-42.6-33.2l-3.8,3.3v16.3c-.2,1.3,.7,2.5,2,2.7h0v1.2h-13.5v-1.2c.6-.2,1.2-.5,1.6-1,.3-.5,.5-1.1,.4-1.8v-43.5c0-1.2-1-2.2-2.3-2.2-.9,0-1.7,.5-2,1.3-.5,1.1-1,2.2-1.3,3.3l-11.7,35.4-3.3,9.6h-6.7l-3-9.1-8.9-27-12.1,36.1h-6.7L3.9,177.8c-.6-1.9-1.2-3.1-1.7-3.8s-1.3-1.2-2.2-1.4v-.8H15.3v1.2c-1.3,.3-2,1.1-2,2.2,0,.8,.2,1.7,.5,2.5l8.6,27.2,9.3-27.3c.4-1.2,.6-2,.6-2.3,0-1.2-.7-1.9-2.1-2.2v-1.3h15.8v1.2c-1.4,.5-2.2,1.3-2.2,2.4,.1,.8,.3,1.5,.5,2.3l8.8,27.3,8.5-26.8c.4-1.3,.7-2.3,.7-3,0-1.1-.8-1.8-2.3-2.2v-1.2h28.2v1.2c-.6,.1-1.2,.5-1.6,1-.3,.5-.5,1.1-.4,1.7v15.7l17.9-15c.8-.8,1.2-1.4,1.2-1.9,0-.7-.6-1.2-1.8-1.5v-1.2h31.2v1.2c-1.3,.2-2.2,1.4-2.1,2.7h0v25.6c0,3,.1,5.2,.4,6.6,.2,1.3,.8,2.5,1.5,3.5,2,2.6,5.5,3.8,10.4,3.8s8.4-1.3,10.4-3.8c.8-1,1.3-2.2,1.5-3.5,.3-1.4,.4-3.6,.4-6.6v-25.6c0-.6-.1-1.2-.4-1.8-.4-.5-1-.8-1.6-1v-1.1h12.8v1.2c-.6,.2-1.2,.5-1.6,1-.3,.5-.5,1.1-.5,1.8v28.8c0,5.4-.8,9.5-2.5,12.2-3,4.9-9.3,7.3-18.9,7.3-6.9,0-12.2-1.3-15.9-3.9-2.1-1.5-3.7-3.7-4.5-6.2-.8-2.6-1.2-5.7-1.2-9.3v-29c0-1-1.1-2-2.3-2-.8,.1-1.5,.3-2.1,.8-.3,.2-21.8,19.1-21.8,19.1,7,9,18.5,24.7,29.4,31.5,13.7,8.5,27.4,3.7,33.2,1.3l.9,.7Z\"\n}), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.4,155V48.7c0-3.1-3.9-2.6-3.9-2.6v-7.2h25.6V127.4c13.4-3.1,29.1-9.6,41.5-23.4,12.4,13.8,29,20.3,42.4,23.4V38.9h25.7v7.2s-4-.4-4,2.6v106.3H23.4Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M108.1,29.2s-4.3,1.7-7.2-5.8c-2.9-7.5-9.4-8.7-9.4-8.7v-6.1c.9-.1,1.5-.9,1.5-1.7s-.7-1.5-1.5-1.5h-.1c-.1-1.7-1.5-3.1-3.2-3.2V0h-2.2V2.2c-3.2,.5-3.2,3.2-3.2,3.2-.8,0-1.5,.6-1.5,1.4v.1c0,.9,.6,1.6,1.5,1.7v6.1s-6.5,1.2-9.4,8.7c-2.9,7.5-7.2,5.8-7.2,5.8l-4.3,4.2,4.8,4.7h1.2v53.7c11.2-5.6,19.3-15.3,19.3-15.3,0,0,8.3,9.7,19.5,15.3V38.2h1.2l4.7-4.7-4.5-4.3Zm-21,35.1c-4.1,0-7.4-3.3-7.5-7.4,0-4.1,3.3-7.4,7.4-7.5,4.1,0,7.4,3.3,7.5,7.4v.1c-.1,4.1-3.4,7.4-7.4,7.4\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M167.6,226.5h-1v-5.7c.6-.1,1.3-.2,2-.2,.9,0,1.4,.2,1.8,.4,.4,.3,.6,.7,.6,1.2,0,.7-.5,1.2-1.1,1.4v.1c.5,.2,.8,.7,1,1.4,.1,.9,.3,1.2,.4,1.4h-1.1c-.2-.2-.3-.7-.4-1.5-.1-.6-.5-.9-1.3-.9h-.7l-.2,2.4Zm0-3.2h.7c.8,0,1.5-.2,1.5-.9,0-.6-.3-.9-1.4-.9-.3,0-.5,0-.8,.1v1.7Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M168.6,218.1c-3,0-5.5,2.4-5.5,5.5s2.4,5.5,5.5,5.5,5.5-2.4,5.5-5.5h0c0-3-2.4-5.5-5.5-5.5h0m0,10c-2.5,0-4.5-2-4.5-4.4s2-4.5,4.4-4.5,4.5,2,4.5,4.4h0c.1,2.5-1.9,4.4-4.4,4.5h0\"\n}));\n\nvar SvgUeLogo = function SvgUeLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_2\",\n    width: 174.1,\n    height: 233.04,\n    viewBox: \"0 0 174.1 233.04\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUeLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ue_logo.3bc5c470.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ColorProperty, VectorProperty, PropertyType, WidgetTypes } from 'src/shared';\r\nimport { ValueInput, SliderWheel } from '.';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { WidgetUtilities } from 'src/utilities';\r\n\r\n\r\nenum SliderType {\r\n  R  = 'R',\r\n  G  = 'G',\r\n  B  = 'B',\r\n};\r\n\r\nexport type ColorPickerValue = ColorProperty | VectorProperty;\r\n\r\nexport enum ColorPickerParts {\r\n  Circle     = 'CIRCLE',\r\n  Wheel      = 'WHEEL',\r\n  Value      = 'VALUE',\r\n  Saturation = 'SATURATION',\r\n  Alpha      = 'ALPHA',\r\n  Inputs     = 'INPUTS',\r\n}\r\n\r\nexport enum ColorMode {\r\n  Rgb = 'RGB',\r\n  Hsv = 'HSV',\r\n}\r\n\r\ntype Props = {\r\n  value?: ColorPickerValue;\r\n  type?: PropertyType;\r\n  mode?: ColorMode;\r\n  label?: React.ReactNode;\r\n  parts?: ColorPickerParts[];\r\n  widget?: string;\r\n  alpha?: boolean;\r\n  max?: number;\r\n  reset?: boolean;\r\n\r\n  onChange?: (value?: ColorPickerValue) => void;\r\n  onPrecisionModal?: () => void;\r\n}\r\n\r\ntype State = {\r\n  color: ColorPickerValue;\r\n  v: number;\r\n  max: number;\r\n}\r\n\r\nexport class ColorPicker extends React.Component<Props, State> {\r\n\r\n  static defaultProps: Props = {\r\n    parts: [\r\n      ColorPickerParts.Circle,\r\n      ColorPickerParts.Wheel,\r\n      ColorPickerParts.Saturation,\r\n      ColorPickerParts.Value,\r\n      ColorPickerParts.Alpha,\r\n      ColorPickerParts.Inputs\r\n    ],\r\n    widget: WidgetTypes.ColorPicker,\r\n    mode: ColorMode.Rgb,\r\n    reset: true,\r\n  };\r\n\r\n  state: State = {\r\n    color: null,\r\n    v: 1,\r\n    max: 1,\r\n  }\r\n\r\n  circleRef = React.createRef<HTMLDivElement>();\r\n  rectangleRef = React.createRef<HTMLDivElement>();\r\n  color: ColorPickerValue = null;\r\n  monitoring: boolean = false;\r\n\r\n  componentDidMount() {\r\n    this.updateValues();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { value, type, max } = this.props;\r\n\r\n    if (prevProps.value !== value || type !== prevProps.type)\r\n      this.updateValues();\r\n\r\n    if (prevProps.max !== max)\r\n      this.setState({ max });\r\n\r\n    if (this.props.mode !== prevProps.mode)\r\n      this.forceUpdate();\r\n  }\r\n\r\n  updateValues = () => {\r\n    const { type, alpha } = this.props;\r\n    let { max, v } = this.state;\r\n\r\n    const color = this.getValue() as ColorProperty;\r\n    const a = color?.A;\r\n    delete color?.A;\r\n\r\n    if (alpha)\r\n      color.A = a ?? 1;\r\n\r\n    let rgb = color;\r\n    if (type === PropertyType.Vector4 || type === PropertyType.LinearColor) {\r\n      max = this.props.max ?? 1;\r\n\r\n      for (const key in color)\r\n        if (color[key] > max)\r\n          max = color[key];\r\n\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n    }\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    v = hsv.v || 0.001;\r\n\r\n    this.setState({ color, max, v });\r\n  }\r\n\r\n  normalize = (angle: number): number => {\r\n    while (angle < 0) \r\n      angle += 360;\r\n\r\n    while (angle > 360)\r\n      angle -= 360;\r\n\r\n    return angle;\r\n  }\r\n\r\n  getValue = (): ColorPickerValue => {\r\n    const { value, type } = this.props;\r\n\r\n    if (value)\r\n      return value;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        return { X: 1, Y: 1, Z: 1 };\r\n\r\n      case PropertyType.Color:\r\n      case PropertyType.LinearColor:\r\n        return { R: 1, G: 1, B: 1 };\r\n    }\r\n  }\r\n\r\n  onSetColor = (color: ColorPickerValue) => {\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onPointerRgbDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = true;\r\n    this.circleRef.current.setPointerCapture(e.pointerId);\r\n\r\n    this.onPointerRgbMove(e);\r\n  }\r\n\r\n  onPointerHsvDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = true;\r\n    this.rectangleRef.current.setPointerCapture(e.pointerId);\r\n\r\n    this.onPointerHsvMove(e);\r\n  }\r\n\r\n  onPointerRgbMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const { type, alpha } = this.props;\r\n    const { v, max } = this.state;\r\n    const rect = this.circleRef.current.getBoundingClientRect();\r\n\r\n    const xCenter = (rect.right - rect.left) / 2 + rect.left;\r\n    const yCenter = (rect.bottom - rect.top) / 2 + rect.top;\r\n\r\n    const x = e.clientX - xCenter;\r\n    const y = e.clientY - yCenter;\r\n\r\n    const radius = Math.sqrt(x * x + y * y);\r\n    const maxRadius = this.circleRef.current.clientHeight / 2;\r\n\r\n    const radians = Math.atan2(x, y);\r\n    const h = this.normalize(-1 * radians * (180 / Math.PI) - 270) / 360;\r\n\r\n    let s = Math.min(radius / maxRadius, 1);\r\n    if (s < 0.02)\r\n      s = 0;\r\n\r\n    const value = { h, s, v };\r\n    const rgb = WidgetUtilities.hsv2rgb(value);\r\n\r\n    if (alpha) {\r\n      const color = this.state.color as ColorProperty;\r\n      rgb.A = color.A;\r\n    }\r\n\r\n    let colorValue: ColorPickerValue = null;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        colorValue = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        colorValue = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n\r\n      case PropertyType.Color:\r\n        colorValue = rgb;\r\n        break;\r\n    }\r\n\r\n    this.setState({ color: colorValue });\r\n    this.onSetColor(colorValue);\r\n  }\r\n\r\n  onPointerHsvMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    let { color, max } = this.state;\r\n    const { type } = this.props;\r\n    const rect = this.rectangleRef.current.getBoundingClientRect();\r\n\r\n    const x = Math.max(0, Math.min(rect.width, e.clientX - rect.left));\r\n    const y = Math.max(0, Math.min(rect.height, e.clientY - rect.top));\r\n\r\n    const s = x / rect.width;\r\n    const v = Math.max(0.01, (rect.height - y) / rect.height);\r\n\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    hsv.s = Math.max(s, 0.0001);\r\n    hsv.v = v;\r\n\r\n    rgb = WidgetUtilities.hsv2rgb(hsv);\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n\r\n      case PropertyType.Color:\r\n        color = rgb;\r\n        break;\r\n    }\r\n\r\n    this.setState({ color });\r\n    this.onSetColor(color);\r\n  }\r\n\r\n  onPointerHsvUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.rectangleRef.current.releasePointerCapture(e.pointerId);\r\n    this.monitoring = false;\r\n  }\r\n\r\n  onPointerRgbUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.circleRef.current.releasePointerCapture(e.pointerId);\r\n    this.monitoring = false;\r\n  }\r\n\r\n  onValueInputChange = (key: string, value: number) => {\r\n    const { color } = this.state;\r\n    if (!color)\r\n      return;\r\n\r\n    color[key] = value;\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onValueSliderChange = (property: 's' | 'v' | 'a', value: number) => {\r\n    let { color, v, max } = this.state;\r\n    const { type } = this.props;\r\n\r\n    let rgb = color as ColorProperty;\r\n\r\n    if (property === 'v')\r\n      v = value;\r\n\r\n    if (property === 'a' && type === PropertyType.Color)\r\n      value *= 255;\r\n\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    value = Math.max(value, 0.00001);\r\n    hsv[property] = value;\r\n\r\n    rgb = WidgetUtilities.hsv2rgb(hsv);\r\n    color = rgb;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(color, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(color, max, false);\r\n        break;\r\n    }\r\n\r\n    this.setState({ color, v });\r\n    this.onSetColor(color);\r\n  }\r\n\r\n  onHsvWheelMove = (sign: number) => {\r\n    let { color, max } = this.state;\r\n    const { type } = this.props;\r\n    let step = sign * 0.001;\r\n\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    if (hsv.h + step < 0)\r\n      step += 1;\r\n\r\n    hsv.h = hsv.h + step;\r\n\r\n    rgb = WidgetUtilities.hsv2rgb(hsv);\r\n    color = rgb;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(color, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(color, max, false);\r\n        break;\r\n    }\r\n\r\n    this.setState({ color });\r\n    this.onSetColor(color);    \r\n  }\r\n\r\n  getPreviewColorStyles = (): React.CSSProperties => {\r\n    const { color, max } = this.state;\r\n    const { type } = this.props;\r\n\r\n    let rgb = { ...color } as ColorProperty;\r\n\r\n    if (type === PropertyType.LinearColor || type ===  PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    if (rgb?.A && type === PropertyType.Color)\r\n      rgb.A /= 255;\r\n\r\n    return { background: `rgba(${rgb?.R}, ${rgb?.G}, ${rgb?.B}, ${rgb?.A ?? 1})` };\r\n  }\r\n\r\n  getPointerPosition = (): { circleX?: number, circleY?: number, rectangleX?: number, rectangleY?: number } => {\r\n    const { color, max } = this.state;\r\n    const { type, mode } = this.props;\r\n\r\n    let rgb: ColorProperty = null;\r\n\r\n    switch (type) {\r\n      case PropertyType.LinearColor:\r\n      case PropertyType.Vector4:\r\n        rgb = WidgetUtilities.colorToRgb(color, max);\r\n        break;\r\n\r\n      case PropertyType.Color:\r\n        rgb = color as ColorProperty;\r\n        break;\r\n    }\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    const radian = (hsv.h - 0.25) * Math.PI * 2;\r\n\r\n    if (mode === ColorMode.Rgb) {\r\n      const maxCircleRadius = this.circleRef.current?.clientHeight / 2;\r\n\r\n      const circleX = Math.sin(radian) * Math.max(0, Math.min(hsv.s, 1)) * (maxCircleRadius - 10) * -1;\r\n      const circleY = -Math.cos(radian) * Math.max(0, Math.min(hsv.s, 1)) * (maxCircleRadius - 10) * -1;\r\n\r\n      return { circleX, circleY };\r\n    }\r\n\r\n    const rectangleRef = this.rectangleRef.current;\r\n\r\n    const rectangleWidth = rectangleRef?.clientWidth ?? 0;\r\n    const rectangleHeight = rectangleRef?.clientHeight ?? 0;\r\n\r\n    const rectangleX = Math.max(0, Math.min(hsv.s, 1)) * (rectangleWidth - 19);\r\n    const rectangleY = Math.max(0, (1 - Math.max(0, hsv.v)) * (rectangleHeight - 19));\r\n  \r\n    return { rectangleX, rectangleY };\r\n  }\r\n\r\n  getVisibleParts = () => {\r\n    const { parts, widget } = this.props;\r\n    const visible = {} as Record<ColorPickerParts, boolean>;\r\n\r\n    parts.map(part => visible[part] = true);\r\n\r\n    if (widget === WidgetTypes.MiniColorPicker) {\r\n      visible[ColorPickerParts.Circle] = false;\r\n      visible[ColorPickerParts.Saturation] = false;\r\n      visible[ColorPickerParts.Value] = false;\r\n    }\r\n\r\n    return visible;\r\n  }\r\n\r\n  renderRgbInput = (slider: SliderType) => {\r\n    const { color } = this.state;\r\n    const { type } = this.props;\r\n\r\n    let min, max, precision = 3;\r\n    let key: string = slider;\r\n\r\n    switch (type) {\r\n      case PropertyType.Color:\r\n        precision = 0;\r\n        min = 0;\r\n        max = 255;\r\n        break;\r\n\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector4:\r\n        switch (slider) {\r\n          case SliderType.R:\r\n            key = 'X';\r\n            break;\r\n\r\n          case SliderType.G:\r\n            key = 'Y';\r\n            break;\r\n\r\n          case SliderType.B:\r\n            key = 'Z';\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n\r\n    let className = 'input ';\r\n    let value = 0;\r\n    if (color)\r\n      value = color[key];\r\n\r\n    switch (slider) {\r\n      case SliderType.R:\r\n        className += 'red ';\r\n        break;\r\n\r\n      case SliderType.G:\r\n        className += 'green ';\r\n        break;\r\n\r\n      case SliderType.B:\r\n        className += 'blue ';\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className={className}>\r\n        <ValueInput draggable={false}\r\n                    min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    value={value}\r\n                    onChange={this.onValueInputChange.bind(this, key)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  rendeCircleRectangle = () => {\r\n    const { mode, type } = this.props;\r\n    const { color, max } = this.state;\r\n    const pos = this.getPointerPosition();\r\n    const style: React.CSSProperties = { transform: `translate(${pos.circleX}px, ${pos.circleY}px)` };\r\n\r\n    if (mode === ColorMode.Rgb)\r\n      return (\r\n        <div className=\"circle\">\r\n          <div className=\"circle-gradient\">\r\n            <div className=\"canvas-area\"\r\n                 ref={this.circleRef}\r\n                 onPointerMove={this.onPointerRgbMove}\r\n                 onPointerDown={this.onPointerRgbDown}\r\n                 onPointerUp={this.onPointerRgbUp}>\r\n              <div className=\"canvas-area-pointer\" style={style} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    let rgb = { ...color } as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n        \r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    rgb = WidgetUtilities.hsv2rgb({ h: hsv.h, s: 1, v: 1, a: hsv?.a });\r\n\r\n    if (rgb?.A && type === PropertyType.Color)\r\n      rgb.A /= 255;      \r\n\r\n    const rectangleStyle: React.CSSProperties = { backgroundColor: `rgba(${rgb.R}, ${rgb.G}, ${rgb.B}, ${rgb?.A ?? 1})` };\r\n    const rectanglePointerStyle: React.CSSProperties = { transform: `translate(${pos.rectangleX}px, ${pos.rectangleY}px)` };    \r\n\r\n    return (\r\n      <div className=\"rectangle\"\r\n           ref={this.rectangleRef}\r\n           style={rectangleStyle}\r\n           onPointerMove={this.onPointerHsvMove}\r\n           onPointerDown={this.onPointerHsvDown}\r\n           onPointerUp={this.onPointerHsvUp}>\r\n        <div className=\"rectangle-area-pointer\" style={rectanglePointerStyle} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { label, type, widget, value, alpha, reset } = this.props;\r\n    const { color, max } = this.state;\r\n\r\n    const visible = this.getVisibleParts();\r\n\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n    let a = hsv?.a ?? 0;\r\n\r\n    if (type === PropertyType.Color)\r\n      a /= 255;\r\n\r\n    return (\r\n      <div className=\"color-picker-container\">\r\n        {!!this.props?.onPrecisionModal && <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={this.props.onPrecisionModal} />}\r\n        <div className=\"color-picker-wheel\">\r\n          <div>{label}</div>\r\n          {!!visible[ColorPickerParts.Circle] && this.rendeCircleRectangle()}\r\n          <div className='color-picker-controls'>\r\n            {!!visible[ColorPickerParts.Wheel] && (\r\n              <div className=\"slider-wheel-container\">\r\n                {widget === WidgetTypes.ColorPicker && (\r\n                  <div className=\"slider-wheel-top\">\r\n                    <span className=\"title\">Hue</span>\r\n                    <span className=\"value\">{(hsv.h * 360).toFixed(1)}°</span>\r\n                  </div>\r\n                )}\r\n                <SliderWheel onWheelMove={this.onHsvWheelMove} />\r\n              </div>\r\n            )}\r\n            {!!visible[ColorPickerParts.Saturation] && (\r\n              <ColorPickerSlider value={hsv.s}\r\n                                 label=\"Saturation\"\r\n                                 onChange={this.onValueSliderChange.bind(this, 's')} />\r\n            )}\r\n            {!!visible[ColorPickerParts.Value] && (\r\n              <ColorPickerSlider value={hsv.v}\r\n                                 label=\"Value\"\r\n                                 onChange={this.onValueSliderChange.bind(this, 'v')} />\r\n            )}\r\n            {!!alpha && !!visible[ColorPickerParts.Alpha] && (\r\n              <ColorPickerSlider value={a}\r\n                                 label=\"Alpha\"\r\n                                 onChange={this.onValueSliderChange.bind(this, 'a')} />\r\n            )}\r\n            \r\n            <div className=\"color-picker-inputs\">\r\n              {!!visible[ColorPickerParts.Inputs] && (\r\n                <div className='rgb-inputs'>\r\n                  {this.renderRgbInput(SliderType.R)}\r\n                  {this.renderRgbInput(SliderType.G)}\r\n                  {this.renderRgbInput(SliderType.B)}\r\n                </div>\r\n              )}\r\n              {widget === WidgetTypes.ColorPicker && !!value && <div className=\"color\" style={this.getPreviewColorStyles()} />}\r\n            </div>  \r\n          </div>\r\n        </div>\r\n        {reset && <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\ntype ColorPickerSliderProps = {\r\n  label: string;\r\n  value: number;\r\n\r\n  onChange: (value: number) => void;\r\n}\r\n\r\ntype ColorPickerSliderState = {\r\n  x: number;\r\n}\r\n\r\nconst SliderWidth = 200;\r\n\r\nclass ColorPickerSlider extends React.Component<ColorPickerSliderProps, ColorPickerSliderState> {\r\n\r\n  state: ColorPickerSliderState = {\r\n    x: null,\r\n  }\r\n\r\n  monitoring = false;\r\n  dragValue: number = null;\r\n  dragOffset: number = null;\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  pointer = React.createRef<HTMLDivElement>();\r\n\r\n  componentDidUpdate(prevProps: ColorPickerSliderProps, prevState: ColorPickerSliderState) {\r\n    const { value } = this.props;\r\n\r\n    if (!isNaN(value) && prevProps.value !== value)\r\n      this.updateValues();\r\n  }\r\n\r\n  updateValues = () => {\r\n    const { value } = this.props;\r\n    const x = Math.min(SliderWidth - 4, Math.max(0, (SliderWidth - 4) * value));\r\n\r\n    this.setState({ x });\r\n  }\r\n\r\n  onPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.ref.current)\r\n      return;\r\n\r\n    const pointer = this.pointer.current.getBoundingClientRect();\r\n\r\n    this.dragOffset = 0;\r\n    this.dragValue = this.props.value;\r\n\r\n    if (pointer.left <= e.clientX && e.clientX <= pointer.right)\r\n      this.dragOffset = e.clientX - (pointer.left + (pointer.width / 2));\r\n\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.onPointerMove(e);\r\n  }\r\n\r\n  onPointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const slider = this.ref.current;\r\n    const rect = slider.getBoundingClientRect();\r\n\r\n    const x = e.clientX - this.dragOffset;\r\n    const value = Math.max(0, Math.min((x - rect.left) / rect.width, 1));\r\n\r\n    if (Math.abs(this.dragValue - value) > 0.001) {\r\n      this.dragValue = value;\r\n\r\n      this.setState({ x: Math.max(0, (x - rect.left) - 4) });\r\n      this.props.onChange(value);\r\n    }\r\n  }\r\n\r\n  onPointerLostCapture = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.dragOffset = 0;\r\n    this.dragValue = null;\r\n    this.monitoring = false;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  getPercentage = () => {\r\n    const { x } = this.state;\r\n    return Math.max(0, Math.round((100 * x) / (SliderWidth - 4)));\r\n  }\r\n\r\n  render() {\r\n    const { label } = this.props;\r\n    const { x } = this.state;\r\n\r\n    return (\r\n      <div className=\"color-picker-slider\"\r\n           ref={this.ref}\r\n           style={{ width: SliderWidth }}\r\n           onPointerMove={this.onPointerMove}\r\n           onPointerDown={this.onPointerDown}\r\n           onPointerUp={this.onPointerLostCapture}>\r\n        <div className=\"color-picker-slider-label\">{label}</div>\r\n        <div className=\"color-picker-slider-pointer\" style={{ transform: `translateX(${x}px)` }} ref={this.pointer} />\r\n        <div className=\"color-picker-slider-bgc\" />\r\n        <div className=\"color-picker-slider-value\">{this.getPercentage()}%</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { ReactComponent as Logo } from '../assets/ue_logo.svg';\r\n\r\n\r\nexport class ConnectionStatus extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fullscreen\">\r\n        <div className=\"app-icon\">\r\n          <Logo className=\"logo\" />\r\n        </div>\r\n        <div>Connecting to Remote Control API...</div>\r\n     </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\ntype Props = {\r\n  label?: React.ReactNode;\r\n  onExecute?: () => void;\r\n};\r\n\r\nexport class Button extends React.Component<Props> {\r\n\r\n  onClick = () => {\r\n    this.props.onExecute?.();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"widget-button-wrapper\">\r\n        <button className=\"widget-button\" onClick={this.onClick}>\r\n          {this.props.label || 'Button'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { ColorProperty, IPreset, PropertyType, VectorProperty, WidgetType, WidgetTypes, IHsvColor } from \"src/shared\";\r\n\r\n\r\ntype Range = {\r\n  min?: number;\r\n  max?: number;\r\n}\r\n\r\nexport type WidgetProperties<TPropertyValue = any> = {\r\n  stack?: boolean;\r\n  type?: PropertyType;\r\n  value?: TPropertyValue;\r\n  onChange?: (value: TPropertyValue) => void;\r\n};\r\n\r\ntype CustomWidget = {\r\n  type: string;\r\n  render: (props: any) => React.ReactNode;\r\n};\r\n\r\nexport class WidgetUtilities {\r\n\r\n  static propertyWidgets: Record<string, CustomWidget[]> = {};\r\n  static customWidgets: Record<string, CustomWidget> = {};\r\n  \r\n  static getPropertyLimits(type: PropertyType): Range {\r\n    switch (type) {\r\n      case PropertyType.Int8:\r\n        return { min: -128, max: 127 };\r\n\r\n      case PropertyType.Int16:\r\n        return { min: -32768, max: 32767 };\r\n\r\n      case PropertyType.Int32:\r\n        return { min: -2147483648, max: 2147483647 };\r\n\r\n      case PropertyType.Uint16:\r\n        return { min: 0, max: 65535 };\r\n\r\n      case PropertyType.Uint32:\r\n        return { min: 0, max: 4294967295 };\r\n\r\n      case PropertyType.Float:\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector2D:\r\n      case PropertyType.Vector4:\r\n      case PropertyType.LinearColor:\r\n        return { min: -1.17549e+38, max: 3.402823466E+38 };\r\n\r\n      case PropertyType.Rotator:\r\n        return { min: 0, max: 360\t};\r\n\r\n      case PropertyType.Double:\r\n        return { min: Number.MIN_VALUE, max: Number.MAX_VALUE };\r\n\r\n      case PropertyType.Color:\r\n        return { min: 0, max: 255 };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  static parseNumber(value: string): number {\r\n    const number = parseFloat(value);\r\n    if (!isNaN(number))\r\n      return number;\r\n  }\r\n\r\n  static getMinMax(preset: IPreset, exposed: string): Range {\r\n    const property = preset.Exposed[exposed];\r\n\r\n    return {\r\n      min: WidgetUtilities.parseNumber(property?.Metadata?.Min),\r\n      max: WidgetUtilities.parseNumber(property?.Metadata?.Max),\r\n    };\r\n  }\r\n\r\n  static registerWidget(type: string, properties: PropertyType[], render: (props: WidgetProperties) => React.ReactNode): void {\r\n    const custom: CustomWidget = { type, render };\r\n    WidgetUtilities.customWidgets[type] = custom;\r\n    \r\n    for (const property of properties) {\r\n      if (!WidgetUtilities.propertyWidgets[property])\r\n        WidgetUtilities.propertyWidgets[property] = [];\r\n\r\n      WidgetUtilities.propertyWidgets[property].push(custom);\r\n    }\r\n  }\r\n\r\n  static getPropertyPrecision(propertyType: PropertyType) {\r\n    switch (propertyType) {\r\n      case PropertyType.Float:\r\n      case PropertyType.Double:\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector2D:\r\n      case PropertyType.Vector4:\r\n      case PropertyType.LinearColor:\r\n        return 3;\r\n\r\n      case PropertyType.Rotator:\r\n        return 2;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  static getPropertyKeys(propertyType: PropertyType) {\r\n    switch (propertyType) {\r\n      case PropertyType.Rotator:\r\n        return ['Roll', 'Pitch', 'Yaw'];\r\n\r\n      case PropertyType.Vector:\r\n        return ['X', 'Y', 'Z'];\r\n\r\n      case PropertyType.Vector2D:\r\n        return ['X', 'Y'];\r\n\r\n      case PropertyType.Vector4:\r\n        return ['X', 'Y', 'Z', 'W'];\r\n\r\n      case PropertyType.Color:\r\n      case PropertyType.LinearColor:\r\n        return ['R', 'G', 'B'];\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  static getCompatibleWidgets(propertyType: PropertyType): WidgetType[] {\r\n    switch (propertyType) {\r\n      case PropertyType.Int16:\r\n      case PropertyType.Int32:\r\n      case PropertyType.Int64:\r\n      case PropertyType.Uint16:\r\n      case PropertyType.Uint32:\r\n      case PropertyType.Uint64:\r\n      case PropertyType.Float:\r\n      case PropertyType.Double:\r\n        return [WidgetTypes.Slider, WidgetTypes.Dial];\r\n      \r\n      case PropertyType.Boolean:\r\n      case PropertyType.Uint8:\r\n        return [WidgetTypes.Toggle];\r\n\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector2D:\r\n        return [WidgetTypes.Vector, WidgetTypes.Joystick, WidgetTypes.Sliders, WidgetTypes.Dials];\r\n\r\n      case PropertyType.Vector4:\r\n      case PropertyType.LinearColor:\r\n      case PropertyType.Color:\r\n        return [WidgetTypes.ColorPicker, WidgetTypes.MiniColorPicker];\r\n\r\n      case PropertyType.Rotator:\r\n        return [WidgetTypes.Vector, WidgetTypes.Sliders, WidgetTypes.Dials];\r\n\r\n      case PropertyType.String:\r\n        return [WidgetTypes.Text];\r\n    }\r\n\r\n    if (propertyType && (propertyType.startsWith('TEnum') || propertyType.startsWith('E')))\r\n      return [WidgetTypes.Dropdown];\r\n\r\n    // Unknown Property, show as a Asset\r\n    return [WidgetTypes.Asset];\r\n  }\r\n\r\n  static colorToRgb(color: ColorProperty | VectorProperty, max: number) {\r\n    const rgb = color as ColorProperty;\r\n    const vector = color as VectorProperty;\r\n\r\n    max = max || 1;\r\n    const rgbColor = {\r\n      R: (vector?.X ?? rgb?.R) * 255 / max,\r\n      G: (vector?.Y ?? rgb?.G) * 255 / max,\r\n      B: (vector?.Z ?? rgb?.B) * 255 / max,\r\n    } as ColorProperty;\r\n\r\n    if (rgb?.A)\r\n      rgbColor.A = rgb.A;\r\n\r\n    return rgbColor;\r\n  }\r\n\r\n  static rgbToColor = (rgb: ColorProperty, max: number, vector = true): ColorProperty | VectorProperty => {\r\n    const a = rgb.R / 255 * max;\r\n    const b = rgb.G / 255 * max;\r\n    const c = rgb.B / 255 * max;\r\n\r\n    if (vector)\r\n      return { X: a, Y: b, Z: c };\r\n\r\n    const color = { R: a, G: b, B: c } as ColorProperty;\r\n    if (rgb.A)\r\n      color.A = rgb.A;\r\n\r\n    return color;\r\n  }\r\n\r\n  static rgb2Hsv(color: ColorProperty): IHsvColor {\r\n    const r = color?.R / 255 ?? 1;\r\n    const g = color?.G / 255 ?? 1;\r\n    const b = color?.B / 255 ?? 1;\r\n\r\n    const min = Math.min(r, g, b);\r\n    const max = Math.max(r, g, b);\r\n\r\n    let h = 0, s = 0, v = max;\r\n    let d = max - min;\r\n    s = max === 0 ? 0 : d / max;\r\n\r\n    if (max !== min) {\r\n      switch (max) {\r\n        case r:\r\n          h = (g - b) / d + (g < b ? 6 : 0);\r\n          break;\r\n\r\n        case g:\r\n          h = (b - r) / d + 2;\r\n          break;\r\n\r\n        case b:\r\n          h = (r - g) / d + 4;\r\n          break;\r\n      }\r\n\r\n      h /= 6;\r\n    }\r\n\r\n    const hsvColor = { h, s, v } as IHsvColor;\r\n    if (color?.A)\r\n      hsvColor.a = color.A;\r\n\r\n    return hsvColor;\r\n  }\r\n\r\n  static hsv2rgb({ h, s, v, a }: IHsvColor): ColorProperty {\r\n    let r: number, g: number, b: number;\r\n\r\n    let i = Math.floor(h * 6);\r\n    let f = h * 6 - i;\r\n    let p = v * (1 - s);\r\n    let q = v * (1 - f * s);\r\n    let t = v * (1 - (1 - f) * s);\r\n\r\n    if (i % 6 === 0)\r\n      ([r, g, b] = [v, t, p]);\r\n\r\n    if (i % 6 === 1)\r\n      ([r, g, b] = [q, v, p]);\r\n\r\n    if (i % 6 === 2)\r\n      ([r, g, b] = [p, v, t]);\r\n\r\n    if (i % 6 === 3)\r\n      ([r, g, b] = [p, q, v]);\r\n\r\n    if (i % 6 === 4)\r\n      ([r, g, b] = [t, p, v]);\r\n\r\n    if (i % 6 === 5)\r\n      ([r, g, b] = [v, p, q]);\r\n\r\n    const color = { R: r * 255, G: g * 255, B: b * 255 } as ColorProperty;\r\n    if (a)\r\n      color.A = a;\r\n\r\n    return color;\r\n  }\r\n}","import React from 'react';\r\nimport { ValueInput } from '.';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nexport enum DialMode {\r\n  Range     = 'RANGE',\r\n  Endless   = 'ENDLESS',\r\n  Rotation  = 'ROTATION',\r\n}\r\n\r\ntype Props = {\r\n  min?: number;\r\n  max?: number;\r\n  startAngle?: number;\r\n  endAngle?: number;\r\n  value?: number;\r\n  largeLines?: number;\r\n  shortLines?: number;\r\n  display?: 'VALUE' | 'PERCENT';\r\n  mode?: DialMode;\r\n  size?: number;\r\n  label?: React.ReactNode;\r\n  hideReset?: boolean;\r\n  hidePrecision?: boolean;\r\n\r\n  onChange?: (value?: number) => void;\r\n  onPrecisionModal?: () => void;\r\n};\r\n\r\nexport class Dial extends React.Component<Props> {\r\n  static defaultProps: Props = {\r\n    startAngle: 50,\r\n    endAngle: 310,\r\n    largeLines: 11,\r\n    shortLines: 5,\r\n    display: 'VALUE',\r\n    mode: DialMode.Range,\r\n    size: 202,\r\n  };\r\n\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  monitoring: boolean = false;\r\n  beautify = new Intl.NumberFormat();\r\n  svgCircleDegreeLength: number = 477.5;\r\n\r\n  onDown = (e: React.PointerEvent<HTMLDivElement>): void => {\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.onMove(e);\r\n  }\r\n\r\n  onUp = (e: React.PointerEvent<HTMLDivElement>): void => {\r\n    this.monitoring = false;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  onMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring) \r\n      return;\r\n\r\n    const rect = this.ref.current.getBoundingClientRect();\r\n    const xCenter = (rect.right - rect.left) / 2 + rect.left;\r\n    const yCenter = (rect.bottom - rect.top) / 2 + rect.top;\r\n    const radians = Math.atan2(e.clientX - xCenter, e.clientY - yCenter);\r\n    \r\n    let angle = -1 * radians * (180 / Math.PI);\r\n    if (this.props.mode !== DialMode.Range)\r\n      angle += 180;\r\n\r\n    const { min, max, mode } = this.props;\r\n\r\n    angle = this.normalize(angle);\r\n    let value = this.getValueFromAngle(angle);\r\n\r\n    if (mode === DialMode.Rotation) {\r\n      value = this.normalize(value, -180, 180);\r\n    } else {\r\n      if (min !== undefined)\r\n        value = Math.max(min, value);\r\n\r\n      if (max !== undefined)\r\n        value = Math.min(value, max);\r\n    }\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onValueInputChange = (value: number) => {\r\n    const { mode } = this.props;\r\n\r\n    if (mode === DialMode.Rotation)\r\n      value = this.normalize(value, -180, 180);\r\n\r\n    return this.props.onChange(value);\r\n  }\r\n\r\n  renderSmallLines = (linesList: JSX.Element[], angle: number, largeLineStep: number, tickAngle: number) => {\r\n    const { shortLines, mode } = this.props;\r\n    const rangeAngle = mode === DialMode.Range ? 180 : 0;\r\n    const isActive = (mode !== DialMode.Range);\r\n\r\n    for (let i = 1; i <= shortLines; i++) {\r\n      const shortTickAngle = this.normalize(tickAngle + (largeLineStep / (shortLines + 1)) * i - 180);\r\n      const active = angle >= this.normalize(shortTickAngle + rangeAngle) || isActive;\r\n      const className = `dial-tick short ${active && 'active'}`;\r\n      linesList.push(\r\n        <div key={shortTickAngle} className={className} style={{ transform: `rotate(${shortTickAngle}deg)` }}/>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLines = (angle: number) => {\r\n    let { startAngle, endAngle, largeLines, mode } = this.props;\r\n    let endlessAngle = 0;\r\n    const isActive = (mode !== DialMode.Range);\r\n\r\n    if (isActive) {\r\n      startAngle = 0;\r\n      endAngle = 360;\r\n      endlessAngle = 180;\r\n    }\r\n\r\n    angle = this.normalize(angle - endlessAngle);\r\n    const largeLineStep = (endAngle - startAngle) / (largeLines - 1);\r\n    if (largeLines < 1)\r\n      return null;\r\n\r\n    const linesList = [];\r\n    for (let i = 0; i < largeLines; i++) {\r\n      const tickAngle = this.normalize(i * largeLineStep + startAngle);\r\n      const active = angle >= tickAngle || isActive;\r\n      const className = `dial-tick large ${active && 'active'}`;\r\n      linesList.push(\r\n        <div key={tickAngle} \r\n              className={className}\r\n              style={{ transform: `rotate(${tickAngle - 180 - endlessAngle}deg)` }} />\r\n      );\r\n\r\n      if (i + 1 < largeLines)\r\n        this.renderSmallLines(linesList, angle, largeLineStep, tickAngle);\r\n    }\r\n\r\n    return linesList;\r\n  }\r\n\r\n  normalize = (angle: number, begin: number = 0, end: number = 360): number => {\r\n    const range = end - begin;\r\n    while (angle < begin) \r\n      angle += range;\r\n\r\n    while (angle > end)\r\n      angle -= range;\r\n\r\n    return angle;\r\n  }\r\n\r\n  getValue = () => {\r\n    const { min, max } = this.props;\r\n    let { value = 0 } = this.props;\r\n\r\n    if (!isNaN(min))\r\n      value = Math.max(min, value);\r\n\r\n    if (!isNaN(max))\r\n      value = Math.min(max, value);\r\n      \r\n    return value;\r\n  }\r\n\r\n  getValueFromAngle = (angle: number) => {\r\n    const { min, startAngle, endAngle, mode } = this.props;\r\n    const range = this.getRange();\r\n\r\n    switch (mode) {\r\n      case DialMode.Range:\r\n        angle = Math.max(startAngle, Math.min(angle, endAngle));\r\n        const ratio = (angle - startAngle) / (endAngle - startAngle);\r\n        return min + ratio * range;\r\n\r\n      case DialMode.Endless:\r\n      case DialMode.Rotation:\r\n        let value = this.getValue();\r\n        const prevAngle = this.normalize(this.getAngle(value) - 180);\r\n        const phi = this.normalize(angle - prevAngle);\r\n        const delta = phi > 180 ? phi - 360 : phi;\r\n        const step = range >= 360 ? 1 : range / 1080;\r\n        value += delta * step;\r\n        if (mode === DialMode.Rotation)\r\n          value = this.normalize(value);\r\n        return value;\r\n    }\r\n  }\r\n\r\n  getRange = () => {\r\n    const { min, max } = this.props;\r\n    if (min === undefined || max === undefined)\r\n      return 1000;\r\n\r\n    return Math.max(max - min, 0.01);\r\n  }\r\n  \r\n  getAngle = (value: number) => {\r\n    const { mode, min = 0, startAngle, endAngle } = this.props;\r\n    const range = this.getRange();\r\n\r\n    let angle = 0;\r\n    switch (mode) {\r\n      case DialMode.Range:\r\n        const ratio = (value - min) / range;\r\n        angle = startAngle + ratio * (endAngle - startAngle);\r\n        break;\r\n\r\n      case DialMode.Endless:\r\n      case DialMode.Rotation:\r\n        const step = range >= 360 ? 1 : range / 1080;\r\n        angle = 180 + (value / step) % 360;\r\n        break;\r\n    }\r\n\r\n    return this.normalize(angle);\r\n  }\r\n\r\n  getText = (value: number): string => {\r\n    if (isNaN(value))\r\n      return '';\r\n\r\n    const { min, max, display } = this.props;\r\n    const range = Math.max(0.1, max - min);\r\n    const decimals = Math.max(0, 4 - range.toFixed().length);\r\n    const ratio = (value - min) / range;\r\n    if (display === 'PERCENT')\r\n      return (ratio * 100).toFixed(2);\r\n\r\n    return this.beautify.format(+value?.toFixed(decimals));\r\n  }\r\n\r\n  getCirclePaintOver = (angle: number) => {\r\n    const { startAngle, mode } = this.props;\r\n    \r\n    const calcLength = (a:number) => {\r\n      const angleInProc = a / 3.6;\r\n      return this.svgCircleDegreeLength / 100 * angleInProc;\r\n    };\r\n\r\n    switch (mode) {\r\n      case DialMode.Endless:\r\n      case DialMode.Rotation:\r\n        const angleCalc = angle < 180 ? angle + 180 : angle - 180;\r\n        return this.svgCircleDegreeLength - calcLength(angleCalc);\r\n\r\n      case DialMode.Range: \r\n        return this.svgCircleDegreeLength + calcLength(startAngle) - calcLength(angle);\r\n    }\r\n  }\r\n\r\n  getPaintOverRotate = () => {\r\n    const { startAngle, mode } = this.props;\r\n    return mode === DialMode.Range ? 90 + startAngle : -90;\r\n  }\r\n\r\n  render() {\r\n    const { value = 0, size, min, max, label, mode } = this.props;\r\n    const angle = this.getAngle(value);\r\n    const wrapperStyle: React.CSSProperties = { width: size, height: size };\r\n    const dialInputStyle: React.CSSProperties =  mode === DialMode.Range ? { position: 'absolute', top: '82%' } : {};\r\n\r\n    return ( \r\n      <div className=\"dial-widget-wrapper\">\r\n        {!this.props.hidePrecision &&\r\n          <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={this.props.onPrecisionModal} />\r\n        }\r\n        {label &&\r\n          <div className=\"dial-label\">{label}</div>\r\n        }\r\n        <div className=\"dial-border-first\">\r\n          <div className=\"dial-border-second\">\r\n            <div className=\"dial-wrapper\"\r\n                  ref={this.ref}\r\n                  style={!isNaN(size) ? wrapperStyle : {}}\r\n                  onLostPointerCapture={this.onUp}\r\n                  onPointerDown={this.onDown}\r\n                  onPointerUp={this.onUp}\r\n                  onPointerMove={this.onMove}\r\n                  tabIndex={-1}>\r\n              <div className=\"dial-circle\">\r\n                <Circle angle={angle}\r\n                        size={size}\r\n                        mode={mode}\r\n                        rotate={this.getPaintOverRotate()}\r\n                        circlePaintOver={this.getCirclePaintOver(angle)}\r\n                        svgCircleDegreeLength={this.svgCircleDegreeLength} />\r\n                <div className=\"dial-ticks\">\r\n                  {this.renderLines(angle)}\r\n                </div>\r\n                <div className=\"dial-center-wrapper\">\r\n                  <div className=\"dial-center\">\r\n                    {label &&\r\n                      <div className=\"dial-label\">{label}</div>\r\n                    }\r\n                    <div className=\"dial-value\" style={dialInputStyle} onPointerDown={e => e.stopPropagation()}>\r\n                      <ValueInput min={min} max={max} value={value} onChange={this.onValueInputChange} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"dial-line\" style={{ transform: `rotate(${angle}deg)` }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!this.props.hideReset &&\r\n          <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n        }\r\n      </div>     \r\n    );\r\n  }\r\n}\r\n\r\n\r\ntype CircleProps = {\r\n  angle: number;\r\n  size: number;\r\n  mode: DialMode;\r\n  rotate: number;\r\n  circlePaintOver:  number;\r\n  svgCircleDegreeLength: number;\r\n};\r\n\r\nclass Circle extends React.Component<CircleProps> {\r\n  render() {\r\n    const { angle, size, rotate, circlePaintOver, svgCircleDegreeLength, mode } = this.props;\r\n\r\n    const cxcy = size / 2 - 1;\r\n\r\n    let circleRotateAngle = 0;\r\n    let strokeDashoffset = circlePaintOver;\r\n    if (mode !== DialMode.Range) {\r\n      const angleCalc = angle < 180 ? angle + 180 : angle - 180;\r\n      circleRotateAngle = angleCalc - 90;\r\n      \r\n      const rotatePart = svgCircleDegreeLength / 4 * 3;\r\n      strokeDashoffset = rotatePart;\r\n    }\r\n\r\n    let className = 'svg-circle';\r\n    if (mode === DialMode.Range)\r\n      className += ' range';\r\n\r\n    return (\r\n      <div className=\"svg-circle\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n          <defs>\r\n            <linearGradient id=\"shape-gradient\" x1=\"0\" x2=\"0\" y1=\"1\" y2=\"0\">\r\n              <stop offset=\"0%\" stopColor=\"rgba(0,103,180,1)\" />\r\n              <stop offset=\"50%\" stopColor=\"rgba(0,103,180,0)\" />\r\n            </linearGradient>\r\n          </defs>\r\n          <circle transform={`rotate(${rotate + circleRotateAngle}, ${cxcy}, ${cxcy})`}\r\n                  cx={cxcy}\r\n                  cy={cxcy}\r\n                  r=\"76\"\r\n                  fill=\"transparent\"\r\n                  strokeWidth=\"45\"\r\n                  strokeDasharray={svgCircleDegreeLength}\r\n                  strokeDashoffset={strokeDashoffset}\r\n                  className={className} />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ColorPicker, ColorPickerValue } from './';\r\nimport { ColorProperty, IColorPickerList, ICustomStackProperty, PropertyType, PropertyValue } from 'src/shared';\r\nimport { DraggableWidget } from '../';\r\nimport _ from 'lodash';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  list: IColorPickerList;\r\n  path: string;\r\n  selection: string;\r\n  isDragDisabled: boolean;\r\n  dragging: string;\r\n\r\n  onSelect?: (selection: string) => void;\r\n  getPropertyValue?: (property: string) => PropertyValue;\r\n  getPropertyLabel?: (widget: ICustomStackProperty) => string | JSX.Element;\r\n  getAlpha?: (property: string) => boolean;\r\n  onChange?: (widget: Partial<ICustomStackProperty>, value: PropertyValue) => void;\r\n  onPrecisionModal?: (widget: ICustomStackProperty) => void;\r\n}\r\n\r\ntype State = {\r\n  selected: ICustomStackProperty;\r\n}\r\n\r\nexport class ColorPickerList extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    selected: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { list } = this.props;\r\n    const item = _.first(list.items);\r\n\r\n    this.setState({ selected: item });\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { dragging, selection, list } = this.props;\r\n    const { selected } = this.state;\r\n\r\n    if (dragging !== prevProps.dragging && !!dragging) {\r\n      const [, parent] = dragging.split('_');\r\n\r\n      if (list.id === parent)\r\n        this.setState({ selected: null });\r\n    }\r\n\r\n    if(list !== prevProps.list) {\r\n      if (!selection) {\r\n        const item = _.find(list.items, ['id', selected.id]) ?? _.first(list.items);\r\n \r\n        return this.setState({ selected: item });\r\n      }\r\n\r\n      const [path, index] = selection.split('_');\r\n\r\n      if (path === this.props.path)\r\n        this.setState({ selected: list.items[index] });\r\n    }\r\n  }\r\n\r\n  onItemSelect = (item: ICustomStackProperty, index: number, e: React.MouseEvent) => {\r\n    const { path } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    this.setState({ selected: item });\r\n    this.props.onSelect(`${path}_${index}_${item.property}`);\r\n  }\r\n\r\n  getMaxColorValue = (type: PropertyType, color: ColorPickerValue) => {\r\n    let max = 1;\r\n\r\n    if (type === PropertyType.Vector4 || type === PropertyType.LinearColor) {\r\n      max = 0;\r\n\r\n      for (const key in color)\r\n        if (color[key] > max)\r\n          max = color[key];\r\n    }\r\n\r\n    return max;\r\n  }\r\n\r\n  getPreviewColorStyles = (color: ColorPickerValue, type: PropertyType, max: number): React.CSSProperties => {\r\n    let rgb = color as ColorProperty;\r\n    if (type === PropertyType.LinearColor || type === PropertyType.Vector4)\r\n      rgb = WidgetUtilities.colorToRgb(color, max);\r\n\r\n    return { background: `rgb(${rgb?.R}, ${rgb?.G}, ${rgb?.B})` };\r\n  }\r\n\r\n  render() {\r\n    const { list, selection, path, isDragDisabled } = this.props;\r\n    const { selected } = this.state;\r\n    const value = this.props.getPropertyValue(selected?.property) as ColorPickerValue;\r\n\r\n    return (\r\n      <div className=\"color-pickers-list-container\">\r\n        <ul className=\"colors-list\">\r\n          {list?.items?.map((item, i) => {\r\n            const draggableId = `${item.id}_${list.id}_${item.widget}`;\r\n            const value = this.props.getPropertyValue(item?.property) as ColorPickerValue;\r\n            const max = this.getMaxColorValue(item.propertyType, value);\r\n\r\n            let className = 'list-item ';\r\n\r\n            if (selected?.id === item.id)\r\n              className += 'selected ';\r\n\r\n            return (\r\n              <li className={className} key={i}>\r\n                <DraggableWidget draggableId={draggableId}\r\n                                 key={item.id}\r\n                                 selected={selection === `${path}_${i}_${item.property}`}\r\n                                 index={i}\r\n                                 onSelect={this.onItemSelect.bind(this, item, i)}\r\n                                 isDragDisabled={isDragDisabled}>\r\n                  <div>\r\n                    {!!this.props.onPrecisionModal && \r\n                      <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={() => this.props.onPrecisionModal(item)} />\r\n                    }\r\n                    {this.props.getPropertyLabel(item)}\r\n                  </div>\r\n                  <div className=\"color-preview\" style={this.getPreviewColorStyles(value, item.propertyType, max)} />\r\n                </DraggableWidget>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <ColorPicker value={value} \r\n                     type={selected?.propertyType}\r\n                     widget={selected?.widget}\r\n                     alpha={this.props.getAlpha(selected?.property)}\r\n                     onChange={this.props.onChange.bind(this, selected)}\r\n                     onPrecisionModal={() => this.props.onPrecisionModal(selected)} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Dial, DialMode } from '.';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { JoystickValue, PropertyType } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  min?: number;\r\n  max?: number;\r\n  display?: 'VALUE' | 'PERCENT';\r\n  mode?: DialMode;\r\n  size?: number;\r\n  properties?: string[];\r\n  value?: number | JoystickValue;\r\n  type?: PropertyType;\r\n  hidePrecision?: boolean;\r\n  label?: React.ReactNode;\r\n  proportionally?: boolean;\r\n  property?: string;\r\n\r\n  onChange?: (res:  number | JoystickValue) => void;\r\n  onProportionallyToggle?: (property: string, value: string) => void;\r\n};\r\n\r\nexport class DialsWrapper extends React.Component<Props> {\r\n\r\n  getProperties = (): string[] => {\r\n    const { type, properties } = this.props;\r\n    let keys = WidgetUtilities.getPropertyKeys(type);\r\n\r\n    if (properties?.length)\r\n      keys = keys.filter(key => properties.includes(key));\r\n\r\n    return keys;\r\n  }\r\n\r\n  onChange = (res: number, key?: string) => {\r\n    let { value, proportionally, min, max } = this.props;\r\n    if (value === undefined) {\r\n      const dials = this.getProperties();\r\n      value = dials.length ? {} : 0;\r\n    }\r\n\r\n    let prev = value[key];\r\n    if (prev === 0 || prev === undefined)\r\n      prev = 1;\r\n\r\n    const ratio = Math.max(0.001, res) / prev;\r\n\r\n    if (proportionally && !isNaN(ratio)) {\r\n      for (const key of Object.keys(value)) {\r\n        let val = value[key] * ratio;\r\n        if (!isNaN(min) && !isNaN(max))\r\n          val = Math.min(max, Math.max(min, val));\r\n\r\n        value[key] = val;\r\n      }\r\n    }\r\n    else {\r\n      if (key)\r\n        value[key] = res;\r\n      else\r\n        value = res;\r\n    }\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  renderProportionallyIcon = () => {\r\n    const { proportionally, property } = this.props;\r\n\r\n    if (proportionally === undefined)\r\n      return null;\r\n\r\n    return <FontAwesomeIcon icon={['fas', (proportionally) ? 'lock' : 'lock-open']}\r\n                            className='proportional icon'\r\n                            onClick={() => this.props.onProportionallyToggle(property, proportionally ? '0' : '1')} />;\r\n  }\r\n\r\n  render() {\r\n    const { min, max, mode, value, display, hidePrecision, label } = this.props;\r\n    const { size } = this.props;\r\n    const dials = this.getProperties();\r\n\r\n    let dialSize = 203;\r\n    if (size)\r\n      dialSize = Math.min(size / dials.length, size - 70) - 10;\r\n\r\n    let startAngle, endAngle;\r\n\r\n    const props = {\r\n      mode,\r\n      min,\r\n      max,\r\n      display,\r\n      size: dialSize,\r\n      startAngle,\r\n      endAngle,\r\n      hideReset: true,\r\n      hidePrecision,\r\n    };\r\n\r\n    return (\r\n      <div className=\"dial-wrapper-container\">\r\n        {label}\r\n        {this.renderProportionallyIcon()}\r\n        <div className=\"dial-wrapper-block\">\r\n          {!!dials.length &&\r\n            dials.map(key => {\r\n              return (\r\n                <Dial {...props}\r\n                      key={key}\r\n                      label={key}\r\n                      value={value?.[key] ?? 0}\r\n                      onChange={value => this.onChange(value, key)} />\r\n              );\r\n            })\r\n          }\r\n\r\n          {!dials.length &&\r\n            <Dial {...props}\r\n                  value={typeof value === 'number' ? value : 0}\r\n                  onChange={this.onChange} />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { JoystickValue } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  value?: JoystickValue;\r\n  label?: string;\r\n  step?: number;\r\n  interval?: number;\r\n  min?: number;\r\n  max?: number;\r\n\r\n  onChange?: (res: JoystickValue) => void;\r\n};\r\n\r\ntype State = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport class Joystick extends React.Component<Props, State> {\r\n\r\n  static defaultProps: Props = {\r\n    interval: 100,\r\n  }\r\n\r\n  state: State = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  monitoring = false;\r\n  step: JoystickValue = {};\r\n  value: JoystickValue = null;\r\n  interval = null;\r\n\r\n  onPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    const { interval, value } = this.props;\r\n\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.value = value;\r\n\r\n    this.onPointerMove(e);\r\n    this.makeMove();\r\n    this.interval = setInterval(this.makeMove, interval);\r\n  }\r\n\r\n  onPointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const { label, step } = this.props;\r\n    const rect = this.ref.current.getBoundingClientRect();\r\n\r\n    const xCenter = (rect.right - rect.left) / 2 + rect.left;\r\n    const yCenter = (rect.bottom - rect.top) / 2 + rect.top;\r\n\r\n    let x = e.clientX - xCenter;\r\n    let y = e.clientY - yCenter;\r\n\r\n    const radius = Math.sqrt(x * x + y * y);\r\n    const maxRadius = this.ref.current.clientHeight / 2;\r\n\r\n    const radians = Math.atan2(x, y);\r\n    const angle = this.normalize(-1 * radians * (180 / Math.PI) - 90) / 360;\r\n\r\n    const r = Math.min(radius / maxRadius, 0.88);\r\n    const radian = (angle - 0.25) * Math.PI * 2;\r\n\r\n    x = Math.sin(radian) * r * 90;\r\n    y = Math.cos(radian) * r * 90;\r\n\r\n    let joystickValue = {} as JoystickValue;    \r\n\r\n    switch (label) {\r\n      case 'X':\r\n        x = 0;\r\n        joystickValue.X = (y * step) / maxRadius;\r\n        break;\r\n\r\n      case 'Y':\r\n        y = 0;\r\n        joystickValue.Y = (x * step) / maxRadius;\r\n        break;\r\n\r\n      case 'Z':\r\n        x = 0;\r\n        joystickValue.Z = (y * step) / maxRadius;\r\n        break;\r\n\r\n      case 'XY':\r\n        joystickValue.X = (y * step) / maxRadius;\r\n        joystickValue.Y = (x * step) / maxRadius;\r\n        break;\r\n    }\r\n\r\n    this.step = joystickValue;\r\n    this.setState({ x, y });\r\n  }\r\n\r\n  onPointerLost = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n    this.monitoring = false;\r\n    this.value = null;\r\n    \r\n    this.setState({ x: 0, y: 0 });\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n  }\r\n\r\n  makeMove = () => {\r\n    const { min, max } = this.props;\r\n\r\n    if (!this.value)\r\n      return;\r\n\r\n    for (const key in this.step) {\r\n      let v = this.value[key] + this.step[key];\r\n      if (max !== undefined)\r\n        v = Math.min(v, max);\r\n\r\n      if (min !== undefined)\r\n        v = Math.max(min, v);\r\n\r\n      this.value[key] = v;\r\n    }\r\n    \r\n    this.props.onChange?.(this.value);\r\n  }\r\n\r\n  normalize = (angle: number): number => {\r\n    while (angle < 0)\r\n      angle += 360;\r\n\r\n    while (angle > 360)\r\n      angle -= 360;\r\n\r\n    return angle;\r\n  }\r\n\r\n  render() {\r\n    const { x, y } = this.state;\r\n    const { label } = this.props;\r\n\r\n    let className = 'circle ';\r\n    if (!this.monitoring)\r\n      className += 'animate';\r\n\r\n    return (\r\n      <div className=\"joystick-wrapper\">\r\n        <div ref={this.ref}\r\n              className=\"joystick\"\r\n              onPointerDown={this.onPointerDown}\r\n              onPointerMoveCapture={this.onPointerMove}\r\n              onLostPointerCaptureCapture={this.onPointerLost}>\r\n          <div className=\"arrows\">\r\n            {['Z', 'X', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-up']} />}\r\n            {['Y', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-left']} />}\r\n            {['Y', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-right']} />}\r\n            {['Z', 'X', 'XY'].includes(label) && <FontAwesomeIcon icon={['fas', 'caret-down']} />}\r\n          </div>\r\n          <div className=\"circle-wrapper\">\r\n            <div className={className} style={{ transform: `translate(${x}px, ${-y}px)` }}>\r\n              <div className=\"label\">{label}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { JoystickValue, PropertyType } from 'src/shared';\r\nimport { Slider, ValueInput, Joystick } from '.';\r\n\r\n\r\ntype Props = {\r\n  keys?: string[];\r\n  value?: JoystickValue;\r\n  min?: number;\r\n  max?: number;\r\n  type?: PropertyType;\r\n  stepMin?: number;\r\n  stepMax?: number;\r\n  showStepSlider?: boolean;\r\n  step?: number;\r\n  hasLimits?: boolean;\r\n  showReset?: boolean;\r\n  label?: React.ReactNode;\r\n\r\n  onChange?: (value?: JoystickValue) => void;\r\n};\r\n\r\ntype State = {\r\n  speed: number;\r\n}\r\n\r\nexport class JoysticksWrapper extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    speed: 5,\r\n  }\r\n\r\n  onSpeedChange = (speed: number) => {\r\n    this.setState({ speed });\r\n  }\r\n\r\n  getJoystick = (pos: 'left' | 'right') => {\r\n    const { keys = [] } = this.props;\r\n\r\n    const x = keys[0];\r\n    const y = keys[1];\r\n    const z = keys[2];\r\n\r\n    switch (pos) {\r\n      case 'left':\r\n        return (z ? x + y : x);\r\n\r\n      case 'right':\r\n        return (z ? z : y);\r\n    }\r\n  }\r\n\r\n  renderInput = (axis: string, value: JoystickValue, min: number, max: number) => {\r\n    return (\r\n      <div key={axis} className=\"control\">\r\n        <span className=\"label\">{axis}:</span>\r\n        <ValueInput min={min}\r\n                    max={max}\r\n                    value={value?.[axis]}\r\n                    onChange={v => this.props.onChange?.({...value, [axis]: v })} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { value, min, max, label = '', keys = [], showReset = true } = this.props;\r\n    const { speed } = this.state;\r\n    \r\n    const leftJoystick = this.getJoystick('left');\r\n    const rightJoystick = this.getJoystick('right');\r\n\r\n    return (\r\n      <div className=\"joystick-outer-wrapper\">\r\n        {showReset &&\r\n          <FontAwesomeIcon className=\"reset-btn\" icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n        }\r\n        <div className=\"joystick-wrapper-block\">\r\n          <Joystick label={leftJoystick}\r\n                    value={value}\r\n                    step={speed}\r\n                    min={min}\r\n                    max={max}\r\n                    onChange={this.props.onChange} />\r\n        </div>\r\n\r\n        <div className=\"controls-block\">\r\n          <div className=\"label\">{label}</div>\r\n          <div className=\"inputs\">\r\n            {keys.map(key => this.renderInput(key, value, min, max))}\r\n          </div>\r\n\r\n          <div className=\"slider\">\r\n            <Slider value={speed}\r\n                    min={0.01}\r\n                    max={100}\r\n                    onChange={this.onSpeedChange}\r\n                    showLabel={false} />\r\n            <div className=\"values\">\r\n              <div className=\"field\">Slow</div>\r\n              <ValueInput value={speed} min={0.01} onChange={this.onSpeedChange} />\r\n              <div className=\"field\">Fast</div>\r\n            </div>\r\n            <div className=\"centered\">Speed</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"joystick-wrapper-block\">\r\n          <Joystick label={rightJoystick}\r\n                    value={value}\r\n                    step={speed}\r\n                    min={min}\r\n                    max={max}\r\n                    onChange={this.props.onChange} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  label?: string;\r\n  fallback?: string;\r\n};\r\n\r\ntype State = {\r\n  hasError: boolean;\r\n};\r\n\r\nexport class SafeImage extends React.Component<React.ImgHTMLAttributes<HTMLImageElement> & Props, State> {\r\n  state: State = {\r\n    hasError: false,\r\n  };\r\n\r\n  render() {\r\n    const { fallback, alt, label, style } = this.props;\r\n\r\n    const props = {...this.props};\r\n    delete props.fallback;\r\n    delete props.label;\r\n\r\n    if (!this.state.hasError)\r\n      return <img {...props} alt={alt ?? label} onError={() => this.setState({ hasError: true })} />;\r\n\r\n    if (fallback)\r\n      return <img {...props} src={fallback} alt={alt ?? label} />;\r\n\r\n    return (\r\n      <div className=\"safe-image-wrapper\" style={style}>\r\n        <FontAwesomeIcon icon={['fas', 'image']} />\r\n        <div className=\"image-label\">Can't load image</div>\r\n        <div className=\"image-label\">{label}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  value?: number | string;\r\n  draggable?: boolean;\r\n  min?: number;\r\n  max?: number;\r\n  precision?: number;\r\n  disabled?: boolean;\r\n\r\n  onChange: (value: number) => void;\r\n};\r\n\r\ntype State = {\r\n  value: string;\r\n};\r\n\r\nexport class ValueInput extends React.Component<Props, State> {\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  input = React.createRef<HTMLInputElement>();\r\n\r\n  monitoring: boolean = false;\r\n  dragStartX: number = 0;\r\n  touchTime: number = null;\r\n\r\n  getValue = (): string => {\r\n    let { value, precision } = this.props;\r\n    if (typeof value === 'string')\r\n      value = Number.parseFloat(value);\r\n\r\n    return value?.toFixed?.(precision ?? 2);\r\n  }\r\n\r\n  getNumberValue = () => {\r\n    let { value } = this.props;\r\n    if (typeof value === 'string')\r\n      value = Number.parseFloat(value);\r\n\r\n    return value;\r\n  }\r\n\r\n  state: State = {\r\n    value: this.getValue(),\r\n  };\r\n\r\n  componentDidUpdate (prevProps: Props) {\r\n    const { value } = this.props;\r\n    const newValue = this.getValue();\r\n\r\n    if (prevProps.value !== value && this.state.value !== newValue)\r\n      this.setState({ value: newValue });\r\n  }\r\n\r\n  onContextMenu = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onClick = () => {\r\n    this.input.current.select();\r\n  }\r\n\r\n  onDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (this.props.draggable === false)\r\n      return;\r\n\r\n    this.monitoring = true;\r\n    this.dragStartX = e.clientX;\r\n    \r\n    if (this.touchTime === null || (performance.now() - this.touchTime) > 3000)\r\n      this.touchTime = performance.now();\r\n    this.ref.current?.setPointerCapture(e.pointerId);\r\n  }\r\n\r\n  onUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = false;\r\n    this.touchTime = performance.now();\r\n    this.ref.current?.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  onMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring || !this.ref.current)\r\n      return;\r\n\r\n    if (this.touchTime !== null) {\r\n      // initial delay of 150ms\r\n      if (performance.now() - this.touchTime < 150)\r\n        return;\r\n\r\n      this.dragStartX = e.clientX;\r\n      this.touchTime = null;\r\n    }\r\n\r\n    const { min, max } = this.props;\r\n\r\n    let value = this.getNumberValue();\r\n    let x = e.clientX - this.dragStartX;\r\n    this.dragStartX = e.clientX;\r\n\r\n    if (min !== undefined && max !== undefined) {\r\n      const range = Math.abs(max - min);\r\n      if (range > 0.01 && 2 * range < window.innerWidth)\r\n        x *= range / 50;\r\n    }\r\n\r\n    value += x;\r\n    if (min !== undefined)\r\n      value = Math.max(min, value);\r\n\r\n    if (max !== undefined)\r\n      value = Math.min(value, max);\r\n\r\n    if (isNaN(value))\r\n      value = 0;\r\n\r\n    this.props.onChange?.(value);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onManualChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        this.onChangeValue();\r\n        break;\r\n\r\n      case 'Escape':\r\n        this.setPropsValue();\r\n        break;\r\n    }\r\n  }\r\n\r\n  setPropsValue = () => {\r\n    this.setState({ value: this.getValue() });\r\n  }\r\n\r\n  onChangeValue = () => {\r\n    const { min, max } = this.props;\r\n    let value = Number.parseFloat(this.state.value);\r\n\r\n    if (!isNaN(value)) {\r\n      if (!isNaN(min))\r\n        value = Math.max(min, value);\r\n\r\n      if (!isNaN(max))\r\n        value = Math.min(max, value);\r\n\r\n      if (value !== this.props.value)\r\n        this.props.onChange(value);\r\n    } \r\n\r\n    this.setPropsValue();\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const { disabled } = this.props;\r\n\r\n    return (\r\n      <span ref={this.ref}\r\n            className=\"input-field-container\"\r\n            onClick={this.onClick}\r\n            onDoubleClick={this.onClick}\r\n            onPointerDown={this.onDown}\r\n            onPointerMove={this.onMove}\r\n            onPointerUp={this.onUp}\r\n            onLostPointerCapture={this.onUp}>\r\n        <input ref={this.input}\r\n               disabled={disabled}\r\n               className=\"input-field\"\r\n               value={value ?? ''}\r\n               type=\"number\"\r\n               inputMode=\"numeric\"\r\n               pattern=\"[0-9]*\"\r\n               onChange={this.onManualChange}\r\n               onKeyDown={this.onKeyDown}\r\n               onBlur={this.onChangeValue}\r\n               onContextMenu={this.onContextMenu} />\r\n      </span>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ValueInput } from './ValueInput';\r\n\r\n\r\ntype Props = {\r\n  min?: number;\r\n  max?: number;\r\n  size?: number;\r\n  value?: number;\r\n  showGrid?: boolean;\r\n  showLimits?: boolean;\r\n  showLabel?: boolean;\r\n  precision?: number;\r\n  touchMode?: boolean;\r\n  style?: React.CSSProperties;\r\n  \r\n  onChange?: (value: number) => void;\r\n};\r\n\r\nexport class Slider extends React.Component<Props> {\r\n\r\n  static defaultProps: Props = {\r\n    style: {},\r\n  };\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  circleRef = React.createRef<HTMLDivElement>();\r\n  monitoring: boolean = false;\r\n  dragValue: number = null;\r\n  dragOffset: number = null;\r\n\r\n  onDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    const { touchMode } = this.props;\r\n    const target = e.target as HTMLDivElement;\r\n\r\n    if (touchMode && !target.classList.contains('circle'))\r\n      return;\r\n\r\n    this.monitoring = true;\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n\r\n    const circle = this.circleRef.current.getBoundingClientRect();\r\n\r\n    this.dragOffset = 0;\r\n    this.dragValue = this.props.value;\r\n    if (circle.left <= e.clientX && e.clientX <= circle.right)\r\n      this.dragOffset = e.clientX - (circle.left + (circle.width / 2));\r\n    \r\n    this.onMove(e);\r\n  }\r\n\r\n  onUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = false;\r\n    this.dragOffset = 0;\r\n    this.dragValue = null;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n  \r\n  onMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring || !this.ref.current)\r\n      return;\r\n\r\n    const { min, max } = this.props;\r\n    const slider = this.ref.current;\r\n\r\n    const rect = slider.getBoundingClientRect();\r\n    const x = e.clientX - this.dragOffset;\r\n    const ratio = Math.max(0, Math.min((x - rect.left) / rect.width, 1));\r\n\r\n    const value = ratio * (max - min) + min;\r\n    if (this.dragValue !== value) {\r\n      this.dragValue = value;\r\n      this.props.onChange?.(value);\r\n    }\r\n  }\r\n\r\n  renderGridLines = (percent: number) => {\r\n    const res = [];\r\n    for (let i = 0; i < 11; i++)\r\n      res.push(<div key={i} className={`grid-lines ${percent > i * 9.9999 ? 'active' : ''}`} />);\r\n\r\n    return <div className=\"grid-lines-wrapper\">{res}</div>;\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent) => {\r\n    const { value, min, max } = this.props;\r\n    const step = (max - min) / 20;\r\n\r\n    switch (e.nativeEvent.code) {\r\n      case 'KeyA':\r\n      case 'KeyS':\r\n        this.props.onChange?.(value - step);\r\n        break;\r\n\r\n      case 'KeyW':\r\n      case 'KeyD':\r\n        this.props.onChange?.(value + step);\r\n        break;\r\n    };\r\n  }\r\n\r\n  render()  {\r\n    const { min, max, showGrid, showLimits, showLabel, precision, touchMode, style } = this.props;\r\n    const value = this.dragValue ?? this.props.value;\r\n\r\n    let percent = 0;\r\n    let className = 'slider ';\r\n\r\n    if (touchMode)\r\n      className += 'touch-mode';\r\n\r\n    if (!isNaN(value)) {\r\n      percent = (value - min) / (max - min) * 100;\r\n      percent = Math.max(0, Math.min(percent, 100));\r\n    }  \r\n\r\n    return (\r\n      <div className=\"slider-wrapper\">\r\n        {showLabel !== false &&\r\n          <ValueInput min={min}\r\n                      max={max}\r\n                      precision={precision}\r\n                      value={value}\r\n                      onChange={this.props.onChange} />\r\n        }\r\n\r\n        <div className=\"slider-inner\" tabIndex={0} onKeyDown={this.onKeyDown}>\r\n\r\n          {showLimits && \r\n            <div className=\"label-wrapper\">\r\n              <span className=\"label\">{min}</span>\r\n              <span className=\"label\">{max}</span>\r\n            </div>\r\n          }\r\n          \r\n          <div className=\"slider-clickable\"\r\n                ref={this.ref}\r\n                onLostPointerCapture={this.onUp}\r\n                onPointerDown={this.onDown}\r\n                onPointerUp={this.onUp}\r\n                onPointerMove={this.onMove}>\r\n            <div className=\"slider-block\">\r\n              <div className={className} style={style} />\r\n              <div className=\"range-fill\" style={{ width: `${percent}%` }} />\r\n              <div className=\"circle-wrapper\" style={{ transform: `translateX(${percent}%)` }}>\r\n                <div className=\"circle\" \r\n                     ref={this.circleRef} />\r\n              </div>\r\n            </div>\r\n\r\n            {showGrid && \r\n              this.renderGridLines(percent)\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ICustomStackProperty, JoystickValue, PropertyValue } from 'src/shared';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { Slider, ValueInput } from '.';\r\n\r\n\r\ntype Props = {\r\n  widget?: ICustomStackProperty;\r\n  label?: string;\r\n  min: number;\r\n  max: number;\r\n  value: JoystickValue;\r\n\r\n  onChange: (value?: PropertyValue) => void;\r\n};\r\n\r\nexport class SlidersWrapper extends React.Component<Props> {\r\n\r\n  onSliderChange = (axis: string, sliderValue: number) => {\r\n    const { value = {}, onChange } = this.props;\r\n\r\n    if (axis) {\r\n      value[axis] = sliderValue;\r\n      onChange(value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { min, max, value, widget } = this.props;\r\n    const propertyType = widget?.propertyType;\r\n    const keys = WidgetUtilities.getPropertyKeys(propertyType);\r\n    const precision = WidgetUtilities.getPropertyPrecision(propertyType);\r\n\r\n    return (\r\n      <div className=\"sliders-component-wrapper\">\r\n        {keys.map(property =>\r\n          <div key={property} className=\"slider-row\">\r\n            <div className=\"title\">{property}</div>\r\n            <ValueInput min={min}\r\n                        max={max}\r\n                        precision={precision}\r\n                        value={value?.[property]}\r\n                        onChange={value => this.onSliderChange(property, value)} />\r\n            {min !== undefined && max !== undefined &&\r\n              <>\r\n                <div className=\"limits\">{min?.toFixed(1)}</div>\r\n                <Slider value={value?.[property]}\r\n                        min={min}\r\n                        max={max}\r\n                        precision={precision}\r\n                        showLabel={false}\r\n                        onChange={value => this.onSliderChange(property, value)} />\r\n                <div className=\"limits\">{max?.toFixed(1)}</div>\r\n              </>\r\n  }\r\n            <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\n\r\n\r\ntype Props = {\r\n  label?: string;\r\n  value?: number;\r\n  disabled?: boolean;\r\n\r\n  onChange?: (value: number) => void;\r\n}\r\n\r\ntype State = {\r\n  value?: number;\r\n}\r\n\r\nenum TimeKey {\r\n  Hours   = 'HOURS',\r\n  Minutes = 'MINUTES',\r\n}\r\n\r\nexport class TimeControl extends React.Component<Props, State> {\r\n\r\n  static defaultProps: Props = {\r\n    label: '',\r\n    value: 23.5,\r\n  };\r\n\r\n  state: State = {\r\n    value: null,\r\n  }\r\n\r\n  hoursInputRef = React.createRef<HTMLInputElement>();\r\n  minutesInputRef = React.createRef<HTMLInputElement>();\r\n\r\n  componentDidMount() {\r\n    const { value } = this.props;\r\n    this.setState({ value });\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props): void {\r\n    // const { value } = this.props;\r\n    \r\n    // if (value !== prevProps.value) {\r\n    //   this.setState({ value });\r\n    // }\r\n  }\r\n\r\n  getTwoDigits = (num: number) => {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n\r\n  getInputValues = () => {\r\n    const { value } = this.state;\r\n\r\n    if (value === null)\r\n      return ':';\r\n\r\n    const hours = Math.floor(value);\r\n    const minutes = Math.round((value * 60) % 60);\r\n\r\n    return [this.getTwoDigits(hours), this.getTwoDigits(minutes)];\r\n  }\r\n\r\n  normalizeValue = (value: number) => {\r\n    if (value >= 13)\r\n      value -= 12;\r\n\r\n    if (value < 1)\r\n      value += 12;\r\n\r\n    return +value.toFixed(2);\r\n  }\r\n\r\n  onTimeChange = (dir: number) => {\r\n    let { value } = this.state;\r\n\r\n    value += dir * 0.25;\r\n    value = this.normalizeValue(value);\r\n\r\n    this.props.onChange?.(value);\r\n    this.setState({ value });\r\n  }\r\n\r\n  onInputClick = (ref: React.RefObject<HTMLInputElement>) => {\r\n    if (!ref?.current)\r\n      return;\r\n\r\n    ref.current.select();\r\n  }\r\n\r\n  onInputChange = (v: string, key: TimeKey) => {\r\n    let { value } = this.state;\r\n    const [h] = value.toString().split('.');\r\n    const m = (value - +h).toFixed(2);\r\n\r\n    let diff = 0;\r\n\r\n    switch (key) {\r\n      case TimeKey.Hours:\r\n        diff = +v - +h;\r\n        break;\r\n\r\n      case TimeKey.Minutes:\r\n        if (v.length > 2)\r\n          v = v.slice(1, 3);\r\n\r\n        const d = Math.min(59, +v);\r\n        diff = +(d / 60).toFixed(2) - +m;\r\n        break;\r\n    }\r\n\r\n    value = +(value + diff).toFixed(2);\r\n    if (value >= 13 || value < 1)\r\n      return;\r\n\r\n    this.props.onChange?.(value);\r\n    this.setState({ value });\r\n  }\r\n\r\n  render() {\r\n    const { label, disabled } = this.props;\r\n    const [hours = '', minutes = ''] = this.getInputValues();\r\n\r\n    let className = 'time-control ';\r\n    if (disabled)\r\n      className += 'disabled';\r\n\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <div className=\"time-component\">\r\n          <span className=\"icon\" onClick={() => this.onTimeChange(-1)}>\r\n            <FontAwesomeIcon icon={['fas', 'minus']} />\r\n          </span>\r\n          <div className=\"inputs-row\">\r\n            <input ref={this.hoursInputRef}\r\n                   className=\"time-input\"\r\n                   type=\"number\"\r\n                   value={hours}\r\n                   onClick={() => this.onInputClick(this.hoursInputRef)}\r\n                   onChange={e => this.onInputChange(e.target.value, TimeKey.Hours)} />\r\n            :\r\n            <input ref={this.minutesInputRef}\r\n                   className=\"time-input\"\r\n                   type=\"number\"\r\n                   value={minutes}\r\n                   onClick={() => this.onInputClick(this.minutesInputRef)}\r\n                   onChange={e => this.onInputChange(e.target.value, TimeKey.Minutes)} />\r\n          </div>\r\n          <span className=\"icon\" onClick={() => this.onTimeChange(1)}>\r\n            <FontAwesomeIcon icon={['fas', 'plus']} />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  children: React.ReactElement[];\r\n\r\n  leftIcon?: React.ReactElement[] | React.ReactElement;\r\n  rightIcon?: React.ReactElement[] | React.ReactElement;\r\n\r\n  defaultActiveKey?: string;\r\n  onlyHeader?: boolean;\r\n\r\n  onTabChange?: (active?: string) => void;\r\n}\r\n\r\ntype State = {\r\n  active: string;\r\n}\r\n\r\nexport class Tabs extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    active: null,\r\n  }\r\n\r\n  selectorRef = React.createRef<HTMLDivElement>();\r\n  containerRef = React.createRef<HTMLDivElement>();\r\n\r\n  componentDidMount() {\r\n    this.updateActive();\r\n\r\n    window.addEventListener('resize', this.updateSelector);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateSelector);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>): void {\r\n    const { active } = this.state;\r\n    const { defaultActiveKey, children } = this.props;\r\n\r\n    if (children.length !== prevProps.children.length)\r\n      this.updateSelector();\r\n\r\n    if (active !== prevState.active)\r\n      this.updateSelector();\r\n\r\n    if (defaultActiveKey !== prevProps.defaultActiveKey)\r\n      this.updateActive();\r\n  }\r\n\r\n  getSelectorPosition = () => {\r\n    const elements = this.containerRef.current.getElementsByClassName('tab');\r\n    if (!elements.length)\r\n      return;\r\n\r\n    let left = 5;\r\n    let width = null;\r\n    \r\n    for(let i = 0; i < elements.length; i++) {\r\n      const el = elements[i] as HTMLDivElement;\r\n\r\n      if (el.classList.contains('active')) {\r\n        width = ((el.offsetLeft - left) * 2) + el.clientWidth;\r\n        break;\r\n      }\r\n\r\n      left = ((el.offsetLeft * 2) + el.clientWidth) - left;\r\n    }\r\n\r\n    return [left, width];\r\n  }\r\n\r\n  onTabChange = (active: string) => {\r\n    this.setState({ active });\r\n    this.props.onTabChange?.(active);\r\n  }\r\n\r\n  updateActive = () => {\r\n    const { children, defaultActiveKey } = this.props;\r\n    const child = _.first(children) as any;\r\n\r\n    if (!child)\r\n      return;\r\n\r\n    const id = child.props.id;\r\n    this.setState({ active: defaultActiveKey ?? id });\r\n  }\r\n\r\n  updateSelector = () => {\r\n    const selector = this.selectorRef.current;\r\n    const [left, width] = this.getSelectorPosition();\r\n\r\n    selector.style.left = `${left}px`;\r\n    selector.style.width = `${width}px`;\r\n  }\r\n\r\n  renderTabHeader = (child, index: number) => {\r\n    if (!child)\r\n      return null;\r\n\r\n    const { active } = this.state;\r\n    const { id, tab, icon, view } = child.props;\r\n\r\n    const isActive = active === id || !active && index === 0;\r\n    let className = 'tab ';\r\n\r\n    if (isActive)\r\n      className += 'active ';\r\n\r\n    return (\r\n      <div key={id}\r\n           className={className}\r\n           onClick={() => this.onTabChange(id)}\r\n           title={tab}>\r\n        {!!icon && <FontAwesomeIcon className=\"icon\" icon={icon} />}\r\n        {tab}\r\n        {!!view && view({ ...child.props, active: isActive })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTabContent = () => {\r\n    const { active } = this.state;\r\n    const { children } = this.props;\r\n\r\n    const child = _.find(children, c => c?.props?.id === active);\r\n\r\n    if (!child)\r\n      return null;\r\n\r\n    return child;\r\n  }\r\n\r\n  render() {\r\n    let { children, leftIcon, rightIcon, onlyHeader } = this.props;\r\n    children = Array.isArray(children) ? children : [children];\r\n\r\n    return (\r\n      <div ref={this.containerRef} className=\"tabs-container\">\r\n        <div className=\"tabs-header-elements\">\r\n          {!!leftIcon && leftIcon}\r\n          <div className=\"tabs-elements\">\r\n            <div className=\"tabs-header\">\r\n              {children.map?.(this.renderTabHeader)}\r\n            </div>\r\n            <div className=\"selector\" ref={this.selectorRef} />\r\n          </div>\r\n          {!!rightIcon && rightIcon}\r\n        </div>\r\n        {!onlyHeader && <div className=\"tabs-content\">{this.renderTabContent()}</div>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\ntype TabPaneProps = {\r\n  tab: string;\r\n  id: string;\r\n  icon?: IconProp;\r\n\r\n  view?: ({ id, tab, icon, active }) => React.ReactElement;\r\n}\r\n\r\nexport class TabPane extends React.Component<TabPaneProps> {\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}","import React from 'react';\r\n\r\ntype Props = {\r\n  value?: string;\r\n  onChange?: (value: string) => void;\r\n};\r\n\r\nexport class Text extends React.Component<Props> {\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.onChange?.(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n\r\n    return (\r\n      <div className=\"widget-text-wrapper\">\r\n        <input className=\"widget-text\" type=\"textbox\" value={value ?? ''} onChange={this.onChange} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  value?: boolean | number;\r\n  onChange?: (value: boolean | number) => void;\r\n};\r\n\r\nexport class Toggle extends React.Component<Props> {\r\n\r\n  onClick = () => {\r\n    const { value, onChange } = this.props;\r\n    onChange?.(!value);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n\r\n    let className = 'toggle ';\r\n    if (value)\r\n      className += 'checked ';\r\n\r\n    return (\r\n      <div className={className} onClick={this.onClick}>\r\n        <div className=\"switch\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { PropertyType } from 'src/shared';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { ValueInput } from './ValueInput';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  label: string;\r\n  propertyType: PropertyType;\r\n  value: any;\r\n  step: number;\r\n  defaultValue?: any;\r\n\r\n  onChange?: (property: string, value: any) => void;\r\n}\r\n\r\ntype State = {\r\n  step: number;\r\n  activeKey: string;\r\n}\r\n\r\nconst dashArr = Array.from(Array(81));\r\n\r\nexport class VectorControl extends React.Component<Props, State> {\r\n\r\n  static defaultProps: Props = {\r\n    label: '',\r\n    propertyType: PropertyType.Vector,\r\n    value: {},\r\n    step: 0.1,\r\n  };\r\n\r\n  state: State = {\r\n    step: null,\r\n    activeKey: null,\r\n  }\r\n\r\n  sliderRef = React.createRef<HTMLDivElement>();\r\n  pointerRef = React.createRef<HTMLDivElement>();\r\n  value = null;\r\n  monitoring: boolean = false;\r\n  offset: number = 0;\r\n  step: number = 0;\r\n  interval = null;\r\n\r\n  componentDidMount() {\r\n    const { propertyType } = this.props;\r\n    const keys = WidgetUtilities.getPropertyKeys(propertyType);\r\n    const activeKey = _.first(keys);\r\n\r\n    if (!activeKey)\r\n      return;\r\n\r\n    this.setState({ activeKey });\r\n  }\r\n\r\n  onMouseDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    this.monitoring = true;\r\n    this.sliderRef.current.setPointerCapture(e.pointerId);\r\n    this.offset = 0;\r\n    this.value = { ...this.props.value };\r\n\r\n    const pointer = this.pointerRef.current.getBoundingClientRect();\r\n    if (pointer.left <= e.clientX && e.clientX <= pointer.right)\r\n      this.offset = e.clientX - (pointer.left + (pointer.width / 2));\r\n\r\n    this.onMouseMove(e);\r\n    this.makeMove();\r\n\r\n    this.interval = setInterval(this.makeMove, 100);\r\n  }\r\n\r\n  onMouseUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.monitoring = false;\r\n    this.offset = 0;\r\n    this.value = null;\r\n    this.step = 0;\r\n    this.sliderRef.current.releasePointerCapture(e.pointerId);\r\n\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n\r\n    this.setState({ step: null });\r\n  }\r\n\r\n  onMouseMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring || !this.sliderRef.current)\r\n      return;\r\n\r\n    const slider = this.sliderRef.current;\r\n\r\n    const rect = slider.getBoundingClientRect();\r\n    const x = e.clientX - this.offset;\r\n    const center = (rect.right - rect.left) / 2;\r\n    const ratio = Math.max(-1, Math.min(((x - (rect.left + center)) / rect.width) * 2, 1));\r\n    const step = +ratio.toFixed(2);\r\n\r\n    this.step = step * this.props.step;\r\n    this.setState({ step });\r\n  }\r\n\r\n  onKeySelect = (e: React.MouseEvent, activeKey: string) => {\r\n    e.stopPropagation();\r\n    this.setState({ activeKey });\r\n  }\r\n\r\n  makeMove = () => {\r\n    const { activeKey } = this.state;\r\n    if (!activeKey || this.value?.[activeKey] === undefined)\r\n      return;  \r\n\r\n    this.value[activeKey] += this.step;\r\n    this.props.onChange(activeKey, this.value[activeKey]);\r\n  }\r\n\r\n  resetActiveKey = (e: React.MouseEvent) => {\r\n    this.setState({ activeKey: null });\r\n  }\r\n\r\n  getPointerStyles = (): React.CSSProperties => {\r\n    const { step } = this.state;\r\n    const slider = this.sliderRef.current?.getBoundingClientRect?.();\r\n\r\n    if (step === null || !slider)\r\n      return { transition: 'transform .2s' };\r\n\r\n    const translate = (slider.width / 2 * step).toFixed();\r\n    return { transform: `translateX(${translate}px)` };\r\n  }\r\n\r\n  getIsDisabled = () => {\r\n    const { activeKey } = this.state;\r\n    return !activeKey;\r\n  }\r\n\r\n  renderPropertyInput = (key: string) => {\r\n    const { activeKey } = this.state;\r\n    const { value } = this.props;\r\n\r\n    let className = 'key ';\r\n\r\n    if (key === activeKey)\r\n      className += 'active';\r\n\r\n    return (\r\n      <div key={key} \r\n           className={className} \r\n           onClick={(e) => this.onKeySelect(e, key)}>\r\n        <div className=\"property\">{key}:</div>\r\n        <ValueInput value={value[key] ?? 0}\r\n                    disabled={activeKey !== key}\r\n                    onChange={value => this.props.onChange(key, value)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onReset = () => {\r\n    const { onChange, defaultValue } = this.props;\r\n    onChange(null, defaultValue);\r\n  }\r\n\r\n  render() {\r\n    const { label, propertyType } = this.props;\r\n    const keys = WidgetUtilities.getPropertyKeys(propertyType);\r\n\r\n    let className = 'vector-control ';\r\n    if (this.getIsDisabled())\r\n      className += 'disabled';\r\n\r\n    return (\r\n      <div className={className} onClick={this.resetActiveKey}>\r\n        <div className=\"title\">{label}</div>\r\n        <div className=\"vector-item\">\r\n          <div className=\"keys-row\">\r\n            {keys.map(this.renderPropertyInput)}\r\n          </div>\r\n          <div className=\"vector-container\">\r\n            <div ref={this.sliderRef}\r\n                 className=\"slider-control\"\r\n                 onClick={e => e.stopPropagation()}\r\n                 onPointerDown={this.onMouseDown}\r\n                 onLostPointerCapture={this.onMouseUp}\r\n                 onPointerMove={this.onMouseMove}>\r\n              {dashArr.map((_, i) => <div key={`dash-${i}`} className=\"dash\" />)}\r\n            </div>\r\n            <div ref={this.pointerRef} className=\"pointer\" style={this.getPointerStyles()} />\r\n          </div>\r\n        </div>\r\n        <span className=\"reset-icon\" onClick={this.onReset}>\r\n          <FontAwesomeIcon icon={['fas', 'undo']} />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ICustomStackProperty, JoystickValue, PropertyType, WidgetType, WidgetTypes } from 'src/shared';\r\nimport { DialsWrapper, JoysticksWrapper, SlidersWrapper, DialMode } from '.';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  value: JoystickValue;\r\n  widget?: ICustomStackProperty;\r\n  label?: React.ReactNode;\r\n  min?: number;\r\n  max?: number;\r\n\r\n  onChange: (value?: JoystickValue) => void;\r\n  onClose: () => void;\r\n};\r\n\r\ntype State = {\r\n  mode?: WidgetType;\r\n};\r\n\r\nconst keys = [WidgetTypes.Joystick, WidgetTypes.Dial, WidgetTypes.Sliders];\r\n\r\nexport class VectorDrawer extends React.Component<Props, State> {\r\n  state : State = {};\r\n\r\n  componentDidMount() {\r\n    const { widget } = this.props;\r\n    \r\n    const modes = _.compact(keys.map(key => widget.widgets?.find(w => w === key)));\r\n    const mode = _.first(modes);\r\n\r\n    this.setState({ mode });\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { widget } = this.props;\r\n    const { mode } = this.state;\r\n\r\n    if (widget !== prevProps.widget) {\r\n      const modes = _.compact(keys.map(key => widget.widgets?.find(w => w === key)));\r\n\r\n      if (!modes.length)\r\n        return this.props.onClose();\r\n\r\n      if (!modes.find(m => m === mode))\r\n        this.setState({ mode: _.first(modes) });\r\n    }\r\n  }\r\n\r\n  renderJoystick = (keys: string[], min: number, max: number) => {\r\n    const { widget, value, onChange } = this.props;\r\n    return (      \r\n      <JoysticksWrapper type={widget?.propertyType} \r\n                        min={min}\r\n                        max={max}\r\n                        value={value}\r\n                        keys={keys}\r\n                        showReset={false}\r\n                        onChange={onChange} />\r\n    );\r\n  }\r\n\r\n  setMode = (mode: WidgetType) => {\r\n    this.setState({ mode });\r\n  }\r\n\r\n  renderMode = (mode: string, type: WidgetType) => {\r\n    const { widget } = this.props;\r\n    if (widget.widgets.length < 2 || !widget.widgets.includes(type))\r\n      return null;\r\n\r\n    let className = 'mode ';\r\n    if (mode === type)\r\n      className += 'selected ';\r\n\r\n    return <div className={className} onClick={() => this.setMode(type)}>{type}</div>;\r\n  }\r\n\r\n  render() {\r\n    const { label, value, min, max, widget, onChange, onClose } = this.props;\r\n    if (!widget?.widgets?.length)\r\n      return null;\r\n\r\n    let { mode } = this.state;\r\n    if (!mode || !widget.widgets.includes(mode))\r\n      mode = widget.widgets[0];\r\n\r\n    const keys = WidgetUtilities.getPropertyKeys(widget?.propertyType);\r\n    const rotator = widget.propertyType === PropertyType.Rotator;\r\n    let dialMode = DialMode.Endless;\r\n\r\n    if (min !== undefined && max !== undefined)\r\n      dialMode = DialMode.Range;\r\n\r\n    if (rotator)\r\n      dialMode = DialMode.Rotation;\r\n\r\n    const showModes = widget.widgets.length > 1;\r\n\r\n    return (\r\n      <div className=\"vector-drawer-wrapper\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"drawer-header\">\r\n          <div className=\"modes header-block\">\r\n            {this.renderMode(mode, WidgetTypes.Joystick)}\r\n            {this.renderMode(mode, WidgetTypes.Dial)}\r\n            {this.renderMode(mode, WidgetTypes.Sliders)}\r\n          </div>\r\n          <div className=\"header-block\">\r\n            <span>{label}</span>\r\n            <FontAwesomeIcon className=\"reset-btn\" icon={['fas', 'undo']} onClick={() => onChange?.()} />\r\n          </div>\r\n          <div className=\"header-block btns\">\r\n            <FontAwesomeIcon className=\"close-btn\" icon={['fas', 'times']} onClick={onClose} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`controls-block ${showModes ? '' : 'controls-only'}`}>\r\n          {mode === WidgetTypes.Joystick && !rotator && \r\n            this.renderJoystick(keys, min, max)\r\n          }\r\n\r\n          {mode === WidgetTypes.Sliders &&\r\n            <SlidersWrapper widget={widget}\r\n                            min={min}\r\n                            max={max}\r\n                            value={value}\r\n                            onChange={onChange} />\r\n          }\r\n\r\n          {mode === WidgetTypes.Dial &&\r\n            <DialsWrapper size={widget.propertyType !== PropertyType.Vector2D ? 600 : 400}\r\n                          min={min}\r\n                          max={max}\r\n                          type={widget.propertyType}\r\n                          mode={dialMode}\r\n                          value={value}\r\n                          hidePrecision={true}\r\n                          onChange={onChange} />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  placeholder?: string;\r\n\r\n  onSearch: (value: string) => void;\r\n};\r\n\r\ntype State = {\r\n  filter: string,\r\n};\r\n\r\nexport class Search extends React.Component<Props, State> {\r\n  static defaultProps: Partial<Props> = {\r\n    placeholder: 'Search',\r\n  };\r\n\r\n  state: State = {\r\n    filter: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { placeholder, onSearch } = this.props;\r\n    \r\n    if(placeholder !== prevProps.placeholder) {\r\n      this.setState({ filter: '' });\r\n      onSearch('');\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onSearch?.('');\r\n  }\r\n\r\n  onSearch = (filter: string) => {\r\n    this.props.onSearch(filter.toLowerCase());\r\n\r\n    this.setState({ filter });\r\n  }\r\n\r\n  render() {    \r\n    const { filter } = this.state;\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <div className=\"search-wrapper\">\r\n        <FontAwesomeIcon icon={['fas', 'search']} />\r\n        <input className=\"list-search\" value={filter} placeholder={placeholder} onChange={e => this.onSearch(e.target.value)}/>\r\n        {filter && \r\n          <FontAwesomeIcon icon={['fas', 'times-circle']} onClick={() => this.onSearch('')} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\n\r\ntype SliderWheelProps = {\r\n  vertical?: boolean;\r\n  size?: number,\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n\r\n  onWheelMove?: (value: number, offset?: number) => void;\r\n  onWheelStart?: () => void;\r\n}\r\n\r\ntype SliderWheelState = {\r\n  offset: number;\r\n}\r\n\r\nexport class SliderWheel extends React.Component<SliderWheelProps, SliderWheelState> {\r\n\r\n  static defaultProps: SliderWheelProps = {\r\n    style: {},\r\n  };\r\n\r\n  state: SliderWheelState = {\r\n    offset: 0,\r\n  };\r\n\r\n  ref = React.createRef<HTMLDivElement>();\r\n  monitoring: boolean = false;\r\n  last: number = -1;\r\n  sum: number = 0;\r\n\r\n  onPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.ref.current)\r\n      return;\r\n\r\n    const { vertical } = this.props;  \r\n\r\n    this.monitoring = true;\r\n    this.last = e.clientX;\r\n\r\n    if (vertical)\r\n      this.last = e.clientY;\r\n\r\n    this.ref.current.setPointerCapture(e.pointerId);\r\n    this.props.onWheelStart?.();\r\n  }\r\n\r\n  onPointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    const { vertical } = this.props;\r\n    let delta = e.clientX - this.last;\r\n\r\n    if (vertical)\r\n      delta = this.last - e.clientY;\r\n\r\n    if (Math.abs(delta) < 2)\r\n      return; \r\n\r\n    this.last = e.clientX;\r\n    if(vertical)\r\n      this.last = e.clientY;\r\n\r\n    let { offset } = this.state;\r\n\r\n    this.sum += delta;\r\n    const rect = this.ref.current.getBoundingClientRect();\r\n\r\n    offset += delta;\r\n    offset %= rect.width / 2;\r\n\r\n    this.props.onWheelMove?.(Math.sign(delta), this.sum / (rect.width / 2));\r\n    this.setState({ offset });\r\n  }\r\n\r\n  onPointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    if (!this.monitoring)\r\n      return;\r\n\r\n    this.monitoring = false;\r\n    this.last = 0;\r\n    this.sum = 0;\r\n    this.ref.current.releasePointerCapture(e.pointerId);\r\n  }\r\n\r\n  renderCircles = () => {\r\n    let { size } = this.props;\r\n    const circles = [];\r\n\r\n    size = size ?? 80;\r\n\r\n    for (let i = 0; i < size; i++)\r\n      circles.push(<div key={i} className=\"slider-circle\" />);\r\n\r\n    return circles;\r\n  }\r\n\r\n  render() {\r\n    const { offset } = this.state;\r\n    let { vertical, className = '', } = this.props;\r\n    const style: React.CSSProperties = { transform: `translateX(${offset}px)` };\r\n\r\n    if (vertical)\r\n      style.transform = `translateY(${offset}px)`;\r\n\r\n    className += ' color-picker-slider-wheel ';\r\n    if (vertical)\r\n      className += 'vertical';\r\n\r\n    return (\r\n      <div className={className}\r\n           onPointerMove={this.onPointerMove}\r\n           onPointerDown={this.onPointerDown}\r\n           onPointerUp={this.onPointerUp}\r\n           ref={this.ref}\r\n           style={this.props.style}>\r\n        <div className=\"circles-list\" style={style}>\r\n          {this.renderCircles()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { _api } from '../../reducers';\r\nimport { SafeImage } from '../controls';\r\nimport { SearchModal } from '../';\r\n\r\n\r\ntype Props = {\r\n  label?: string | JSX.Element;\r\n  value?: string;\r\n  type?: string;\r\n  typePath?: string;\r\n  browse?: boolean;\r\n  reset?: boolean;\r\n  onChange?: (value?: string) => void;\r\n}\r\n\r\nexport class AssetWidget extends React.Component<Props> {\r\n\r\n  static defaultProps: Props = {\r\n    reset: true,\r\n  };\r\n\r\n  onBrowse = async () => {\r\n    let { type, typePath } = this.props;\r\n    if (type.startsWith('U') || type.startsWith('F'))\r\n      type = type.substring(1);\r\n\r\n    type = type.replace('*', '');\r\n    if (typePath?.length == 0)\r\n      typePath = type;\r\n\r\n    const asset = await SearchModal.open({ placeholder: 'Search asset', types: [typePath], prefix: '/Game', count: 200 });\r\n    if (asset)\r\n      this.props.onChange?.(asset.Path);\r\n  }\r\n\r\n  render() {\r\n    const { value, label, browse, reset } = this.props;\r\n    const url = _api.assets.thumbnailUrl(value);\r\n\r\n    return (\r\n      <div className=\"asset-item\">\r\n        <div className=\"label\">\r\n          {label}\r\n        </div>\r\n        <div className=\"image\">\r\n          <SafeImage src={url}\r\n                     fallback=\"/images/assets/Asset.png\"\r\n                     alt=\"Asset\"\r\n                     className=\"box-image\" />\r\n        </div>\r\n        <div className=\"input-title\">\r\n          <input readOnly value={value} />\r\n          {browse &&\r\n            <span className=\"asset-icon\" onClick={this.onBrowse}><FontAwesomeIcon icon={['fas', 'folder']} /></span>\r\n          }\r\n        </div>\r\n        {reset &&\r\n          <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange?.()} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  label?: React.ReactNode;\r\n  options?: string[];\r\n  value?: string;\r\n\r\n  onChange?: (value?: string) => void;\r\n}\r\n\r\nexport class DropdownWidget extends React.Component<Props> {\r\n  onSelect = (value?: string) => {\r\n    this.props.onChange?.(value);\r\n  }\r\n  \r\n  render() {\r\n    const { label = '', options, value } = this.props;\r\n\r\n    return (\r\n      <div className=\"dropwdown-row\">\r\n        <div className=\"slider-row\">\r\n          <div className=\"title\">{label}</div>\r\n          <div className=\"dropdown-widget\">\r\n            <select className=\"dropdown\" value={value} onChange={e => this.onSelect(e.target.value)}>\r\n              {options?.map((option, index) =>\r\n                <option key={index} value={option}>{option}</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ICustomStackProperty, PropertyValue } from 'src/shared';\r\nimport { SafeImage } from '../controls';\r\nimport { _api } from '../../reducers';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  value?: any;\r\n\r\n  onChange?: (widget: ICustomStackProperty, value?: PropertyValue) => void;\r\n}\r\n\r\nexport class ImageSelectorWidget extends React.Component<Props> {\r\n  render() {\r\n    const { widget, value = null } = this.props;\r\n    const itemSize = { width: 260, height: 100 };\r\n\r\n    return (\r\n      <div className=\"image-dropdown-row\" style={{ minHeight: itemSize.height + 20 }}>\r\n        {widget.options?.map((option, index) =>\r\n          <SafeImage key={index}\r\n                     src={_api.assets.thumbnailUrl(option.label)}\r\n                     className={`dropdown-image ${value === option.value ? 'selected-dropdown-image' : ''}`}\r\n                     onClick={() => this.props.onChange?.(widget, option.value)}\r\n                     alt={option.value}\r\n                     label={_.startCase(_.last(widget.property.split('.')))}\r\n                     style={itemSize} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ICustomStackProperty } from 'src/shared';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { ValueInput, Slider } from '../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  label?: React.ReactNode;\r\n  min?: number;\r\n  max?: number;\r\n  proportionally?: boolean;\r\n  value?: any;\r\n  \r\n  onChange?: (widget: ICustomStackProperty, axis?: string, axisValue?: number, proportionally?: boolean, min?: number, max?: number) => any;\r\n  onPrecisionModal?: (property: string) => void;\r\n  onProportionallyToggle?: (property: string, value: string) => void;\r\n}\r\n\r\nexport class SlidersWidget extends React.Component<Props> {\r\n\r\n  render() {   \r\n    const { widget, label = '', min, max, proportionally, value } = this.props;\r\n\r\n    const propertyType = widget?.propertyType;\r\n    const properties = WidgetUtilities.getPropertyKeys(propertyType);\r\n    const precision = WidgetUtilities.getPropertyPrecision(propertyType);\r\n\r\n    const isSlider = (min !== undefined && max !== undefined);\r\n    const selectedProperties = properties.filter(property => widget.widgets?.includes(property));\r\n\r\n    return (\r\n      <div className=\"custom-sliders\">\r\n        {properties.map(property =>\r\n          <React.Fragment key={property}>\r\n            {(widget.widgets?.includes(property) || !selectedProperties.length) && \r\n              <div className=\"slider-row\">\r\n                <div className=\"title\">{label}.{property}</div>\r\n                <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={() => this.props.onPrecisionModal?.(property)} />\r\n                <ValueInput min={min}\r\n                            max={max}\r\n                            precision={precision}\r\n                            value={value?.[property]}\r\n                            onChange={value => this.props.onChange?.(widget, property, value, proportionally, min, max) || null} />\r\n                {isSlider &&\r\n                  <>\r\n                    <div className=\"limits\">{min?.toFixed(1)}</div>\r\n                    <Slider value={value?.[property] || null}\r\n                            min={min}\r\n                            max={max}\r\n                            showLabel={false}\r\n                            onChange={value => this.props.onChange?.(widget, property, value, proportionally, min, max) || null} />\r\n                    <div className=\"limits\">{max?.toFixed(1)}</div>\r\n                  </>\r\n                }\r\n              </div>\r\n            }\r\n          </React.Fragment>\r\n        )}\r\n        <FontAwesomeIcon icon={['fas', (proportionally) ? 'lock' : 'lock-open']}\r\n                         className='proportional icon'\r\n                         onClick={() => this.props.onProportionallyToggle(widget.property, proportionally ? '0' : '1')} />\r\n        <FontAwesomeIcon icon={['fas', 'undo']} className=\"reset-sliders\" onClick={() => this.props.onChange?.(widget)} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { Slider, ValueInput } from '../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { PropertyValue } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  value?: any;\r\n  label?: React.ReactNode;\r\n  min?: number;\r\n  max?: number;\r\n  precision?: number\r\n\r\n  onPrecisionModal?: () => void;\r\n  onChange?: (value?: PropertyValue) => void;\r\n}\r\n\r\nexport class SliderWidget extends React.Component<Props> {\r\n  render() {\r\n    const { value, label = '', min, max, precision } = this.props;\r\n    const isRange = (min !== undefined && max !== undefined);\r\n\r\n    return (\r\n      <div className=\"slider-row\">\r\n        <div className=\"title\">{label}</div>\r\n        <FontAwesomeIcon icon={['fas', 'expand']} className=\"expand-icon\" onClick={this.props?.onPrecisionModal} />\r\n        <ValueInput min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    value={value}\r\n                    onChange={this.props.onChange} />\r\n\r\n        {isRange &&\r\n          <>\r\n            <div className=\"limits\">{min.toFixed(1)}</div>\r\n            <Slider value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    precision={precision}\r\n                    showLabel={false}\r\n                    onChange={this.props.onChange} />\r\n            <div className=\"limits\">{max.toFixed(1)}</div>\r\n          </>\r\n        }\r\n        <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onChange()} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  options: { value: any, label?: string } [];\r\n  prefix?: string;\r\n  value?: any;\r\n\r\n  onSelect: (value: any) => void;\r\n};\r\n\r\nexport class TabWidget extends React.Component<Props> {\r\n\r\n  render() {\r\n    const { value, prefix, options, onSelect } = this.props;\r\n\r\n    return (\r\n      <div className=\"tab-widget-wrapper\">\r\n        {options.map((option, index) =>\r\n          <button key={index}\r\n                  onClick={onSelect.bind(this, option.value)}\r\n                  data-prefix={prefix}\r\n                  data-value={option.value}\r\n                  className={`btn ${value === option.value ? 'selected' : ''}`}>\r\n            {option.label ?? option.value}\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ICustomStackProperty, PropertyValue } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  checked?: boolean;\r\n  label?: React.ReactNode;\r\n\r\n  onChange?: (widget: ICustomStackProperty, value?: PropertyValue) => void;\r\n}\r\n\r\nexport class ToggleWidget extends React.Component<Props> {\r\n  render() {\r\n    const { widget, checked = false, label = '' } = this.props;\r\n\r\n    let className = 'toggle ';\r\n    if (checked)\r\n      className += 'checked ';\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"title\">{label}</div>\r\n        <div className=\"switch\" onClick={() => this.props.onChange?.(widget, !checked)} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ICustomStackProperty, WidgetTypes } from 'src/shared';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { ValueInput } from '../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  widget: ICustomStackProperty;\r\n  label?: React.ReactNode;\r\n  value?: any;\r\n  vector?: ICustomStackProperty;\r\n  min?: number;\r\n  max?: number;\r\n  proportionally?: boolean;\r\n\r\n  onAxisChange?: (widget: ICustomStackProperty, axis: string, axisValue: number, proportionally?: boolean, min?: number, max?: number) => void;\r\n  onToggleWidgetLock?: (key: string) => void;\r\n  onToggleVectorDrawer?: (vector: ICustomStackProperty) => void;\r\n  onSetVector?: (vector: ICustomStackProperty) => void;\r\n  onProportionallyToggle?: (property: string, value: string) => void;  \r\n}\r\n\r\nconst modes = [WidgetTypes.Joystick, WidgetTypes.Dial, WidgetTypes.Sliders];\r\n\r\nexport class VectorWidget extends React.Component<Props> {\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { widget, vector } = this.props;\r\n\r\n    if (widget !== prevProps.widget && !!vector)\r\n      this.props.onSetVector({ ...widget });\r\n  }\r\n\r\n  onToggleVectorDrawer = (e: React.MouseEvent, widget: ICustomStackProperty, key: string) => {\r\n    e.stopPropagation();\r\n    this.props.onToggleVectorDrawer({ ...widget });\r\n  }\r\n  \r\n  render() {\r\n    const { widget, label = '', value, vector, min, max, proportionally } = this.props;\r\n    const key = widget.id;\r\n    const keys = WidgetUtilities.getPropertyKeys(widget.propertyType);\r\n    const widgets = _.compact(modes.map(k => widget.widgets?.find(w => w === k))) || [];\r\n\r\n    return (\r\n      <div className=\"slider-row joystick-row\">\r\n        <div className=\"title\">{label}</div>\r\n\r\n        {keys.map(property =>\r\n          <div key={`${property}${key}`} className=\"value-info\">\r\n            <div className={`axis-title ${property}-axis`}>{property}:</div>\r\n            <ValueInput min={min}\r\n                        max={max}\r\n                        precision={WidgetUtilities.getPropertyPrecision(widget.propertyType)}\r\n                        value={value?.[property]}\r\n                        onChange={value => this.props.onAxisChange?.(widget, property, value, proportionally, min, max)} />\r\n          </div>\r\n        )}\r\n        { }\r\n        <FontAwesomeIcon icon={['fas', (proportionally) ? 'lock' : 'lock-open' ]}\r\n                         className={`proportional ${vector?.id === key ? 'selected' : ''}`}\r\n                         onClick={() => this.props.onProportionallyToggle(widget.property, proportionally ? '0' : '1')} />\r\n\r\n        {widget.propertyType && widgets.length > 0 &&\r\n          <FontAwesomeIcon icon={['fas', 'gamepad']}\r\n                           className={`gamepad ${vector?.id === key ? 'selected' : ''}`}\r\n                           onClick={e => this.onToggleVectorDrawer?.(e, widget, key)} />\r\n        }\r\n\r\n        <div className=\"control-buttons\">\r\n          <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.props.onAxisChange?.(widget, undefined, undefined)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ntype Props = {\r\n  text: string;\r\n  close: (isConfirmed?: boolean) => void;\r\n};\r\n\r\nexport class AlertModal extends React.Component<Props> {\r\n\r\n  componentDidMount() {    \r\n    document.addEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  onKeyPress = (e) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  private static pending: (isConfirmed?: boolean) => void;\r\n\r\n  public static show(text: string): Promise<boolean> {\r\n    AlertModal.pending?.(undefined);\r\n    AlertModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<boolean>(resolve => {\r\n      AlertModal.pending = resolve;\r\n\r\n      ReactDOM.render(<AlertModal text={text} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  onOK = () => {\r\n    this.props.close(true);\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.close(false);\r\n  }\r\n\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onClick={this.onCancel}>\r\n        <div className=\"alert-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <div className=\"alert-text\">{text}</div>\r\n          <div className=\"footer\">\r\n            <button className=\"btn btn-secondary\" onClick={this.onCancel}>Cancel</button>\r\n            <button className=\"btn btn-secondary\" onClick={this.onOK}>Ok</button>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fas, IconName } from '@fortawesome/free-solid-svg-icons';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  selected?: string;\r\n  close: (name?: IconName) => void;\r\n};\r\n\r\ntype State = {\r\n  filter: string;\r\n  filterText: string;\r\n  selected?: IconName;\r\n};\r\n\r\nexport class IconModal extends React.Component<Props, State> {\r\n  state: State = {\r\n    filter: '',\r\n    filterText: '',\r\n  };\r\n\r\n  componentDidMount() {    \r\n    document.addEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  onKeyPress = (e) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  private static pending: (name?: IconName ) => void;\r\n\r\n  public static show(selected: string): Promise<IconName> {\r\n    IconModal.pending?.(undefined);\r\n    IconModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<IconName>(resolve => {\r\n      IconModal.pending = resolve;\r\n\r\n      ReactDOM.render(<IconModal selected={selected} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  onFilterTextChange = (filterText: string) => {\r\n    this.setState({ filterText });\r\n    this.onFilterChangeDelayed(filterText);\r\n  }\r\n\r\n  onFilterChange = (filter: string) => {\r\n    filter = filter.toLocaleLowerCase();\r\n    this.setState({ filter });\r\n  }\r\n\r\n  onFilterChangeDelayed = _.debounce(this.onFilterChange, 250);\r\n\r\n  onResetFilter = () => {\r\n    this.setState({ filterText: '', filter: '' });\r\n  }\r\n\r\n  onSelect = (selected: IconName) => {\r\n    this.setState({ selected });\r\n  }\r\n\r\n  onOK = () => {\r\n    const { selected } = this.state;\r\n    if (selected)\r\n      this.props.close(selected);\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.close();\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        return this.onOK();\r\n\r\n      case 'Escape':\r\n        return this.onCancel();\r\n    }\r\n  }\r\n\r\n  renderIcons = () => {\r\n    const { filter } = this.state;\r\n    const selected = this.state.selected || this.props.selected;\r\n\r\n    let keys = Object.keys(fas);\r\n    if (filter)\r\n      keys = keys.filter(key => fas[key].iconName.includes(filter));\r\n    \r\n    return (\r\n      <div className=\"icon-wrapper\">\r\n        {keys.map(key => (\r\n          <div key={fas[key].iconName} className={`icon-block ${fas[key].iconName === selected ? 'selected' : ''}`}>\r\n            <FontAwesomeIcon className=\"icon\" icon={['fas', fas[key].iconName]} onClick={() => this.onSelect(fas[key].iconName)} />\r\n            <div className=\"icon-text\">{fas[key].iconName}</div>\r\n          </div>)\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { filterText, selected } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onClick={this.onCancel}>\r\n        <div className=\"icon-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <div className=\"search-wrapper search-position\">\r\n            <FontAwesomeIcon icon={['fas', 'search']} />\r\n            <input value={filterText}\r\n                    className=\"icon-search search-input\"\r\n                    placeholder=\"Search icon\" \r\n                    onChange={e => this.onFilterTextChange(e.target.value)}\r\n                    autoFocus={true}\r\n                    onKeyDown={this.onKeyDown}\r\n                    autoComplete=\"off\" />\r\n            {filterText &&\r\n              <FontAwesomeIcon icon={['fas', 'times-circle']} onClick={this.onResetFilter} />\r\n            }\r\n          </div>\r\n          {this.renderIcons()}\r\n          <div className=\"btn-wrapper\">\r\n            <button className=\"btn btn-secondary\" onClick={this.onCancel}>Cancel</button>\r\n            <button className={`btn btn-secondary ${!selected && 'disabled'}`} disabled={!selected} onClick={this.onOK}>Apply</button>\r\n          </div> \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { ValueInput, SliderWheel, Slider, ColorPicker, ColorPickerParts, ColorMode } from '../controls';\r\nimport { ColorProperty, IHsvColor, PropertyType, PropertyValue, VectorProperty, WidgetType, WidgetTypes } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport { AlertModal } from './AlertModal';\r\n\r\n\r\ntype Props = {\r\n  widget?: WidgetType;\r\n  property: string;\r\n  meta?: Partial<{ type: PropertyType, min: number, max: number, precision: number, alpha: boolean }>;\r\n  type?: PropertyType;\r\n  label?: string | JSX.Element;\r\n  value?: any;\r\n\r\n  onClose?: () => void;\r\n  onChange?: (value?: PropertyValue) => void; \r\n  onMetadataChange?: (key: string, value: string) => void;\r\n};\r\n\r\ntype State = {\r\n  step: number;\r\n  min: number;\r\n  max: number;\r\n  mode: ColorMode;\r\n  negative: boolean;\r\n};\r\n\r\nexport class PrecisionModal extends React.Component<Props, State> {\r\n  state: State = {\r\n    step: 1,\r\n    min: 0.01,\r\n    max: 10,\r\n    mode: ColorMode.Rgb,\r\n    negative: false,\r\n  }\r\n\r\n  value: number = 0;\r\n  originalValue: number = null;\r\n  hsv: IHsvColor = { h: 0, s: 0, v: 0 };\r\n  \r\n  componentDidMount() {\r\n    const { widget, value } = this.props;\r\n\r\n    document.addEventListener('keydown', this.onKeyPress);\r\n\r\n    const loaded: any = { max: 10 };\r\n    if (widget === WidgetTypes.ColorPicker)\r\n      loaded.max = 1;\r\n\r\n    this.originalValue = value;\r\n    \r\n    try {\r\n      const sensitivity = JSON.parse(localStorage.getItem(this.props.property));\r\n\r\n      for (const property in this.state) {\r\n        if (sensitivity[property])\r\n          loaded[property] = sensitivity[property];\r\n      }\r\n    } catch {\r\n    }\r\n\r\n    this.setState(loaded);\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  normalizeValue = (value: number, min: number, max: number) => {\r\n    return Math.max(min, Math.min(value, max));\r\n  }\r\n\r\n  onKeyPress = (e: KeyboardEvent) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.onClose();\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Escape')\r\n      return this.onCancel();\r\n  }\r\n\r\n  onChange = (factor: number) => {\r\n    const { step } = this.state;\r\n    let { value, meta } = this.props;\r\n\r\n    value += step * factor;\r\n    if (meta?.min !== undefined)\r\n      value = Math.max(meta.min, value);\r\n    \r\n    if (meta?.max !== undefined)\r\n      value = Math.min(value, meta.max);\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onStepChange = (step: number) => {\r\n    const { min, max } = this.state;\r\n\r\n    step = this.normalizeValue(step, min, max);\r\n    this.onSetMeta('step', step);\r\n  }\r\n\r\n  onRgbValueInputChange = (key: string, v: number) => {\r\n    const { value } = this.props;\r\n    const { negative } = this.state;\r\n    \r\n    if (!value)\r\n      return;\r\n\r\n    if (!negative)\r\n      v = Math.max(0, v);\r\n\r\n    value[key] = v;\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onHsvValueInputChange = (key: string, v: number) => {\r\n    const { type } = this.props;\r\n    let hsv = this.getHsvColor();\r\n\r\n    hsv[key] = v;\r\n    hsv.h /= 360;\r\n\r\n    if (type === PropertyType.Color)\r\n      hsv = { ...hsv, s: this.normalizeValue(hsv.s, 0, 1), v: this.normalizeValue(hsv.v, 0, 1) };\r\n\r\n    const rgb = WidgetUtilities.hsv2rgb(hsv);\r\n\r\n    let max = 1;\r\n    let color = rgb as ColorProperty | VectorProperty;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n    }\r\n\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onWheelStart = () => {\r\n    const { value } = this.props;\r\n    this.value = value;\r\n  }\r\n\r\n  onHsvWheelStart = () => {\r\n    const hsv = this.getHsvColor();\r\n\r\n    this.hsv = hsv;\r\n  }\r\n\r\n  onWheelMove = (sign: number, offset: number) => {\r\n    const { meta } = this.props;\r\n    const { step } = this.state;\r\n\r\n    let value = this.value + step * offset;\r\n    if (meta?.min !== undefined)\r\n      value = Math.max(meta.min, value);\r\n    \r\n    if (meta?.max !== undefined)\r\n      value = Math.min(value, meta.max);\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onRgbWheelMove = (key: string, sign: number) => {\r\n    const { type, value } = this.props;\r\n    const { negative } = this.state;\r\n    const step = sign * (type === PropertyType.Color ? 10 : 0.01) * this.state.step;\r\n\r\n    value[key] += step;\r\n\r\n    if (type === PropertyType.Color)\r\n      value[key] = this.normalizeValue(value[key], 0, 255);\r\n\r\n    if (!negative)\r\n      value[key] = Math.max(0, value[key]);\r\n\r\n    this.props.onChange(value);\r\n  }\r\n\r\n  onHsvWheelMove = (key: string, sign: number, step: number, min?: number, max?: number) => {\r\n    const { type } = this.props;\r\n\r\n    step *= sign * this.state.step;\r\n\r\n    this.hsv[key] += step;\r\n    if (min !== undefined)\r\n      this.hsv[key] = Math.max(min, this.hsv[key]);\r\n    if (max !== undefined)\r\n      this.hsv[key] = Math.min(this.hsv[key], max);\r\n\r\n    let offset = 0;\r\n    if (this.hsv.h < 0)\r\n      offset = 360;\r\n\r\n    if (type === PropertyType.Color)\r\n      this.hsv = { ...this.hsv, s: this.normalizeValue(this.hsv.s, 0, 1), v: this.normalizeValue(this.hsv.v, 0, 1) };\r\n\r\n    this.hsv = { ...this.hsv, h: offset + this.hsv.h, s: this.normalizeValue(this.hsv.s, 0, 1) };\r\n    const hsv = { ...this.hsv, h: (this.hsv.h / 360) };\r\n    const color = this.hsvToColor(hsv);\r\n\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  onRgbStepChange = (factor: number, key: string) => {\r\n    const { value, type } = this.props;\r\n    const { negative } = this.state;\r\n\r\n    value[key] += factor;\r\n\r\n    if (type === PropertyType.Color)\r\n      value[key] = this.normalizeValue(value[key], 0, 255);\r\n\r\n    if (!negative)\r\n      value[key] = Math.max(0, value[key]);\r\n\r\n    this.props.onChange?.(value);\r\n  }\r\n\r\n  onHsvStepChange = (factor: number, key: string, min?: number, max?: number) => {\r\n    let hsv = this.getHsvColor();\r\n    let offset = 0;\r\n\r\n    hsv[key] += factor;\r\n    if (min !== undefined)\r\n      this.hsv[key] = Math.max(min, this.hsv[key]);\r\n    if (max !== undefined)\r\n      this.hsv[key] = Math.min(this.hsv[key], max);\r\n\r\n    if (hsv.h < 0)\r\n      offset = 1;\r\n\r\n    if (this.props.type === PropertyType.Color)\r\n      hsv.v = this.normalizeValue(hsv.v, 1, 0);\r\n\r\n    hsv = { ...hsv, h: offset + hsv.h / 360, s: this.normalizeValue(hsv.s, 1, 0) };\r\n\r\n    const color = this.hsvToColor(hsv);\r\n    this.props.onChange?.(color);\r\n  }\r\n\r\n  getHsvColor = () => {\r\n    const { value, type } = this.props;\r\n    let rgb = value as ColorProperty;\r\n\r\n    if (type === PropertyType.Vector4 || type === PropertyType.LinearColor) {\r\n      let max = 0;\r\n\r\n      for (const key in value)\r\n        if (value[key] > max)\r\n          max = value[key];\r\n\r\n      rgb = WidgetUtilities.colorToRgb(value, max);\r\n    }\r\n\r\n    return this.getHsvValue(rgb);\r\n  }\r\n\r\n  hsvToColor = (hsv: IHsvColor) => {\r\n    const { type } = this.props;\r\n    const rgb = WidgetUtilities.hsv2rgb(hsv);\r\n\r\n    let max = 1;\r\n    let color = rgb as ColorProperty | VectorProperty;\r\n\r\n    switch (type) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(rgb, max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(rgb, max, false);\r\n        break;\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  getInputKey = (type: keyof ColorProperty) => {\r\n    let key = type as keyof VectorProperty | keyof ColorProperty;\r\n\r\n    switch (this.props.type) {\r\n      case PropertyType.Vector:\r\n      case PropertyType.Vector4:\r\n        switch (type) {\r\n          case 'R':\r\n            key = 'X';\r\n            break;\r\n\r\n          case 'G':\r\n            key = 'Y';\r\n            break;\r\n\r\n          case 'B':\r\n            key = 'Z';\r\n            break;\r\n        }\r\n        break;\r\n    }\r\n\r\n    return key;\r\n  }\r\n\r\n  getHsvValue = (rgb: ColorProperty): IHsvColor => {\r\n    const { type } = this.props;\r\n    const value = { ...this.props.value };\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    delete value.A;\r\n    delete value.W;\r\n    const values = Object.values(value) as number[];\r\n\r\n    if (type !== PropertyType.Color)\r\n      hsv.v = Math.max(0, ...values);\r\n\r\n    return { ...hsv, h: hsv.h * 360, s: Math.max(0.0001, hsv.s) };\r\n  }\r\n\r\n  renderRgbInput = (type: keyof ColorProperty) => {\r\n    const { value } = this.props;\r\n    const key = this.getInputKey(type);\r\n    let precision = 3;\r\n    let min: number;\r\n    let max: number;\r\n    let { step } = this.state;\r\n\r\n    if (this.props.type === PropertyType.Color) {\r\n      precision = 0;\r\n      min = 0;\r\n      max = 255;\r\n      step *= 50;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ValueInput value={value?.[key]}\r\n                    draggable={false}\r\n                    precision={precision}\r\n                    min={min}\r\n                    max={max}\r\n                    onChange={v => this.onRgbValueInputChange(key, v)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-left']} \r\n                         className=\"precision-icon\"\r\n                         onClick={() => this.onRgbStepChange(-step, key)} />\r\n        <SliderWheel onWheelMove={sign => this.onRgbWheelMove(key, sign)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-right']} \r\n                         className=\"precision-icon\"\r\n                         onClick={() => this.onRgbStepChange(step, key)} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderHsvInput = (value: number, key: string, multiplier: number = 0.1, min?: number, max?: number) => {\r\n    const step = multiplier * this.state.step;\r\n    let precision = 3;\r\n    if (this.props.type === PropertyType.Color) {\r\n      precision = (key === 'h' ? 0 : 2);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"slider-label\">{key.toUpperCase()}:</div>\r\n        <ValueInput value={value}\r\n                    min={min}\r\n                    max={max}\r\n                    draggable={false}\r\n                    precision={precision}\r\n                    onChange={v => this.onHsvValueInputChange(key, v)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-left']} className=\"precision-icon\" onClick={() => this.onHsvStepChange(-step, key, min, max)} />\r\n        <SliderWheel onWheelStart={this.onHsvWheelStart} onWheelMove={sign => this.onHsvWheelMove(key, sign, step, min, max)} />\r\n        <FontAwesomeIcon icon={['fas', 'angle-right']} className=\"precision-icon\" onClick={() => this.onHsvStepChange(step, key, min, max)} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderMinMaxSlider = () => {\r\n    const { meta, value } = this.props;\r\n\r\n    if (meta?.min === undefined || meta?.max === undefined)\r\n      return null;\r\n\r\n    return (\r\n      <div className=\"row top\">\r\n        <ValueInput value={meta.min}\r\n                    onChange={value => this.props.onMetadataChange('Min', String(value))} />\r\n        <Slider value={value}\r\n                min={meta?.min}\r\n                max={meta?.max}\r\n                onChange={value => this.props.onChange(value)}\r\n                precision={meta?.precision}\r\n                showLabel={false} />\r\n        <ValueInput value={meta.max}\r\n                    onChange={value => this.props.onMetadataChange('Max', String(value))} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSetMeta = (property: keyof State, value: any) => {\r\n    const update: any = {};\r\n    update[property] = value;\r\n    this.setState(update, () => localStorage.setItem(this.props.property, JSON.stringify(this.state)));\r\n  }\r\n\r\n  onRevertChanges = async () => {\r\n    if (!await AlertModal.show('Revert changes?'))\r\n      return;\r\n\r\n    this.props.onChange(this.originalValue);\r\n  }\r\n\r\n  renderNumberPrecicionModal = () => {\r\n    const { meta, value } = this.props;\r\n    const { step, min, max } = this.state;\r\n\r\n    const stepSize = Math.abs(max - min) * 0.1;\r\n    const nextStep = step + stepSize;\r\n    const backStep = step - stepSize <= stepSize ? step / 2 : step - stepSize;\r\n\r\n    const isDisabled = _.isEqual(this.originalValue, value);\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        {this.renderMinMaxSlider()}\r\n        <div className=\"row\">\r\n          <FontAwesomeIcon icon={['fas', 'backward']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(-3)} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-double-left']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(-1)} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-left']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(-0.2)} />\r\n          <ValueInput min={meta?.min}\r\n                      max={meta?.max}\r\n                      precision={meta?.precision}\r\n                      value={value}\r\n                      onChange={this.props.onChange} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-right']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(0.2)} />\r\n          <FontAwesomeIcon icon={['fas', 'angle-double-right']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(1)} />\r\n          <FontAwesomeIcon icon={['fas', 'forward']}\r\n                           className=\"precision-icon\"\r\n                           onClick={() => this.onChange(3)} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <SliderWheel onWheelStart={this.onWheelStart} onWheelMove={this.onWheelMove} />\r\n        </div>\r\n        <div className=\"sensitivity-block\">\r\n          <div className=\"step-label\">Sensitivity</div>\r\n          <div className=\"row m-0\">\r\n            <Slider value={step}\r\n                    min={min}\r\n                    max={max}\r\n                    precision={meta?.precision}\r\n                    showLabel={false}\r\n                    onChange={step => this.onSetMeta('step', step)} />\r\n          </div>\r\n          <div className=\"row space\">\r\n            <div className=\"limits\">\r\n              Min\r\n            <ValueInput value={min}\r\n                        draggable={false}\r\n                        min={0.01}\r\n                        onChange={min => this.onSetMeta('min', Math.min(min, max))} />\r\n            </div>\r\n            <div className=\"step-input\">\r\n              <FontAwesomeIcon icon={['fas', 'backward']} className=\"icon\" onClick={() => this.onStepChange(backStep)} />\r\n              <ValueInput value={step}\r\n                          draggable={false}\r\n                          onChange={this.onStepChange} />\r\n              <FontAwesomeIcon icon={['fas', 'forward']} className=\"icon\" onClick={() => this.onStepChange(nextStep)} />\r\n            </div>\r\n            <div className=\"limits\">\r\n              Max\r\n            <ValueInput value={max}\r\n                        min={0.01}\r\n                        draggable={false}\r\n                        onChange={max => this.onSetMeta('max', Math.max(min, max))} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn btn-revert\"\r\n                disabled={isDisabled}\r\n                onClick={this.onRevertChanges}>Revert Changes</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderColorPickerModal = () => {\r\n    const { mode, step, negative } = this.state;\r\n    const { value, type, meta } = this.props;\r\n    const hsv = this.getHsvColor();\r\n\r\n    let rgbBtnClassName = 'btn ';\r\n    let hsvBtnClassName = 'btn ';\r\n\r\n    const isDisabled = _.isEqual(this.originalValue, value);\r\n\r\n    switch (mode) {\r\n      case ColorMode.Rgb:\r\n        rgbBtnClassName += 'btn-primary';\r\n        hsvBtnClassName += 'btn-secondary';\r\n        break;\r\n\r\n      case ColorMode.Hsv:\r\n        rgbBtnClassName += 'btn-secondary';\r\n        hsvBtnClassName += 'btn-primary';\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"main color-picker\">\r\n        <div className=\"row m-0\">\r\n          {type !== PropertyType.Color &&\r\n            <label className=\"toggle-checkbox\">\r\n              <input type=\"checkbox\" checked={negative} onChange={e => this.onSetMeta('negative', e.target.checked)} />\r\n              <span className=\"toggle-label\">Allow Negative Values</span>\r\n            </label>\r\n          }\r\n          <div className=\"btn-group\">\r\n            <button className={rgbBtnClassName}\r\n                    onClick={() => this.setState({ mode: ColorMode.Rgb })}>\r\n              <FontAwesomeIcon icon={['fas', 'circle']} />\r\n            </button>\r\n            <button className={hsvBtnClassName}\r\n                    onClick={() => this.setState({ mode: ColorMode.Hsv })}>\r\n              <FontAwesomeIcon icon={['fas', 'square']} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row start space\">\r\n          <div className=\"slider-wheel-rows\">\r\n            <div className=\"slider-wheel-row\">\r\n              <div className=\"slider-label\">R:</div>\r\n              {this.renderRgbInput('R')}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              <div className=\"slider-label\">G:</div>\r\n              {this.renderRgbInput('G')}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              <div className=\"slider-label\">B:</div>\r\n              {this.renderRgbInput('B')}\r\n            </div>\r\n            {!!meta?.alpha &&\r\n              <div className=\"slider-wheel-row\">\r\n                <div className=\"slider-label\">A:</div>\r\n                {this.renderRgbInput('A')}\r\n              </div>}\r\n            <div className=\"slider-wheel-row\">\r\n              {this.renderHsvInput(hsv?.h, 'h', 3)}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              {this.renderHsvInput(hsv?.s, 's', 0.1, 0.0001, 1)}\r\n            </div>\r\n            <div className=\"slider-wheel-row\">\r\n              {this.renderHsvInput(hsv?.v, 'v', 0.1, 0.0001)}\r\n            </div>\r\n            <div className=\"sensitivity-slider\">\r\n              <div className=\"step-label\">Sensitivity</div>\r\n              <div className=\"row m-0\">\r\n                <Slider value={step}\r\n                        min={0.1}\r\n                        max={1}\r\n                        showLabel={false}\r\n                        onChange={step => this.onSetMeta('step', step)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"color-container\">\r\n            <ColorPicker value={value}\r\n                         parts={[ColorPickerParts.Circle]}\r\n                         type={type}\r\n                         widget={WidgetTypes.ColorPicker}\r\n                         mode={mode}\r\n                         alpha={!!meta?.alpha}\r\n                         onChange={this.props.onChange} />\r\n            <button className=\"btn btn-revert\"\r\n                    disabled={isDisabled}\r\n                    onClick={this.onRevertChanges}>Revert Changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPrecisionModalContent = () => {\r\n    const { widget } = this.props;\r\n\r\n    switch (widget) {\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n        return this.renderColorPickerModal();\r\n\r\n      default:\r\n        return this.renderNumberPrecicionModal();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { label } = this.props;\r\n\r\n    return (\r\n      <div className=\"fullscreen precision\" onClick={this.onCancel}>\r\n        <div className=\"precision-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <div className=\"label\">\r\n            <p>{label}</p>\r\n          </div>\r\n          {this.renderPrecisionModalContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\ntype Props = {\r\n  name: string;\r\n  placeholder: string;\r\n  close: (name?: string) => void;\r\n};\r\n\r\ntype State = {\r\n  name: string;\r\n};\r\n\r\nexport class RenameModal extends React.Component<Props, State> {\r\n  state: State = {\r\n    name: '',\r\n  };\r\n\r\n  componentDidMount() {    \r\n    document.addEventListener('keydown', this.onKeyPress);\r\n    \r\n    const { name } = this.props;\r\n    this.setState({ name });\r\n  }\r\n\r\n  componentWillUnmount() {    \r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  onKeyPress = (e) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  private static pending: (name?: string) => void;\r\n\r\n  public static rename(name: string, placeholder: string): Promise<string> {\r\n    RenameModal.pending?.(undefined);\r\n    RenameModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<string>(resolve => {\r\n      RenameModal.pending = resolve;\r\n\r\n      ReactDOM.render(<RenameModal name={name} placeholder={placeholder} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const name = e.target.value;\r\n    this.setState({ name });\r\n  }\r\n\r\n  onOK = () => {\r\n    const { name } = this.state;\r\n    this.props.close(name);\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.close();\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        return this.onOK();\r\n\r\n      case 'Escape':\r\n        return this.onCancel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { close, placeholder } = this.props;\r\n    const { name } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onPointerDown={this.onCancel}>\r\n        <div className=\"rename-modal\" onPointerDown={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <input value={name ?? ''}\r\n                  placeholder={placeholder}\r\n                  onChange={this.onChange}\r\n                  autoFocus={true}\r\n                  onKeyDown={this.onKeyDown}\r\n                  autoComplete=\"off\"\r\n                  dir=\"auto\" />\r\n          <div className=\"buttons-wrapper\">\r\n            <button className=\"btn btn-secondary\" onClick={this.onCancel}>Cancel</button>\r\n            <button className=\"btn btn-secondary\" onClick={() => close(name)}>Rename</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { IAsset } from 'src/shared';\r\nimport { _api } from '../../reducers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { SafeImage } from '../controls';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  placeholder?: string;\r\n  types?: string[];\r\n  prefix?: string;\r\n  count?: number;\r\n  fallback?: string;\r\n\r\n  close: (asset?: IAsset) => void;\r\n};\r\n\r\ntype State = {\r\n  search: string;\r\n  assets: IAsset[];\r\n  loading: boolean;\r\n};\r\n\r\nexport class SearchModal extends React.Component<Props, State> {\r\n  state: State = {\r\n    search: '',\r\n    assets: [],\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.onKeyPress);\r\n    this.fetchAssets();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.onKeyPress);\r\n  }\r\n\r\n  fetchAssets = async () => {\r\n    const { search } = this.state;\r\n    const { types, prefix, count } = this.props;\r\n\r\n    this.setState({ loading: true });\r\n    \r\n    const assets = await _api.assets.search(search, types, prefix, {}, count);\r\n    this.setState({ assets, loading: false });\r\n  }\r\n\r\n  fetchAssetsDebounced = _.debounce(this.fetchAssets, 200);\r\n\r\n  onKeyPress = (e) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n\r\n  private static pending: (asset?: IAsset) => void;\r\n\r\n  public static open(props: Partial<Props>): Promise<IAsset> {\r\n    SearchModal.pending?.(undefined);\r\n    SearchModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<IAsset>(resolve => {\r\n      SearchModal.pending = resolve;\r\n      ReactDOM.render(<SearchModal {...props} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  onOK = () => {    \r\n    this.props.close();\r\n  }\r\n\r\n  onCancel = () => {\r\n    this.props.close();\r\n  }\r\n\r\n  onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        return this.onOK();\r\n\r\n      case 'Escape':\r\n        return this.onCancel();\r\n    }\r\n  }\r\n\r\n  onSearch = (search: string) => {\r\n    this.setState({ search });\r\n    this.fetchAssetsDebounced();\r\n  }\r\n\r\n  renderAssetItem = (asset: IAsset, key: number) => {\r\n    const { fallback } = this.props;\r\n    const url = _api.assets.thumbnailUrl(asset.Path);\r\n\r\n    return (\r\n      <div className=\"search-item\" key={key} onClick={() => this.props.close(asset)}>\r\n        <div className=\"image\">\r\n        <SafeImage src={url} \r\n                   fallback={fallback ?? \"/images/assets/Asset.png\"}\r\n                   alt={asset.Name}\r\n                   className=\"box-image\" />\r\n        </div>\r\n        <div className=\"title\" title={asset.Name}>\r\n          {asset.Name}\r\n        </div>\r\n        <div className=\"path\" title={asset.Path}>\r\n          {asset.Path}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { placeholder } = this.props;\r\n    const { search, assets, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onPointerDown={this.onCancel}>\r\n        <div className=\"search-modal\" onPointerDown={e => e.stopPropagation()}>\r\n          <div className=\"close-modal\" onClick={this.onCancel}>\r\n            <FontAwesomeIcon icon={['fas', 'times']} />\r\n          </div>\r\n          <div className=\"search-wrapper\">\r\n            <FontAwesomeIcon icon={['fas', 'search']} />\r\n            <input value={search}\r\n                   className=\"icon-search search-input\"\r\n                   placeholder={placeholder}\r\n                   onChange={e => this.onSearch(e.target.value)}\r\n                   autoFocus={true}\r\n                   autoComplete=\"off\" />\r\n            {search && <FontAwesomeIcon icon={['fas', 'times-circle']}\r\n                                        className=\"reset-search-icon\"\r\n                                        onClick={() => this.setState({ search: '' })} />}\r\n          </div>\r\n          <div className=\"search-content\">\r\n            {loading &&\r\n              <div className=\"content-placeholder\">\r\n                Searching\r\n                <FontAwesomeIcon icon={['fas', 'sync-alt']}\r\n                                 spin\r\n                                 className=\"loader-icon\" />\r\n              </div>}\r\n\r\n            {!loading && !assets.length &&\r\n              <div className=\"content-placeholder\">\r\n                No Data\r\n              </div>}\r\n\r\n            {assets.map(this.renderAssetItem)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { _api, ReduxState } from 'src/reducers';\r\nimport { ColorProperty, ICustomStackProperty, ICustomStackTabs, ICustomStackWidget, IPanel, IPanelType, IPreset,\r\n        IPayload, PropertyType, PropertyValue, VectorProperty, WidgetTypes, IExposedProperty, IExposedFunction, IColorPickerList, ICustomStackListItem } from 'src/shared';\r\nimport { ColorPicker, ColorPickerList, Button, Text, VectorDrawer, Dial, JoysticksWrapper, DialMode, DialsWrapper } from './controls';\r\nimport { PrecisionModal } from '../components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { DraggableWidget, DroppableWidget, VirtualList } from '.';\r\nimport * as Widgets from './Widgets';\r\nimport { WidgetUtilities } from '../utilities';\r\nimport _ from 'lodash';\r\nimport { AlertModal } from './modals';\r\n\r\n\r\ntype PropsFromState = Partial<{\r\n  payload: IPayload;\r\n  preset: IPreset;\r\n}>;\r\n\r\ntype Props = {\r\n  editable: boolean;\r\n  visible?: boolean;\r\n  panels: IPanel[];\r\n  tabKey: string;\r\n  dragging: string;\r\n  droppable: string;\r\n  selected: string;\r\n  hoverTab: string;\r\n  vector: ICustomStackProperty;\r\n\r\n  //IB: Added prop to pass downstream to buttons\r\n  agoraUserID: string;\r\n  // IB: End\r\n\r\n  onSelected: (selected: string) => void;\r\n  onSetVectorDrawer: (vector?: ICustomStackProperty) => void;\r\n  getDroppableId: (id: string, path: string, accept: string[], type: string) => string;\r\n};\r\n\r\ninterface IPanelTemplate {\r\n  matching: Record<string, string>;\r\n  selected?: string;\r\n}\r\n\r\ntype State = {\r\n  selection: Record<string, string>;\r\n  draggingId: string;\r\n  templates: Record<string, IPanelTemplate>;\r\n\r\n  precisionModal?: { widget: ICustomStackProperty, property?: string };\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxState, props: Props): PropsFromState => ({\r\n  payload: state.api.payload,\r\n  preset: state.api.presets[state.api.preset],\r\n});\r\n\r\nconst tempId = 'TEMP_ID';\r\n\r\n@(connect(mapStateToProps) as any)\r\nexport class Stack extends React.Component<Props & PropsFromState, State> {\r\n\r\n  state: State = {\r\n    selection: {},\r\n    draggingId: null,\r\n    templates: {},\r\n  };\r\n\r\n  dropIndex = -1;\r\n  root = null;  \r\n  scrollY = null;\r\n  isIos = false;\r\n\r\n  componentDidMount() {\r\n    this.root = document.querySelector('.droppable-root') as any;\r\n    this.isIos = /iPad|iPhone|iPod/.test(navigator.platform);\r\n\r\n    this.root.ontouchmove = (e) => {\r\n      const touches = e.touches;\r\n      const touch = touches[0];\r\n\r\n      if (touches.length !== 2)\r\n        return;\r\n\r\n      if (!this.scrollY)\r\n        this.scrollY = touch.pageY + this.root.scrollTop;\r\n        \r\n      this.root.scrollTo(0, this.scrollY - touch.pageY);\r\n    };\r\n\r\n    this.root.ongesturechange = (e) => e.preventDefault();    \r\n    this.root.ongestureend = (e) => {\r\n      e.preventDefault();\r\n      this.scrollY = null;\r\n    };    \r\n\r\n    try {\r\n      const templates = JSON.parse(sessionStorage.getItem('templates'));\r\n      if (templates)\r\n        this.setState({ templates });\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.root.ontouchmove = null;\r\n    this.root.ongesturechange = null;\r\n    this.root.ongestureend = null;\r\n  }\r\n\r\n  shouldComponentUpdate(prevProps: Props) {\r\n    const { visible } = this.props;\r\n\r\n    return visible || prevProps.visible !== visible;\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { dragging, hoverTab } = this.props;\r\n\r\n    if (!dragging && dragging !== prevProps.dragging)\r\n      this.setState({ draggingId: null });\r\n\r\n    if (hoverTab !== prevProps.hoverTab)\r\n      this.onPointerEnter(hoverTab);\r\n  }\r\n\r\n  getLabel = (widget: ICustomStackProperty) => {\r\n    if (!widget)\r\n      return null;\r\n\r\n    const { preset } = this.props; \r\n    \r\n    const exposed = preset?.Exposed[widget.property];\r\n    if (exposed)\r\n    {\r\n      return widget.label || exposed.Metadata?.Description || exposed.DisplayName;\r\n    } else\r\n    {\r\n      console.log(exposed);\r\n    }\r\n\r\n    return (\r\n      <div className=\"unbound-property\">\r\n        <FontAwesomeIcon icon={['fas', 'exclamation-circle']} />\r\n        <span>Unbound Property</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPropertyValue = (property: string) => {\r\n    if (!property)\r\n      return;\r\n\r\n    return this.props.payload[property];\r\n  }\r\n\r\n  getValue = (widget: ICustomStackProperty): any=> {\r\n    return this.getPropertyValue(widget?.property);\r\n  }\r\n\r\n  onPropertyValueChange = async (widget: ICustomStackProperty, value?: PropertyValue) => {\r\n    const { preset } = this.props;\r\n    if (!widget?.property || !preset?.Exposed[widget.property])\r\n      return;\r\n\r\n    if (widget.propertyType === PropertyType.Function)\r\n      return _api.payload.execute(widget.property, widget.args);\r\n\r\n    if (value === undefined && !await AlertModal.show('Reset to default?'))\r\n      return;\r\n\r\n    _api.payload.set(widget.property, value);\r\n  }\r\n\r\n  onThrottledPropertyValueChange = _.throttle((widget, value) => this.onPropertyValueChange(widget, value), 100);\r\n\r\n  onDragChange = (draggingId: string) => {\r\n    const { dragging } = this.props;\r\n\r\n    if (!!dragging)\r\n      return;\r\n\r\n    this.setState({ draggingId });\r\n  };\r\n\r\n  onSelect = (prefix: string, id: string) => {\r\n    const selection = { ...this.state.selection };\r\n\r\n    selection[prefix] = id;\r\n    this.setState({ selection });\r\n  }\r\n\r\n  onPointerEnter = (value: string) => {\r\n    const [prefix, id] = value.split('_');\r\n    const { selection, draggingId } = this.state;\r\n    const { dragging } = this.props;\r\n\r\n    if (!dragging || _.first(draggingId?.split('_')) === 'NAVIGATION')\r\n      return;\r\n\r\n    if (selection[prefix] !== id) {\r\n      selection[prefix] = id;\r\n\r\n      this.setState({ selection });\r\n    }\r\n  }\r\n\r\n  getMetadata = (property: IExposedProperty | IExposedFunction, field: string) => {\r\n    const str = property?.Metadata?.[field];\r\n    if (str === undefined)\r\n      return;\r\n\r\n    const number = parseFloat(str);\r\n    if (isNaN(number))\r\n      return;\r\n    \r\n    return number;\r\n  }\r\n\r\n  getWidgetMetadata = (widget: ICustomStackProperty) => {\r\n    const { preset } = this.props;\r\n    const property = preset.Exposed[widget.property];\r\n    const type = property?.Type;\r\n    const precision = WidgetUtilities.getPropertyPrecision(type);\r\n    const alpha = !!this.getMetadata(property, 'Alpha');\r\n    const proportionally = !!this.getMetadata(property, 'Proportionally');\r\n\r\n    let min = this.getMetadata(property, 'Min');\r\n    let max = this.getMetadata(property, 'Max');\r\n\r\n    if (type === PropertyType.Rotator) {\r\n      if (min === undefined)\r\n        min = -180;\r\n      if (max === undefined)\r\n        max = 180;\r\n    }\r\n\r\n    return { type, min, max, precision, alpha, proportionally };\r\n  }\r\n\r\n  getAlpha = (property: string) => {\r\n    const { preset } = this.props;\r\n    const meta = preset.Exposed[property]?.Metadata;\r\n    return meta?.Alpha === '1';\r\n  }\r\n\r\n  renderPrecisionModal = () => {\r\n    const { precisionModal } = this.state;\r\n    if (!precisionModal?.widget || !precisionModal.widget?.property)\r\n      return null;\r\n\r\n    const { preset } = this.props;\r\n    const { widget, property } = precisionModal;\r\n    if (!preset?.Exposed[widget.property])\r\n      return null;\r\n\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const label = this.getLabel(widget);\r\n    const type = widget.propertyType;\r\n\r\n    let value = this.getValue(widget);\r\n    let onChange;\r\n    \r\n    switch (type) {\r\n      case PropertyType.Rotator:\r\n      case PropertyType.Vector:\r\n        value = value[property];\r\n        onChange = (newValue) => this.onPropertyAxisValueChange(widget, property, newValue);\r\n        break;\r\n\r\n      default:\r\n        onChange = (newValue) => this.onThrottledPropertyValueChange(widget, newValue);\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <PrecisionModal meta={meta}\r\n                      widget={widget.widget}\r\n                      property={widget.property}\r\n                      label={label}\r\n                      type={type}\r\n                      value={value}\r\n                      onChange={onChange}\r\n                      onMetadataChange={(key, value) => this.onMetadataChange(widget.property, key, value)}\r\n                      onClose={() => this.setState({ precisionModal: null })} />\r\n    );\r\n  }\r\n\r\n  getWidgetId = (widget: ICustomStackWidget, index: number) => {\r\n    if (!widget.id)\r\n      return tempId + index;\r\n\r\n    return `${widget.id}_WIDGET`;\r\n  }\r\n\r\n  renderSlider = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"slider\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.SliderWidget value={this.getValue(widget)}\r\n                              min={meta.min}\r\n                              max={meta.max}\r\n                              precision={meta.precision}\r\n                              label={this.getLabel(widget)}\r\n                              onPrecisionModal={() => this.setState({ precisionModal: { widget } })}\r\n                              onChange={value => this.onThrottledPropertyValueChange(widget, value)} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderSliders = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       className=\"sliders\"\r\n                       index={index}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.SlidersWidget widget={widget}\r\n                               label={this.getLabel(widget)}\r\n                               min={meta.min}\r\n                               max={meta.max}\r\n                               proportionally={meta.proportionally}\r\n                               value={this.getValue(widget)}\r\n                               onChange={this.onPropertyAxisValueChange}\r\n                               onPrecisionModal={property => this.setState({ precisionModal: { widget, property } })}\r\n                               onProportionallyToggle={this.onProportionallyToggle} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderColorPickerList = (widget: IColorPickerList, index: number, path: string) => {\r\n    const { droppable, selected, editable, dragging } = this.props;\r\n\r\n    const selection = `${path}_${index}_${WidgetTypes.ColorPickerList}`;\r\n    const draggableId = `${widget.id}_${WidgetTypes.ColorPickerList}` || tempId;\r\n    const droppableId = this.props.getDroppableId(widget.id, `${path}[${index}]items`, [WidgetTypes.ColorPicker, WidgetTypes.MiniColorPicker], 'COLORS_LIST') || tempId;\r\n    const isDropDisabled = (droppable !== droppableId);\r\n\r\n    return (\r\n      <DraggableWidget draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"color-pickers-list\"\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       key={draggableId}\r\n                       isDragDisabled={!editable}>\r\n        <DroppableWidget key={droppableId}\r\n                         droppableId={droppableId}\r\n                         className=\"multiline-widget-wrapper\"\r\n                         isDropDisabled={isDropDisabled}>\r\n          <ColorPickerList list={widget}\r\n                           path={`${path}[${index}]items`}\r\n                           selection={selected}\r\n                           dragging={dragging}\r\n                           isDragDisabled={!editable}\r\n                           onSelect={this.props.onSelected}\r\n                           getPropertyValue={this.getPropertyValue}\r\n                           getPropertyLabel={this.getLabel}\r\n                           getAlpha={this.getAlpha}\r\n                           onChange={this.onThrottledPropertyValueChange}\r\n                           onPrecisionModal={widget => this.setState({ precisionModal: { widget } })} />\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderColorList = (widgets: ICustomStackProperty[], listIndex: number, path: string) => {\r\n    const { droppable, preset } = this.props;\r\n    const first = _.first(widgets);\r\n\r\n    if (!first)\r\n      return null;\r\n\r\n    const property = preset.Exposed[first.property];\r\n    const type = property?.Metadata?.Widget ?? first.widget;\r\n    const droppableId = this.props.getDroppableId(first.id, path, [type], 'COLOR_LIST') || tempId;\r\n    const isDropDisabled = (droppable !== droppableId);\r\n\r\n    return (\r\n      <DraggableWidget draggableId={first.id || tempId}\r\n                       index={listIndex}\r\n                       isDragDisabled\r\n                       className=\"colors-list\"\r\n                       key={first.id || tempId}>\r\n        <DroppableWidget key={droppableId}\r\n                         droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={type as WidgetTypes}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, index) => {\r\n            const draggableId = `${widget.id}_${type}` || tempId;\r\n            const value = this.getValue(widget) as ColorProperty | VectorProperty;\r\n            const selection = `${path}_${index + listIndex}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId}\r\n                               draggableId={draggableId}\r\n                               index={index + listIndex}\r\n                               className=\"color\"\r\n                               onPointerChange={this.onDragChange}\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <ColorPicker value={value}\r\n                             label={this.getLabel(widget)}\r\n                             type={widget.propertyType}\r\n                             alpha={this.getAlpha(widget.property)}\r\n                             widget={property?.Metadata?.Widget ?? widget.widget}\r\n                             onChange={value => this.onThrottledPropertyValueChange(widget, value)}\r\n                             onPrecisionModal={() => this.setState({ precisionModal: { widget } })} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderTabs = (widget: ICustomStackTabs, index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const selection = { ...this.state.selection };\r\n    const options = widget.tabs.map(tab => ({ value: tab.id, label: tab.label }));\r\n    const firstTab = _.first(widget.tabs);\r\n\r\n    let selected = selection[widget.id];\r\n    let tab = _.find(widget.tabs, ['id', selected]);\r\n\r\n    if (!tab) {\r\n      selected = firstTab?.id;\r\n      tab = firstTab;\r\n    }\r\n\r\n    const onSelect = (id: string) => this.onSelect(widget.id, id);\r\n    const draggableId = this.getWidgetId(widget, index);\r\n    this.props.getDroppableId(widget.id, `${path}[${index}]`, [], 'TABS');\r\n\r\n    return (\r\n      <DraggableWidget draggableId={draggableId}\r\n                       key={draggableId}\r\n                       index={index}\r\n                       onSelect={this.props.onSelected.bind(this, `${path}_${index}_PROPERTY`)}\r\n                       selected={this.props.selected === `${path}_${index}_PROPERTY`}\r\n                       className=\"tab-group\"\r\n                       isDragDisabled>\r\n        <Widgets.TabWidget options={options}\r\n                          onSelect={onSelect}\r\n                          prefix={widget.id}\r\n                          value={selected} />\r\n        <div style={{ width: '100%', position: 'relative' }}>\r\n          {widget.tabs.map((w, i) => {\r\n            const droppableId = this.props.getDroppableId(w.id, `${path}[${index}]tabs[${i}]widgets`,\r\n              [\r\n                'WIDGET',\r\n                WidgetTypes.Dial,\r\n                WidgetTypes.Button,\r\n                WidgetTypes.Toggle,\r\n                WidgetTypes.ColorPicker,\r\n                WidgetTypes.MiniColorPicker,\r\n                WidgetTypes.ColorPickerList,\r\n                WidgetTypes.Label,\r\n                WidgetTypes.Spacer\r\n              ], WidgetTypes.Tabs);\r\n            const isSelected = w.id === tab.id;\r\n\r\n            let isDropDisabled = false;\r\n            let className = 'droppable-list ';\r\n\r\n            if (!isSelected)\r\n              className += 'hidden';\r\n\r\n            if (droppable !== droppableId)\r\n              isDropDisabled = true;\r\n\r\n            return (\r\n              <DroppableWidget key={droppableId}\r\n                               droppableId={droppableId}\r\n                               className={className}\r\n                               isDropDisabled={isDropDisabled}>\r\n                {this.renderWidgets(w.widgets, `${path}[${index}]tabs[${i}]widgets`)}\r\n              </DroppableWidget>\r\n            );\r\n          })}\r\n        </div>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderListItemContent = (item: ICustomStackListItem, index: number, isSelected: boolean) => {\r\n    const { droppable, editable } = this.props;\r\n    const path = `[0]items[${index}]panels`;\r\n    const droppableId = this.props.getDroppableId(item.id, path,\r\n      [\r\n        'WIDGET',\r\n        'PANEL',\r\n        WidgetTypes.Button,\r\n        WidgetTypes.Toggle,\r\n        WidgetTypes.ColorPicker,\r\n        WidgetTypes.MiniColorPicker,\r\n        WidgetTypes.Tabs,\r\n        WidgetTypes.Dial,\r\n        WidgetTypes.Label,\r\n        WidgetTypes.Spacer,\r\n        WidgetTypes.ColorPickerList,\r\n        WidgetTypes.Dropdown,\r\n      ], 'LIST');\r\n\r\n    let isDropDisabled = false;\r\n    let className = 'droppable-root ';\r\n\r\n    if (!isSelected)\r\n      className += 'hidden ';\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n\r\n    if (!editable)\r\n      return <VirtualList droppableId={droppableId}\r\n                          data={item.panels}\r\n                          className={className}\r\n                          isDropDisabled={isDropDisabled}\r\n                          itemContent={(index, panel) => this.renderPanel('', panel, index)} />;\r\n\r\n    return (\r\n      <DroppableWidget droppableId={droppableId}\r\n                       key={item.id}\r\n                       className={className}\r\n                       isDropDisabled={isDropDisabled}>\r\n        {item.panels?.map((panel, index) => this.renderPanel(path, panel, index))}\r\n      </DroppableWidget>\r\n    );\r\n\r\n  }\r\n\r\n  renderList = (list: IPanel) => {\r\n    const { editable } = this.props;\r\n    const selection = { ...this.state.selection };\r\n    const listId = list.id;\r\n    const firstListItem = _.first(list?.items);\r\n\r\n    let selected = selection[list.id];\r\n    let selectedItem = _.find(list.items, ['id', selected]);\r\n\r\n    if (!selectedItem) {\r\n      selected = firstListItem?.id;\r\n      selectedItem = firstListItem;\r\n    }\r\n\r\n    const onSelect = (id: any) => {\r\n      selection[list.id] = id;\r\n      this.setState({ selection });\r\n    };\r\n\r\n    this.props.getDroppableId(listId, `0`, [], 'LIST');\r\n\r\n    return (\r\n      <DraggableWidget key={listId}\r\n                       draggableId={listId}\r\n                       index={0}\r\n                       className=\"navigation-list\"\r\n                       onSelect={this.props.onSelected.bind(this, '_0')}\r\n                       selected={this.props.selected === '_0'}\r\n                       isDragDisabled>\r\n        <div className=\"navigation\">\r\n          {list.items?.map((item, index) => {\r\n            const itemId = item.id;\r\n\r\n            return (\r\n              <div className=\"navigation-row\" \r\n                   data-prefix={list.id} \r\n                   data-value={itemId}\r\n                   key={itemId}>\r\n                <button className={`navigation-btn ${selected === item.id ? 'selected' : ''}`} \r\n                        onClick={() => onSelect(item.id)}><p>{item.label}</p></button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"navigation-list-panels\">\r\n          {editable &&\r\n            list.items.map((item, index) => this.renderListItemContent(item, index, item.id === selectedItem.id))\r\n          }\r\n          {!editable &&\r\n            this.renderListItemContent(selectedItem, 0, true)\r\n          }\r\n        </div>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderDropdown = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const property = this.props.preset.Exposed[widget.property] as IExposedProperty;\r\n    const options = property?.UnderlyingProperty?.Metadata?.EnumValues?.split(',').map(value => value.trim()) ?? [];\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget draggableId={id}\r\n                       index={index}\r\n                       key={id}\r\n                       className=\"dropdown\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.DropdownWidget options={options}\r\n                                value={this.getValue(widget)}\r\n                                label={this.getLabel(widget)}\r\n                                onChange={value => this.onPropertyValueChange(widget, value)} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderSpacerWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const height = (widget?.spaces || 1) * 10 + 'px';\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget draggableId={id}\r\n                       index={index}\r\n                       key={id}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <div style={{ height }} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderImageSelector = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"image-selector\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, `${path}_${index}`)}\r\n                       selected={this.props.selected === `${path}_${index}`}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.ImageSelectorWidget widget={widget}\r\n                             value={this.getValue(widget)}\r\n                             onChange={this.onPropertyValueChange} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderToggleWidgets = (widgets: ICustomStackProperty[], index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const toggle = _.first(widgets);\r\n\r\n    if (!toggle.id)\r\n      return null;\r\n\r\n    const draggableId = `${WidgetTypes.Toggle}_${toggle.id}`;\r\n    const droppableId = this.props.getDroppableId(toggle.id, path, [WidgetTypes.Toggle], 'TOGGLES');\r\n\r\n    let isDropDisabled = false;\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n\r\n    return (\r\n      <DraggableWidget key={draggableId}\r\n                       draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"toggles-list\"\r\n                       isDragDisabled>\r\n        <DroppableWidget droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={WidgetTypes.Toggle}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, i) => {\r\n            const draggableId = `${widget.id}_${WidgetTypes.Toggle}`;\r\n            const selection = `${path}_${index + i}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId + i}\r\n                               draggableId={draggableId}\r\n                               index={index + i}\r\n                               className=\"toggle\"\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <Widgets.ToggleWidget widget={widget}\r\n                              checked={!!this.getValue(widget)}\r\n                              label={this.getLabel(widget)}\r\n                              onChange={this.onPropertyValueChange} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderLabel = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"label\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        {widget.label}\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderTextWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const onChange = this.onPropertyValueChange.bind(this, widget);\r\n    const id = this.getWidgetId(widget, index);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget className=\"slider-row text-row\"\r\n                       key={id}\r\n                       index={index}\r\n                       draggableId={id}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <div className=\"title\">{this.getLabel(widget)}</div>\r\n        <Text value={this.getValue(widget)} onChange={onChange} />\r\n        <FontAwesomeIcon icon={['fas', 'undo']} onClick={onChange} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderAssetWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const { preset } = this.props;\r\n    const id = this.getWidgetId(widget, index);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    const exposed = preset?.Exposed[widget.property] as IExposedProperty;\r\n\r\n    return (\r\n      <DraggableWidget className=\"asset-row\"\r\n                       key={id}\r\n                       index={index}\r\n                       draggableId={id}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.AssetWidget label={this.getLabel(widget)}\r\n                             value={this.getValue(widget)}\r\n                             type={exposed?.Type ?? 'Object'}\r\n                             typePath={exposed?.TypePath}\r\n                             onChange={value => this.onPropertyValueChange(widget, value)}\r\n                             browse />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderDialsWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);    \r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    const rotator = widget.propertyType === PropertyType.Rotator;\r\n    const { min, max, proportionally } = this.getWidgetMetadata(widget);\r\n\r\n    let dialMode = DialMode.Endless;\r\n\r\n    if (min !== undefined && max !== undefined)\r\n      dialMode = DialMode.Range;\r\n\r\n    if (rotator)\r\n      dialMode = DialMode.Rotation;\r\n      \r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"vector-dials\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <DialsWrapper type={widget.propertyType}\r\n                      min={min}\r\n                      max={max}\r\n                      proportionally={proportionally}\r\n                      property={widget.property}\r\n                      mode={dialMode}\r\n                      hidePrecision={true}\r\n                      properties={widget?.widgets}\r\n                      value={this.getValue(widget)}\r\n                      label={this.getLabel(widget)}\r\n                      onChange={value => this.onThrottledPropertyValueChange(widget, value)}\r\n                      onProportionallyToggle={this.onProportionallyToggle} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderDialWidgets = (widgets: ICustomStackProperty[], index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const dial = _.first(widgets);\r\n\r\n    if (!dial?.id)\r\n      return null;\r\n\r\n    const draggableId = `${WidgetTypes.Dial}_${dial.id}`;\r\n    const droppableId = this.props.getDroppableId(dial.id, path, [WidgetTypes.Dial], 'DIALS');\r\n\r\n    let isDropDisabled = false;\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n      \r\n    return (\r\n      <DraggableWidget key={draggableId}\r\n                       draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"dials-list\"\r\n                       isDragDisabled>\r\n        <DroppableWidget droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={WidgetTypes.Dial}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, i) => {\r\n            const draggableId = `${widget.id}_${WidgetTypes.Dial}`;\r\n            const meta = this.getWidgetMetadata(widget);\r\n            const mode = (meta.min !== undefined && meta.max !== undefined) ? DialMode.Range : DialMode.Endless;\r\n            const selection = `${path}_${index + i}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId + i}\r\n                               draggableId={draggableId}\r\n                               index={index + i}\r\n                               className=\"dial\"\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <Dial value={this.getValue(widget)}\r\n                      label={this.getLabel(widget)}\r\n                      onChange={value => this.onThrottledPropertyValueChange(widget, value)}\r\n                      min={meta.min}\r\n                      max={meta.max}\r\n                      mode={mode}\r\n                      onPrecisionModal={() => this.setState({ precisionModal: { widget } })} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  onPropertyAxisValueChange = (widget: ICustomStackProperty, axis: string, axisValue: number, proportionally?: boolean, min?: number, max?: number) => {\r\n    const value = { ...this.getValue(widget) } ?? {};\r\n\r\n    // Reset\r\n    if (axis === undefined || axisValue === undefined)\r\n      return this.onPropertyValueChange(widget);\r\n\r\n    let prev = value[axis];\r\n    if (prev === 0 || prev === undefined)\r\n      prev = 1;\r\n\r\n    const ratio = Math.max(0.001, axisValue) / prev;\r\n\r\n    if (proportionally && !isNaN(ratio))\r\n      for (const key of Object.keys(value)) {\r\n        let val = value[key] * ratio;\r\n        if (!isNaN(min) && !isNaN(max))\r\n          val = Math.min(max, Math.max(min, val));\r\n\r\n        value[key] = val;\r\n      }\r\n    else\r\n      value[axis] = axisValue;\r\n\r\n    this.onThrottledPropertyValueChange(widget, value);\r\n  }\r\n\r\n  onToggleVectorDrawer = (vector: ICustomStackProperty) => {\r\n    if (this.props.vector?.id === vector.id)\r\n      vector = null;\r\n\r\n    this.props.onSetVectorDrawer(vector);\r\n  }\r\n\r\n  onMetadataChange = (property: string, key: string, value: string) => {\r\n    _api.payload.metadata(property, key, value);\r\n  }\r\n\r\n  onProportionallyToggle = (property: string, value: string) => {\r\n    this.onMetadataChange(property, 'Proportionally', value);\r\n  }\r\n\r\n  renderVectorWidget = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const { vector } = this.props;\r\n    const id = this.getWidgetId(widget, index);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       draggableId={id}\r\n                       index={index}\r\n                       className=\"vector\"\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}>\r\n        <Widgets.VectorWidget widget={widget}\r\n                              label={this.getLabel(widget)}\r\n                              value={this.getValue(widget)}\r\n                              vector={vector}\r\n                              min={meta.min}\r\n                              max={meta.max}\r\n                              proportionally={meta.proportionally}\r\n                              onAxisChange={this.onPropertyAxisValueChange}\r\n                              onToggleVectorDrawer={this.onToggleVectorDrawer}\r\n                              onSetVector={this.props.onSetVectorDrawer}\r\n                              onProportionallyToggle={this.onProportionallyToggle} />\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderButtonWidgets = (widgets: ICustomStackProperty[], index: number, path: string) => {\r\n    const { droppable } = this.props;\r\n    const button = _.first(widgets);\r\n\r\n    if (!button.id)\r\n      return null;\r\n\r\n    const draggableId = `${WidgetTypes.Button}_${button.id}`;\r\n    const droppableId = this.props.getDroppableId(button.id, path, [WidgetTypes.Button], 'BUTTONS');\r\n\r\n    let isDropDisabled = false;\r\n\r\n    if (droppable !== droppableId)\r\n      isDropDisabled = true;\r\n\r\n    return (\r\n      <DraggableWidget key={draggableId}\r\n                       draggableId={draggableId}\r\n                       index={index}\r\n                       className=\"buttons-list\"\r\n                       isDragDisabled>\r\n        <DroppableWidget droppableId={droppableId}\r\n                         direction=\"horizontal\"\r\n                         className=\"multiline-widget-wrapper\"\r\n                         type={WidgetTypes.Button}\r\n                         isDropDisabled={isDropDisabled}>\r\n          {widgets.map((widget, i) => {\r\n            const draggableId = `${widget.id}_${WidgetTypes.Button}`;\r\n            const selection = `${path}_${index + i}_${widget.property}`;\r\n\r\n            return (\r\n              <DraggableWidget key={draggableId + i}\r\n                               draggableId={draggableId}\r\n                               index={index + i}\r\n                               className=\"btn-wrapper\"\r\n                               onSelect={this.props.onSelected.bind(this, selection)}\r\n                               selected={this.props.selected === selection}\r\n                               isDragDisabled={!this.props.editable}>\r\n                <Button label={this.getLabel(widget)} onExecute={() => this.onPropertyValueChange(widget)} />\r\n              </DraggableWidget>\r\n            );\r\n          })}\r\n        </DroppableWidget>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  renderJoysticks = (widget: ICustomStackProperty, index: number, path: string) => {\r\n    const id = this.getWidgetId(widget, index);\r\n    const keys = WidgetUtilities.getPropertyKeys(widget?.propertyType);\r\n    const meta = this.getWidgetMetadata(widget);\r\n    const selection = `${path}_${index}_${widget.property}`;\r\n\r\n    return (\r\n      <DraggableWidget key={id}\r\n                       index={index}\r\n                       draggableId={id}\r\n                       onPointerChange={this.onDragChange}\r\n                       onSelect={this.props.onSelected.bind(this, selection)}\r\n                       selected={this.props.selected === selection}\r\n                       isDragDisabled={!this.props.editable}\r\n                       className=\"joystick-group\">\r\n        <div className=\"joystick-group\">\r\n          <JoysticksWrapper type={PropertyType.Vector}\r\n                            keys={keys}\r\n                            value={this.getValue(widget)}\r\n                            min={meta.min}\r\n                            max={meta.max}\r\n                            label={this.getLabel(widget)}\r\n                            onChange={v => this.onThrottledPropertyValueChange(widget, v)} />\r\n        </div>\r\n      </DraggableWidget>\r\n    );\r\n  }\r\n\r\n  getInlineWidgets = (elements: React.ReactNode[], widgets: ICustomStackWidget[], type: WidgetTypes, index: number, limit: number) => {\r\n    const w = [];\r\n\r\n    for (let i = 0; i < limit; i++) {\r\n      if (this.getWidgetType(widgets[index] as ICustomStackProperty) !== type)\r\n        break;\r\n\r\n      const draggableId = `${index}_${widgets[index].id}`;\r\n      elements.push(<DraggableWidget key={draggableId} draggableId={draggableId} index={index} />);\r\n\r\n      w.push(widgets[index++] as ICustomStackProperty);\r\n    }\r\n\r\n    return w;\r\n  }\r\n\r\n  getWidgetType = (widget: ICustomStackProperty) => {\r\n    const { preset } = this.props;\r\n    const property = preset?.Exposed[widget?.property];\r\n    return property?.Metadata?.Widget || widget?.widget;\r\n  }\r\n\r\n  renderWidgets = (widgets: ICustomStackWidget[], path: string) => {\r\n    const elements = [];\r\n    let firstIndex = null;\r\n    let w = [];\r\n\r\n    for (let index = 0; index < widgets.length; index++) {\r\n      const widget = widgets[index] as ICustomStackProperty;\r\n      const widgetType = this.getWidgetType(widget);\r\n      widget.widget = widgetType;\r\n\r\n      let element = null;\r\n\r\n      switch (widgetType) {\r\n        case WidgetTypes.Tabs:\r\n          element = this.renderTabs(widgets[index] as ICustomStackTabs, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Sliders:\r\n          element = this.renderSliders(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.ImageSelector:\r\n          element = this.renderImageSelector(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Spacer:\r\n          element = this.renderSpacerWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Joystick:\r\n          element = this.renderJoysticks(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Dropdown:\r\n          element = this.renderDropdown(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Label:\r\n          element = this.renderLabel(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Slider:\r\n          element = this.renderSlider(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Text:\r\n          element = this.renderTextWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Vector:\r\n          element = this.renderVectorWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Dials:\r\n          element = this.renderDialsWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Asset:\r\n          element = this.renderAssetWidget(widget, index, path);\r\n          break;\r\n\r\n        case WidgetTypes.Dial:\r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.Dial, index, 3);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderDialWidgets(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.Toggle: \r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.Toggle, index, 4);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderToggleWidgets(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.Button: \r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.Button, index, 4);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderButtonWidgets(w, firstIndex, path));\r\n          break;\r\n\r\n\r\n        case WidgetTypes.ColorPicker:\r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.ColorPicker, index, 3);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderColorList(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.MiniColorPicker:\r\n          firstIndex = index;\r\n          w = this.getInlineWidgets(elements, widgets, WidgetTypes.MiniColorPicker, index, 3);\r\n\r\n          index += Math.max(w.length - 1, 0);\r\n\r\n          elements.push(this.renderColorList(w, firstIndex, path));\r\n          break;\r\n\r\n        case WidgetTypes.ColorPickerList:\r\n          elements.push(this.renderColorPickerList(widgets[index] as IColorPickerList, index, path));\r\n          break;\r\n\r\n        default:\r\n          element = <DraggableWidget draggableId={index.toString()} key={index} index={index} isDragDisabled />;\r\n          break;\r\n      };\r\n\r\n      elements.push(element);\r\n    }\r\n\r\n    return elements;\r\n  };\r\n\r\n  getPanelProperties = (panel: IPanel) => {\r\n    const ids = [];\r\n\r\n    for (const p of panel.widgets || []) {\r\n      const widget = p as ICustomStackProperty;\r\n\r\n      switch (p.widget) {\r\n        case WidgetTypes.Tabs:\r\n          const tabs = p as ICustomStackTabs;\r\n          for (const tab of tabs.tabs || [])\r\n            tab.widgets.map((w: ICustomStackProperty) => ids.push(w.property));\r\n          break;\r\n\r\n        case WidgetTypes.ColorPickerList:\r\n          const pickerList = p as IColorPickerList;\r\n          for (const pickerItem of pickerList.items ?? [])\r\n            ids.push(pickerItem.property);\r\n          break;\r\n  \r\n        default:\r\n          ids.push(widget.property);\r\n          break;\r\n      }\r\n    }\r\n\r\n\r\n    return _.compact(ids);\r\n  }\r\n\r\n  onRefreshPanelOptions = async (panel: IPanel) => {\r\n    const { preset } = this.props;\r\n\r\n    const PropertyIds = this.getPanelProperties(panel);\r\n    if (!PropertyIds.length)\r\n      return;\r\n\r\n    const matching = await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'FindMatchingActorsToRebind',\r\n      {\r\n        PresetId: preset.ID,\r\n        PropertyIds\r\n      });\r\n\r\n    \r\n    const selected = await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'GetOwnerActorLabel',\r\n      {\r\n        PresetId: preset.ID,\r\n        PropertyIds\r\n      });\r\n\r\n\r\n    const templates = { ...this.state.templates };\r\n    templates[panel.id] = { matching, selected };\r\n\r\n    this.setState({ templates });\r\n    sessionStorage.setItem('templates', JSON.stringify(templates));\r\n  }\r\n\r\n  onRebindActor = (panel: IPanel, selected: string) => {\r\n    const templates = { ...this.state.templates };\r\n    const template = templates[panel.id];\r\n    if (!template)\r\n      return;\r\n\r\n    const owner = template.matching[selected];\r\n    if (!owner)\r\n      return;\r\n\r\n    const ids = this.getPanelProperties(panel);\r\n    _api.payload.rebind(ids, owner);\r\n\r\n    template.selected = selected;\r\n    this.setState({ templates });\r\n    sessionStorage.setItem('templates', JSON.stringify(templates));\r\n  }\r\n\r\n  renderPanel = (path: string, panel: IPanel, index: number,) => {\r\n    const { editable, droppable } = this.props;\r\n\r\n    if (!panel.id)\r\n      return null;\r\n\r\n    switch (panel.type) {\r\n      case IPanelType.Panel:\r\n        const draggableId = `${panel.id}_PANEL`;\r\n        const panelPath = `${path}[${index}]widgets`;\r\n        const droppableId = this.props.getDroppableId(draggableId, panelPath,\r\n          [\r\n            'WIDGET',\r\n            WidgetTypes.Button,\r\n            WidgetTypes.Toggle,\r\n            WidgetTypes.ColorPicker,\r\n            WidgetTypes.MiniColorPicker,\r\n            WidgetTypes.ColorPickerList,\r\n            WidgetTypes.Tabs,\r\n            WidgetTypes.Dial,\r\n            WidgetTypes.Dials,\r\n            WidgetTypes.Label,\r\n            WidgetTypes.Spacer,\r\n            WidgetTypes.Dropdown,\r\n          ], 'PANEL');\r\n\r\n        let isDropDisabled = false;\r\n\r\n        if (droppable !== droppableId)\r\n          isDropDisabled = true;\r\n\r\n        const template = this.state.templates[panel.id];\r\n        return (\r\n          <DraggableWidget draggableId={draggableId}\r\n                           key={draggableId}\r\n                           index={index}\r\n                           className={`draggable-panel`}\r\n                           onSelect={this.props.onSelected.bind(this, `${path}_${index}`)}\r\n                           selected={`${this.props.selected}` === `${path}_${index}`}\r\n                           isDragDisabled={!editable}>\r\n            <DroppableWidget droppableId={droppableId}\r\n                             className={`droppable-panel ${!!panel?.title || !!panel?.isTemplate ? 'has-title' : ''}`}\r\n                             isDropDisabled={isDropDisabled}>\r\n              {!!panel?.title && <div className=\"title\">{panel.title}</div>}\r\n              {!!panel.isTemplate && (\r\n                <div className=\"title template-property-select-wrapper\">\r\n                  <div className='template-property-select-inner-wrapper'>\r\n                    <select className=\"dropdown template-property-select\" \r\n                            tabIndex={-1}\r\n                            onFocus={this.isIos ? null : () => this.onRefreshPanelOptions(panel)}\r\n                            value={template?.selected ? template?.selected : undefined} \r\n                            onChange={e => this.onRebindActor(panel, e.target.value)}>\r\n                      {Object.keys(template?.matching ? template?.matching :{'Click to Select Actor': ''} ).map(match =>\r\n                        <option key={match} value={match}>{match}</option>\r\n                      )}\r\n                    </select>\r\n                  </div>\r\n                    {this.isIos && \r\n                      <button onClick={() => this.onRefreshPanelOptions(panel)}><FontAwesomeIcon icon={['fas', 'sync-alt']} /></button>\r\n                    }\r\n                </div>\r\n              )}\r\n              {this.renderWidgets(panel.widgets, panelPath)}\r\n            </DroppableWidget>\r\n          </DraggableWidget>\r\n        );\r\n\r\n      case IPanelType.List:\r\n        return this.renderList(panel);\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderVectorDrawer = () => {\r\n    const { vector } = this.props;\r\n    if (!vector)\r\n      return null;\r\n\r\n    const meta = this.getWidgetMetadata(vector);\r\n    if (!meta.type)\r\n      return null;\r\n\r\n    return (\r\n      <VectorDrawer widget={vector}\r\n                    label={this.getLabel(vector)}\r\n                    value={this.getValue(vector)}\r\n                    min={meta.min}\r\n                    max={meta.max}\r\n                    onClose={this.props.onSetVectorDrawer}\r\n                    onChange={value => this.onThrottledPropertyValueChange(vector, value)} />\r\n    );\r\n  }\r\n\r\n  renderRootList = () => {\r\n    const { editable, droppable, panels = [], tabKey } = this.props;\r\n    const isList = panels[0]?.type === IPanelType.List;\r\n    const droppableId = this.props.getDroppableId(`${tabKey}_ROOT`, '', ['ALL'], 'ROOT');\r\n\r\n    let isDropDisabled = false;\r\n    if (droppable !== droppableId || isList)\r\n      isDropDisabled = true;\r\n\r\n    if (editable)\r\n      return (\r\n        <DroppableWidget droppableId={droppableId} \r\n                         className=\"droppable-root\" \r\n                         isDropDisabled={isDropDisabled}>\r\n          {panels?.map((panel, index) => this.renderPanel('', panel, index))}\r\n        </DroppableWidget>\r\n      );\r\n\r\n    return <VirtualList droppableId={droppableId}\r\n                        data={panels}\r\n                        className=\"droppable-root\"\r\n                        isDropDisabled={isDropDisabled}\r\n                        itemContent={(index, panel) => this.renderPanel('', panel, index)} />;\r\n  }\r\n\r\n  render() {\r\n    const { dragging, panels = [], vector } = this.props;\r\n    const isList = panels[0]?.type === IPanelType.List;\r\n    let className = 'customstack-wrapper ';\r\n\r\n    if (!!dragging)\r\n      className += 'drag ';\r\n\r\n    if (isList)\r\n      className += 'customstack-list ';\r\n\r\n    if (!!vector)\r\n      className += 'drawer-shown ';\r\n\r\n    return (\r\n      <div className={className}>\r\n        {this.renderRootList()}\r\n        {this.renderVectorDrawer()}\r\n        {this.renderPrecisionModal()}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { _api } from 'src/reducers';\r\nimport { IPreset, IGroup, IExposedProperty, WidgetTypes, ICustomStackProperty, IPanel, ICustomStackTabs, IExposedFunction, \r\n        PropertyType, IView, ITab, TabLayout, ICustomStackWidget, WidgetType, IColorPickerList, ICustomStackListItem } from 'src/shared';\r\nimport { Draggable, Droppable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { AlertModal } from '.';\r\nimport { SlidersWidget, SliderWidget, DropdownWidget, ImageSelectorWidget, ToggleWidget, VectorWidget, AssetWidget } from './Widgets';\r\nimport * as Tabs from './Properties';\r\nimport { ColorPicker, Button, Text, Dial, JoysticksWrapper, DialsWrapper } from './controls';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport _ from 'lodash';\r\n\r\n\r\nexport type DropWidgetsType = {\r\n  id: string;\r\n  label: string;\r\n  type: string;\r\n  propertyType?: PropertyType;\r\n}\r\n\r\ntype State = {\r\n  filteredGroups: IGroup[];\r\n  filteredPresets?: IPreset[];\r\n  filteredWidgets: DropWidgetsType[],\r\n\r\n  search: string;\r\n\r\n  editTab: boolean;\r\n  tab: TabType;\r\n\r\n  metadata: Record<string, string>;\r\n\r\n  widget: ICustomStackProperty | ICustomStackTabs | IPanel | IColorPickerList;\r\n  usedProperties: Record<string, boolean>;\r\n};\r\n\r\ntype Props = {\r\n  selected: string;\r\n  panels: IPanel[];\r\n  presets: IPreset[];\r\n  preset: IPreset;\r\n  view: IView;\r\n  tab: number;\r\n  editable: boolean;\r\n\r\n  lockWidget: (widget: any) => void;\r\n\r\n  onChangeIcon: () => void;\r\n  onRenameTabModal: () => void;\r\n  onDuplicateTab: () => void;\r\n  onUpdateView: (update?: boolean) => void;\r\n  onPresetChange: (preset: IPreset) => void;\r\n  onSelected: (selected: string) => void;\r\n  onNewTabs: (items: ICustomStackListItem[]) => void;\r\n};\r\n\r\nenum TabType {\r\n  Widgets     = 'WIDGETS',\r\n  Properties  = 'PROPERTIES',\r\n  Tab         = 'TAB',\r\n  Presets     = 'PRESETS',\r\n}\r\n\r\nconst tabs = [\r\n  { title: 'Presets',    key: TabType.Presets },\r\n  { title: 'Tab',        key: TabType.Tab },\r\n  { title: 'Widgets',    key: TabType.Widgets },\r\n  { title: 'Properties', key: TabType.Properties },\r\n];\r\n\r\nconst widgets = [\r\n  { id: 'PANEL',                                 type: 'PANEL',                     label: 'Panel' },\r\n  { id: 'LIST',                                  type: 'LIST',                      label: 'List' },\r\n  { id: WidgetTypes.Tabs,                        type: WidgetTypes.Tabs,            label: 'Tabs' },\r\n  { id: WidgetTypes.Label,                       type: WidgetTypes.Label,           label: 'Label' },\r\n  { id: WidgetTypes.Spacer,                      type: WidgetTypes.Spacer,          label: 'Spacer' },\r\n\r\n  { id: WidgetTypes.Dial,                        type: WidgetTypes.Dial,            label: 'Dial',              propertyType: PropertyType.Float },\r\n  { id: `${WidgetTypes.Slider}_WIDGET`,          type: WidgetTypes.Slider,          label: 'Slider',            propertyType: PropertyType.Float },\r\n  { id: WidgetTypes.ColorPicker,                 type: WidgetTypes.ColorPicker,     label: 'Color Picker',      propertyType: PropertyType.LinearColor },\r\n  { id: WidgetTypes.MiniColorPicker,             type: WidgetTypes.MiniColorPicker, label: 'MiniColor Picker',  propertyType: PropertyType.LinearColor },\r\n  { id: `${WidgetTypes.ColorPickerList}_WIDGET`, type: WidgetTypes.ColorPickerList, label: 'Color Picker List', propertyType: PropertyType.LinearColor },\r\n  { id: WidgetTypes.Toggle,                      type: WidgetTypes.Toggle,          label: 'Toggle',            propertyType: PropertyType.Boolean },\r\n  { id: `${WidgetTypes.Joystick}_WIDGET`,        type: WidgetTypes.Joystick,        label: 'Joystick',          propertyType: PropertyType.Vector },\r\n  { id: WidgetTypes.Button,                      type: WidgetTypes.Button,          label: 'Button',            propertyType: PropertyType.Function },\r\n  { id: `${WidgetTypes.Text}_WIDGET`,            type: WidgetTypes.Text,            label: 'Text',              propertyType: PropertyType.Text },\r\n  { id: WidgetTypes.Dropdown,                    type: WidgetTypes.Dropdown,        label: 'Dropdown',          propertyType: PropertyType.Text },\r\n  { id: `${WidgetTypes.Vector}_WIDGET`,          type: WidgetTypes.Vector,          label: 'Vector',            propertyType: PropertyType.Vector },\r\n];\r\n\r\nexport class PropertiesDrawer extends Component<Props, State> {\r\n\r\n  state: State = {\r\n    filteredGroups: [...this.props.preset.Groups],\r\n    filteredWidgets: [..._.sortBy(widgets, w => w.label)],\r\n    filteredPresets: [...this.props.presets],\r\n    search: '',\r\n    editTab: false,\r\n    tab: TabType.Presets,\r\n\r\n    widget: null,\r\n    metadata: {},\r\n    usedProperties: {},\r\n  };\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: State) {\r\n    const { editable, selected, panels, preset, view, tab } = this.props;\r\n\r\n    if (!editable)\r\n      return;\r\n\r\n    if (editable !== prevProps.editable || view !== prevProps.view || tab !== prevProps.tab)\r\n      this.buildPropertyList(view?.tabs?.[tab]);\r\n\r\n    if (view !== prevProps.view || selected && (selected !== prevProps.selected || !_.isEqual(panels, prevProps.panels))) {\r\n      const [path, index, property] = selected?.split('_') ?? [];\r\n\r\n      let widget;\r\n      if (!index)\r\n        widget = this.getWidgetFromElement(preset.Exposed[property] as any); \r\n      else\r\n        widget = _.get(panels, path, panels)[+index];\r\n\r\n      this.setState({ widget, metadata: {} });\r\n    }\r\n\r\n    if (preset !== prevProps.preset){\r\n      const { search } = this.state;\r\n      this.onPropertiesFilter(search);\r\n      this.onPresetFilter(search);\r\n    }\r\n\r\n    if (this.state.tab !== prevState.tab)\r\n      this.resetFilter();\r\n  }\r\n\r\n  buildPropertyList = (tab: ITab) => {\r\n    let usedPropArray = [];\r\n    if (tab?.layout === TabLayout.Stack)\r\n      usedPropArray = _.compact(this.getProperties(tab.panels));\r\n\r\n    const usedProperties = _.uniq(usedPropArray).reduce((result, item) => {\r\n      result[item] = true;\r\n      return result;\r\n    }, {});\r\n\r\n    this.setState({ usedProperties });\r\n  }\r\n\r\n  resetFilter = () => {\r\n    this.setState({\r\n      filteredGroups: [...this.props.preset.Groups],\r\n      filteredWidgets: [..._.sortBy(widgets, w => w.label)],\r\n      filteredPresets: [...this.props.presets],\r\n    });\r\n  }\r\n\r\n  getProperties = (items: any[]) => {\r\n    if (!items)\r\n      return [];\r\n\r\n    const properties = [];\r\n    for (const item of items) {\r\n      switch (item.type) {\r\n        case 'LIST':\r\n          for (const listItem of item.items)\r\n            properties.push(...this.getProperties(listItem.panels));\r\n          break;\r\n\r\n        case 'PANEL':\r\n          properties.push(...this.getProperties(item.widgets));\r\n          break;\r\n\r\n        default:\r\n          properties.push(...this.getPropertiesofWidget(item));\r\n          break;\r\n      }\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  getPropertiesofWidget = (item: any) => {\r\n    const properties = [];\r\n    switch (item.widget) {\r\n      case WidgetTypes.Tabs:\r\n        for (const tab of item.tabs)\r\n          properties.push(...this.getProperties(tab.widgets));\r\n        break;\r\n\r\n      case WidgetTypes.ColorPickerList:\r\n        for (const picker of item.items)\r\n          properties.push(picker.property);\r\n        break;\r\n\r\n      default:\r\n        properties.push(item.property);\r\n        break;\r\n    }\r\n\r\n    return properties;\r\n  }\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDragging)\r\n      return { ...style, transform: 'none' };\r\n\r\n    if (!snapshot.isDropAnimating)\r\n      return { ...style, height: 'auto', width: 'auto', minWidth: '350px' };\r\n\r\n    return { ...style, height: 'auto', width: 'auto', minWidth: '350px', transitionDuration: '0.001s' };\r\n  }\r\n\r\n  onPropertiesFilter = (search: string) => {\r\n    const { preset } = this.props;\r\n\r\n    let filteredGroups = preset.Groups;\r\n    if (search)\r\n      filteredGroups = _.map(preset.Groups, group => this.filterGroup(group, search));\r\n\r\n    this.setState({ filteredGroups, search });\r\n  }\r\n\r\n  onWidgetsFilter = (search: string) => {\r\n    const filteredWidgets = _.sortBy(widgets.filter(widget => widget.label.toLowerCase().slice(0, search.length) === search), w => w.label);\r\n\r\n    this.setState({ filteredWidgets });\r\n  }\r\n\r\n  filterGroup = (group: IGroup, search: string): IGroup => ({\r\n    ...group,\r\n    ExposedProperties: _.filter(group.ExposedProperties, prop => prop.DisplayName.toLowerCase().indexOf(search) !== -1),\r\n    ExposedFunctions: _.filter(group.ExposedFunctions, func => func.DisplayName.toLowerCase().indexOf(search) !== -1),\r\n  });\r\n\r\n  onPresetFilter = (search: string) => {\r\n    const { presets } = this.props;\r\n\r\n    let filteredPresets = presets;\r\n    if (search)\r\n      filteredPresets = presets.filter(preset => preset.Name.toLowerCase().indexOf(search) !== -1);\r\n\r\n    this.setState({ filteredPresets, search });\r\n  }\r\n\r\n  onViewUpdatedDebounced = _.debounce(this.props.onUpdateView, 400);\r\n\r\n  getWidgetFromElement = (element: IExposedProperty & IExposedFunction): ICustomStackProperty => {\r\n    if (!element)\r\n      return null;\r\n\r\n    return {\r\n      property: element.ID,\r\n      propertyType: element?.Type,\r\n      widget: element.Metadata?.Widget,\r\n    };\r\n  };\r\n\r\n  onWidgetRemove = async (title: string) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    if (!await AlertModal.show(title))\r\n      return;\r\n\r\n    const widgets = _.get(panels, path, panels);\r\n    widgets.splice(+index, 1);\r\n\r\n    this.props.onUpdateView(true);\r\n  }\r\n\r\n  onWidgetTabRemove = async (i: number) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    if (!await AlertModal.show('Are you sure you want to delete this tab?'))\r\n      return;\r\n\r\n    const widgets = _.get(panels, `${path}[${index}]tabs`, panels);\r\n    widgets.splice(i, 1);\r\n\r\n    this.props.onUpdateView();\r\n  }\r\n\r\n  onListItemRemove = async (i: number) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    if (!await AlertModal.show('Are you sure you want to delete this item?'))\r\n      return;\r\n\r\n    const items = _.get(panels, `${path}[${index}]items`, panels); \r\n    items.splice(i, 1);\r\n\r\n    this.props.onUpdateView();\r\n  }\r\n\r\n  onChange = (property: string, value: any) => {\r\n    const { selected, panels } = this.props;\r\n    const widget = { ...this.state.widget };\r\n    const [path, index] = selected.split('_');\r\n\r\n    _.set(widget, property, value);\r\n    this.setState({ widget } as any);\r\n    let widgets = _.get(panels, path, panels);\r\n\r\n    _.set(widgets, `${index}.${property}`, value);\r\n    this.onViewUpdatedDebounced();\r\n  }\r\n\r\n  renderWidget = (widget: ICustomStackProperty) => {\r\n    if (!widget)\r\n      return null;\r\n\r\n    this.props.lockWidget([widget]);\r\n\r\n    switch (widget.widget) {\r\n      case WidgetTypes.Sliders:\r\n        return <SlidersWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Slider:\r\n        return <SliderWidget />;\r\n\r\n      case WidgetTypes.Dropdown:\r\n        return <DropdownWidget />;\r\n\r\n      case WidgetTypes.ImageSelector:\r\n        return <ImageSelectorWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Toggle:\r\n        return <ToggleWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Label:\r\n        return <div className=\"label\">Label</div>;\r\n\r\n      case WidgetTypes.Text:\r\n        return (\r\n          <div className=\"slider-row text-row\">\r\n            <div className=\"title\">Text</div>\r\n            <Text value=\"Text\" />\r\n            <FontAwesomeIcon icon={['fas', 'undo']} />\r\n          </div>\r\n        );\r\n\r\n      case WidgetTypes.Vector:\r\n        return <VectorWidget widget={widget} />;\r\n\r\n      case WidgetTypes.Button:\r\n        return (\r\n          <div className=\"btn-wrapper\">\r\n            <Button />\r\n          </div>\r\n        );\r\n\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n        return <ColorPicker widget={widget.widget} />;\r\n\r\n      case WidgetTypes.Joystick:\r\n        return <JoysticksWrapper type={PropertyType.Vector} />;\r\n\r\n      case WidgetTypes.Dial:\r\n        return <Dial />;\r\n\r\n      case WidgetTypes.Dials:\r\n        return <DialsWrapper type={widget.propertyType} />;\r\n\r\n      case WidgetTypes.Asset:\r\n        return <AssetWidget />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  renderTabsEdit = () => {\r\n    const widget = this.state.widget as ICustomStackTabs;\r\n\r\n    return (\r\n      <>\r\n        <Droppable droppableId={widget.id} type=\"TABS-REORDER\">\r\n          {provided => (\r\n            <div className=\"properties-list\"\r\n                 ref={provided.innerRef}\r\n                 {...provided.droppableProps}>\r\n              {widget.tabs?.map((widget, i) => (\r\n                <Draggable key={widget.id} draggableId={`REORDER_${widget.id}`} index={i}>\r\n                  {provided => (\r\n                    <div ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         className=\"properties-field line\">\r\n                      <span {...provided.dragHandleProps}\r\n                            className=\"drag-handle\"\r\n                            tabIndex={-1}>\r\n                        <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                      </span>\r\n                      <input type=\"text\"\r\n                             value={widget.label ?? ''}\r\n                             onChange={e => this.onChange(`tabs[${i}]label`, e.target.value)} />\r\n                      <FontAwesomeIcon className=\"icon\" icon={['fas', 'times']} onClick={() => this.onWidgetTabRemove(i)} />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <div className=\"btn-container\">\r\n          <button className=\"btn btn-primary\"\r\n                  onClick={() => this.onChange(`tabs[${widget.tabs.length}]`, { label: `Tab ${widget.tabs.length + 1}`, widgets: [] })}>\r\n            Add new tab\r\n            </button>\r\n        </div>\r\n        {this.renderDelete('Tabs')}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderListsEdit = () => {\r\n    const widget = this.state.widget as IPanel;\r\n\r\n    return (\r\n      <>\r\n      <Droppable droppableId={widget.id} type=\"LIST-REORDER\">\r\n          {provided => (\r\n            <div className=\"properties-list\"\r\n                 ref={provided.innerRef}\r\n                 {...provided.droppableProps}>\r\n              {widget.items?.map((item, i) => (\r\n                <Draggable draggableId={`REORDER_${item.id}`} index={i} key={item.id}>\r\n                  {provided => (\r\n                    <div ref={provided.innerRef}\r\n                         {...provided.draggableProps}  \r\n                         className=\"properties-field line\">\r\n                      <span {...provided.dragHandleProps}\r\n                            className=\"drag-handle\"\r\n                            tabIndex={-1}>\r\n                        <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                      </span>\r\n                      <input type=\"text\"\r\n                             value={item.label ?? ''}\r\n                             onChange={e => this.onChange(`items[${i}]label`, e.target.value)} />\r\n                      {widget.items?.length > 1 && <FontAwesomeIcon className=\"icon\" icon={['fas', 'times']} onClick={this.onListItemRemove.bind(this, i)} />}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n      </Droppable>\r\n        <div className=\"btn-container\">\r\n          <button className=\"btn btn-primary\"\r\n                  onClick={this.onChange.bind(this, `items[${widget.items.length}]`, { label: `Item ${widget.items.length + 1}`, panels: [] })}>\r\n            Add new item\r\n            </button>\r\n        </div>\r\n        {this.renderDelete('List')}\r\n        <div className=\"btn-container\">\r\n          <button className=\"btn btn-secondary\" onClick={() => this.props.onNewTabs(widget.items)}>\r\n            Create Tabs from List Item\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderColorPickersListEdit = () => {\r\n    return this.renderDelete('Color Picker List');\r\n  }\r\n\r\n  renderColorPickerEdit = (available: boolean) => {\r\n    const { preset } = this.props;\r\n    const colorPicker = this.state.widget as ICustomStackProperty;\r\n\r\n    const exposed = preset?.Exposed[colorPicker?.property] as IExposedProperty;\r\n    let checked = false;\r\n\r\n    if (exposed?.Metadata?.Alpha === '1')\r\n      checked = true;\r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n          {colorPicker.propertyType !== PropertyType.Vector4 &&\r\n            <div className=\"properties-field\">\r\n              <label>Show Alpha</label>\r\n              <input className=\"checkbox\" type=\"checkbox\" onChange={e => this.onMetadataChange(colorPicker, 'Alpha', e.target.checked ? '1' : '0')} checked={checked} />\r\n            </div>}\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderPanelEdit = () => {\r\n    const panel = this.state.widget as IPanel;\r\n\r\n    return (\r\n      <div className=\"properties-list\">\r\n        <div className=\"properties-field\">\r\n          <label>Panel Title</label>\r\n          <input type=\"text\"\r\n                value={panel?.title ?? ''}\r\n                onChange={e => this.onChange('title', e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"properties-field\">\r\n          <label>Is template</label>\r\n          <input className=\"checkbox\" type=\"checkbox\" checked={!!panel?.isTemplate} onChange={e => this.onChange('isTemplate', e.target.checked)} />\r\n        </div>\r\n        {this.renderDelete('Panel')}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onMetadataChange = (widget: Partial<ICustomStackProperty>, key: string, value: string) => {\r\n    const metadata = { ...this.state.metadata };\r\n    metadata[key] = value;\r\n\r\n    this.setState({ metadata });\r\n    _api.payload.metadata(widget.property, key, value);\r\n  }\r\n\r\n  onDiscardStateMetadata = (key: string) => {\r\n    const metadata = { ...this.state.metadata };\r\n    delete metadata[key];\r\n    this.setState({ metadata });\r\n  }\r\n\r\n  onVectorModeChange = (widget: ICustomStackProperty, value: WidgetTypes.Joystick | WidgetTypes.Sliders | WidgetTypes.Dial | string, initial?: string[]) => {\r\n    const { selected, panels } = this.props;\r\n    const [path, index] = selected.split('_');\r\n\r\n    const w = _.get(panels, `${path}.${index}`, panels);\r\n    let widgets = _.xor(w?.widgets || [], [value]);\r\n\r\n    if (initial) {\r\n      const diff = _.compact(initial.map(key => widgets.find(el => el === key)));\r\n\r\n      if (!diff.length)\r\n        widgets.push(value);\r\n    }\r\n\r\n    w.widgets = widgets;\r\n    widget.widgets = widgets;\r\n    \r\n    this.props.onUpdateView();\r\n  }\r\n\r\n  renderPropertyLabel = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    let value = '', placeholder;\r\n    const exposed = preset?.Exposed[widget?.property] as IExposedProperty;\r\n    if (exposed) {\r\n      placeholder = exposed.DisplayName;\r\n      value = this.state.metadata.Description || exposed.Metadata?.Description || '';\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {/* {exposed &&\r\n          <div className=\"properties-title\">{exposed.OwnerObjects?.[0]?.Name} {exposed.UnderlyingProperty?.Name}</div>\r\n        } */}\r\n        <div className=\"properties-field\">\r\n          <label>Label</label>\r\n          <input type=\"text\"\r\n                  placeholder={placeholder}\r\n                  value={value}\r\n                  onChange={e => this.onMetadataChange(widget, 'Description', e.target.value)}\r\n                  onBlur={() => this.onDiscardStateMetadata('Description')} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderMinMax = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    switch (widget?.widget) {\r\n      case WidgetTypes.Dial:\r\n      case WidgetTypes.Dials:\r\n      case WidgetTypes.Slider:\r\n      case WidgetTypes.Joystick:\r\n      case WidgetTypes.ScaleSlider:\r\n      case WidgetTypes.Sliders:\r\n      case WidgetTypes.Vector:\r\n        const range = WidgetUtilities.getMinMax(preset, widget?.property);\r\n        const { Min, Max } = this.state.metadata;\r\n\r\n        return (\r\n          <>\r\n            <div className=\"properties-field\">\r\n              <label>Minimum</label>\r\n              <input type=\"number\"\r\n                     value={Min ?? range?.min ?? ''}\r\n                     onChange={e => this.onMetadataChange(widget, 'Min', e.target.value)}\r\n                     onBlur={() => this.onDiscardStateMetadata('Min')} />\r\n            </div>\r\n            <div className=\"properties-field\">\r\n              <label>Maximum</label>\r\n              <input type=\"number\"\r\n                     value={Max ?? range?.max ?? ''}\r\n                     onChange={e => this.onMetadataChange(widget, 'Max', e.target.value)}\r\n                     onBlur={() => this.onDiscardStateMetadata('Max')} />\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderDelete = (title?: string) => {\r\n    return (\r\n      <div key=\"delete\" className=\"btn-container\">\r\n        <button className=\"btn btn-danger\" onClick={() => this.onWidgetRemove('Are you sure you want to delete?')}>Delete {title ?? 'Widget'}</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderLabelEdit = () => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"properties-list\">\r\n          <div className=\"properties-field\">\r\n            <label>Label</label>\r\n            <input value={widget.label} onChange={e => this.onChange('label', e.target.value)} />\r\n          </div>\r\n        </div>\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderSpacerEdit = () => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"properties-list\">\r\n          <div className=\"properties-field\">\r\n            <label>Rows</label>\r\n            <input type=\"number\"\r\n                   value={String(widget?.spaces || 1) ?? ''}\r\n                   onChange={e => this.onChange('spaces', +e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderDialEdit = (available: boolean) => {\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {this.renderMinMax()}\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderVectorEdit = (available: boolean) => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const vectorModes = widget?.widgets || [];\r\n\r\n    const exposed = preset?.Exposed[widget?.property] as IExposedProperty;\r\n    let checked = false;\r\n\r\n    if (exposed?.Metadata?.Proportionally === '1')\r\n      checked = true;\r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {widget.propertyType !== PropertyType.Rotator &&\r\n              this.renderMinMax()\r\n            }\r\n            <div className=\"properties-field\">\r\n              <label>Modes</label>\r\n              <div className=\"btn-group vector-btn-group\">\r\n                {widget.propertyType !== PropertyType.Rotator &&\r\n                  <button className={`btn ${vectorModes.includes(WidgetTypes.Joystick) ? 'btn-primary' : 'btn-secondary'}`}\r\n                          onClick={() => this.onVectorModeChange(widget, WidgetTypes.Joystick)}>Joystick</button>\r\n                }\r\n                <button className={`btn ${vectorModes.includes(WidgetTypes.Dial) ? 'btn-primary' : 'btn-secondary'}`}\r\n                        onClick={() => this.onVectorModeChange(widget, WidgetTypes.Dial)}>Dial</button>\r\n                <button className={`btn ${vectorModes.includes(WidgetTypes.Sliders) ? 'btn-primary' : 'btn-secondary'}`}\r\n                        onClick={() => this.onVectorModeChange(widget, WidgetTypes.Sliders)}>Sliders</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"properties-field\">\r\n              <label>Proportionally</label>\r\n              <input className=\"checkbox\" type=\"checkbox\" onChange={e => this.onMetadataChange(widget, 'Proportionally', e.target.checked ? '1' : '0')} checked={checked} />\r\n            </div>\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderDialsEdit = (available: boolean) => {\r\n    return this.renderSlidersEdit(available);\r\n  }\r\n\r\n  renderSlidersEdit = (available: boolean) => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const keys = WidgetUtilities.getPropertyKeys(widget?.propertyType);\r\n    const vectorModes = widget?.widgets || [];\r\n\r\n    const exposed = preset?.Exposed[widget?.property] as IExposedProperty;\r\n    let checked = false;\r\n\r\n    if (exposed?.Metadata?.Proportionally === '1')\r\n      checked = true;\r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {this.renderMinMax()}\r\n            <div className=\"properties-field\">\r\n              <label>Properties</label>\r\n              <div className=\"btn-group vector-btn-group\">\r\n                {keys.map(key => <button key={key}\r\n                                         className={`btn ${vectorModes.includes(key) ? 'btn-primary' : 'btn-secondary'}`}\r\n                                         onClick={() => this.onVectorModeChange(widget, key, keys)}>{key}</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"properties-field\">\r\n              <label>Proportionally</label>\r\n              <input className=\"checkbox\" type=\"checkbox\" onChange={e => this.onMetadataChange(widget, 'Proportionally', e.target.checked ? '1' : '0')} checked={checked} />\r\n            </div>\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onFunctionParameterChanged = (widget: ICustomStackWidget, param: string, value?: any) => {\r\n    const metadata = { ...this.state.metadata };\r\n    metadata[param] = value;\r\n    this.setState({ metadata });\r\n    _.set(widget, param, value);\r\n    this.onViewUpdatedDebounced();\r\n  };\r\n\r\n  renderFunctionEdit = () => {\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const { preset } = this.props;\r\n    const properties = [];\r\n\r\n    const func = preset?.Exposed[widget?.property] as IExposedFunction;\r\n    if (func?.UnderlyingFunction?.Arguments) {\r\n      const { metadata } = this.state;\r\n      const ueLabel = func.Metadata?.Description || func.DisplayName;\r\n      const label = metadata.label || widget.label || '';\r\n      properties.push(<div key=\"label\" className=\"property properties-field\">\r\n        <label>Label</label>\r\n        <input type=\"text\" placeholder={ueLabel} value={label} onChange={e => this.onFunctionParameterChanged(widget, 'label', e.target.value)} />\r\n      </div>);\r\n      for (let i = 0; i < func.UnderlyingFunction.Arguments.length; i++) {\r\n        const arg = func.UnderlyingFunction.Arguments[i];\r\n\r\n        const value = metadata[arg.Name] ?? widget.args?.[arg.Name];\r\n        const argName = `args.${arg.Name}`;\r\n        switch (arg.Type) {\r\n          case PropertyType.String:\r\n          case PropertyType.Text:\r\n            properties.push(<div key={i} className=\"property properties-field\">\r\n              <label>{arg.Name}</label>\r\n              <input type=\"text\" value={value || ''} onChange={e => this.onFunctionParameterChanged(widget, argName, e.target.value)} />\r\n            </div>);\r\n            break;\r\n\r\n          case PropertyType.Uint8:\r\n          case PropertyType.Boolean:\r\n            properties.push(<div key={i} className=\"property properties-field\">\r\n              <input className=\"checkbox\" type=\"checkbox\" checked={!!value} onChange={e => this.onFunctionParameterChanged(widget, argName, e.target.checked)} />\r\n              <label>{arg.Name}</label>\r\n            </div>);\r\n            break;\r\n\r\n          case PropertyType.Int8:\r\n          case PropertyType.Int16:\r\n          case PropertyType.Int32:\r\n          case PropertyType.Uint16:\r\n          case PropertyType.Uint32:\r\n          case PropertyType.Float:\r\n            properties.push(<div key={i} className=\"property properties-field\">\r\n              <label>{arg.Name}</label>\r\n              <input type=\"number\" value={value || ''} onChange={e => this.onFunctionParameterChanged(widget, argName, +e.target.value)} />\r\n            </div>);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    properties.push(this.renderDelete());\r\n    return properties;\r\n  }\r\n\r\n  renderProperties = (available: boolean) => {\r\n    const { selected } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    const panel = this.state.widget as IPanel;\r\n\r\n    if (!selected || !widget)\r\n      return null;\r\n    \r\n    switch (widget?.widget || panel.type) {\r\n      case WidgetTypes.Tabs:\r\n        return this.renderTabsEdit();\r\n\r\n      case 'LIST':        \r\n        return this.renderListsEdit();\r\n\r\n      case 'PANEL':\r\n        return this.renderPanelEdit();\r\n\r\n      case WidgetTypes.ColorPickerList:\r\n        return this.renderColorPickersListEdit();\r\n\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n        return this.renderColorPickerEdit(available);\r\n\r\n      case WidgetTypes.Label:\r\n        return this.renderLabelEdit();\r\n\r\n      case WidgetTypes.Spacer:\r\n        return this.renderSpacerEdit();\r\n\r\n      case WidgetTypes.Dial:\r\n        return this.renderDialEdit(available);\r\n\r\n      case WidgetTypes.Dials:\r\n        return this.renderDialsEdit(available);\r\n\r\n      case WidgetTypes.Vector:\r\n        return this.renderVectorEdit(available);\r\n\r\n      case WidgetTypes.Sliders:\r\n        return this.renderSlidersEdit(available);\r\n\r\n      case WidgetTypes.Button:\r\n        return this.renderFunctionEdit();\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {available &&\r\n          <div className=\"properties-list\">\r\n            {this.renderCompatibleWidgets()}\r\n            {this.renderPropertyLabel()}\r\n            {this.renderMinMax()}\r\n          </div>\r\n        }\r\n        {this.renderDelete()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  isPropertyUsed = (id: string) => {\r\n    const { usedProperties } = this.state;\r\n    return usedProperties[id];\r\n  }\r\n\r\n  isPropertyAvailable = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    return !!(widget?.property && preset?.Exposed[widget.property]);\r\n  }\r\n\r\n  onWidgetTypeChanged = (widget: ICustomStackProperty, type: WidgetType) => {\r\n    this.onMetadataChange(widget, 'Widget', type);\r\n    \r\n    if (widget.widget) {\r\n      widget.widget = type;\r\n      this.props.onUpdateView();\r\n    }\r\n  }\r\n\r\n  renderCompatibleProperties = (available: boolean) => {\r\n    const { selected, preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n\r\n    if (!selected || !widget || !widget.widget)\r\n      return null;\r\n\r\n    switch (widget.widget) {\r\n      case WidgetTypes.Button:\r\n      case WidgetTypes.ColorPicker:\r\n      case WidgetTypes.MiniColorPicker:\r\n      case WidgetTypes.Dial:\r\n      case WidgetTypes.Dials:\r\n      case WidgetTypes.Dropdown:\r\n      case WidgetTypes.ImageSelector:\r\n      case WidgetTypes.Joystick:\r\n      case WidgetTypes.Slider:\r\n      case WidgetTypes.Sliders:\r\n      case WidgetTypes.Text:\r\n      case WidgetTypes.Toggle:\r\n      case WidgetTypes.Vector:\r\n        break;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n\r\n    const compatible = _.filter(preset.Exposed, w => w.Metadata.Widget === widget.widget);\r\n    const onPropertyChange = (id: string) => {\r\n      const element = preset.Exposed[id];\r\n\r\n      widget.propertyType = element?.Type;\r\n      widget.property = id;\r\n\r\n      this.props.onUpdateView();\r\n    };\r\n\r\n    return (\r\n      <div className=\"types-selection\">\r\n        <div className=\"dropdown-widget properties-field\">\r\n          <label>Property</label>\r\n          {!available && <FontAwesomeIcon icon={['fas', 'exclamation-circle']} className=\"unbound-icon\" />}\r\n          <select className=\"dropdown\" value={widget.property || ''} onChange={e => onPropertyChange(e.target.value)}>\r\n            {!available && <option value=\"\">Unbound Property</option>}\r\n            {compatible.map(option => \r\n              <option key={option.ID} value={option.ID}>{this.isPropertyUsed(option.ID) ? '• ' : ' '}{option.DisplayName}</option>\r\n            )}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCompatibleWidgets = () => {\r\n    const { preset } = this.props;\r\n    const widget = this.state.widget as ICustomStackProperty;\r\n    if (!widget || !preset)\r\n      return null;\r\n\r\n    const property = preset.Exposed[widget.property];\r\n    const compatible = WidgetUtilities.getCompatibleWidgets(property?.Type);\r\n    const noValue = !property?.Metadata?.Widget || !compatible.find(w => property.Metadata.Widget === w);\r\n\r\n    return (\r\n      <div className=\"dropdown-widget properties-field\">\r\n        <label>Widget</label>\r\n        {!!noValue && <FontAwesomeIcon icon={['fas', 'exclamation-circle']} className=\"unbound-icon\" />}\r\n        <select className=\"dropdown\" value={property?.Metadata?.Widget || ''} onChange={e => this.onWidgetTypeChanged(widget, e.target.value)}>\r\n          {!!noValue &&\r\n            <option value=\"\">[ No Widget Selected ]</option>\r\n          }\r\n          {compatible.map(option => <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  renderDraggableItem = (element: IExposedProperty & IExposedFunction, index: number) => {\r\n    const { selected } = this.props;\r\n    let draggableId = `${element.DisplayName}_`;\r\n\r\n    switch (element.Metadata?.Widget) {\r\n      case WidgetTypes.Button:\r\n        draggableId += WidgetTypes.Button;\r\n        break;\r\n\r\n      case WidgetTypes.ColorPicker:\r\n        draggableId += WidgetTypes.ColorPicker;\r\n        break;\r\n\r\n      case WidgetTypes.MiniColorPicker:\r\n        draggableId += WidgetTypes.MiniColorPicker;\r\n        break;\r\n\r\n      case WidgetTypes.Toggle:\r\n        draggableId += WidgetTypes.Toggle;\r\n        break;\r\n\r\n      case WidgetTypes.Dial:\r\n        draggableId += WidgetTypes.Dial;\r\n        break;\r\n\r\n      case WidgetTypes.Dials:\r\n        draggableId += WidgetTypes.Dials;\r\n        break;\r\n\r\n      default:\r\n        draggableId += 'WIDGET';\r\n        break;\r\n    }\r\n\r\n    let widgetClassName = 'draggable-widget control-widget ';\r\n    let property = _.last(selected?.split('_')) || null;\r\n    let isDragDisabled = !element.Metadata?.Widget?.length;\r\n\r\n    if (this.isPropertyUsed(element.ID))\r\n      widgetClassName += 'widget-in-use ';\r\n\r\n    if (property === element.ID)\r\n      widgetClassName += 'selected ';\r\n\r\n    if (isDragDisabled)\r\n      widgetClassName += 'disabled ';\r\n\r\n    const widget = (\r\n      <div className={widgetClassName} data-tooltip={element.DisplayName}>\r\n        <img src=\"/images/GripDotsBlocks.svg\" alt=\"Drag\" className=\"grip-handle\"/>\r\n        <label>{element.DisplayName}</label>\r\n        <div className=\"item-icon\">\r\n          {element.Metadata?.Widget}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Draggable key={draggableId} draggableId={draggableId} index={index} isDragDisabled={isDragDisabled}>\r\n        {(provided, snapshot) => (\r\n          <>\r\n            {snapshot.isDragging && widget}\r\n            <li {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                ref={provided.innerRef}\r\n                style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                onClick={this.props.onSelected.bind(this, `__${element.ID}`)}>\r\n              {!snapshot.isDragging ? widget : (\r\n                <div className=\"dragging-overlay\">\r\n                  {this.renderWidget(this.getWidgetFromElement(element))}\r\n                </div>\r\n              )}\r\n            </li>\r\n          </>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n\r\n  renderTab = (tab: { title: string, key: TabType }) => {\r\n    const { view } = this.props;\r\n    const { title, key } = tab;\r\n\r\n    if (!view.tabs.length && key !== TabType.Presets)\r\n      return null;\r\n\r\n    let className = 'drawer-nav-tab ';\r\n\r\n    if (this.state.tab === key)\r\n      className += 'active';\r\n\r\n    return (\r\n      <li className={className} key={key} onClick={() => this.setState({ tab: key })}>\r\n        {title}\r\n      </li>\r\n    );\r\n  }\r\n\r\n  renderTabContent = () => {\r\n    const { preset } = this.props;\r\n    const { filteredGroups, filteredWidgets, filteredPresets, tab } = this.state;\r\n\r\n    switch (tab) {\r\n      case TabType.Properties:\r\n        return <Tabs.Properties groups={filteredGroups}\r\n                                preset={preset}                                \r\n                                renderDraggableItem={this.renderDraggableItem}\r\n                                onWidgetsLock={exposed => this.props.lockWidget(exposed.map(this.getWidgetFromElement))}\r\n                                onSerach={this.onPropertiesFilter} />;\r\n\r\n      case TabType.Tab:\r\n        return <Tabs.Tab onChangeIcon={this.props.onChangeIcon}\r\n                         onRenameTabModal={this.props.onRenameTabModal}\r\n                         onDuplicateTab={this.props.onDuplicateTab} />;\r\n\r\n      case TabType.Widgets:\r\n        return <Tabs.Widgets widgets={filteredWidgets}\r\n                             renderWidget={this.renderWidget}\r\n                             onSearch={this.onWidgetsFilter} />;\r\n\r\n      case TabType.Presets:\r\n        return <Tabs.Pressets preset={preset}\r\n                              pressets={filteredPresets}\r\n                              onPresetChange={this.props.onPresetChange}\r\n                              onSearch={this.onPresetFilter} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.editable)\r\n      return null;\r\n\r\n    const { editTab } = this.state;\r\n    let className = 'drawer list ';\r\n\r\n    if (editTab)\r\n      className += 'tab-editable';\r\n\r\n    const available = this.isPropertyAvailable();\r\n\r\n    return (\r\n      <nav id=\"tabs-drawer-layout\" className={className}>\r\n        <ul className=\"drawer-nav\">\r\n          {tabs.map(this.renderTab)}\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {this.renderTabContent()}\r\n        </div>\r\n        <div className='nav-properties'>\r\n          <div className=\"properties-grid\">\r\n            {this.renderCompatibleProperties(available)}\r\n            {this.renderProperties(available)}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Draggable, Droppable, DraggableProps, DroppableProps, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { Virtuoso, ItemProps } from 'react-virtuoso';\r\nimport { IPanel, WidgetTypes } from 'src/shared';\r\n\r\n\r\nexport type DraggableWidgetProps = Partial<DraggableProps> & {\r\n  index: number;\r\n  className?: string;\r\n  children?: any;\r\n  alignRight?: boolean;\r\n  selected?: boolean;\r\n\r\n  onPointerChange?:(draggableId: string | null) => void;\r\n  onSelect?: (e?: React.MouseEvent) => void;\r\n};\r\n\r\nexport class DraggableWidget extends React.Component<DraggableWidgetProps> {\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDropAnimating) {\r\n      if (!snapshot.isDragging && !!style.transform) {      \r\n        const position = style.transform.replace(/translate|[(|)]/g, '');\r\n        const [left, top] = position.split(', ');\r\n        \r\n        style = { ...style, transform: '', left, top };\r\n      };\r\n\r\n      return style;\r\n    }\r\n\r\n    return { ...style, transitionDuration: '0.001s' };\r\n  }\r\n\r\n  render() {\r\n    const { children, draggableId, isDragDisabled, index, selected } = this.props;\r\n\r\n    return (\r\n      <Draggable key={draggableId}\r\n                 draggableId={draggableId} \r\n                 index={index}\r\n                 isDragDisabled={isDragDisabled}>\r\n        {(provided, snapshot) => {\r\n          let className = `draggable-item ${this.props.className ?? ''} `;\r\n          let dragHandleClass = 'drag-handle ';\r\n\r\n          if (!isDragDisabled && !!children)\r\n            className += 'edit ';\r\n\r\n          if (snapshot.isDragging)\r\n            className += 'dragging ';\r\n\r\n          if (selected)\r\n            className += 'selected ';\r\n\r\n          return (\r\n            <div ref={provided.innerRef}\r\n                 className={className}\r\n                 {...provided.draggableProps}\r\n                 style={this.getStyle(provided.draggableProps.style, snapshot)}\r\n                 onClick={e => {\r\n                   if (!e.defaultPrevented)\r\n                     this.props.onSelect?.(e);\r\n\r\n                   e.preventDefault();\r\n                   e.stopPropagation();\r\n                 }}>\r\n              <span {...provided.dragHandleProps}\r\n                    onPointerDown={() => this.props.onPointerChange?.(draggableId)}\r\n                    className={dragHandleClass}\r\n                    tabIndex={-1}>\r\n                <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\"/>\r\n              </span>\r\n              {children}\r\n            </div>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    );\r\n  }\r\n};\r\n\r\nexport type DroppableWidgetProps = Partial<DroppableProps> & {\r\n  className?: string;\r\n  children?: any;\r\n  type?: WidgetTypes;\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nexport class DroppableWidget extends React.Component<DroppableWidgetProps> {\r\n  \r\n  render() {\r\n    const { children, droppableId, type, style = {}, ...props } = this.props;\r\n\r\n    return (\r\n      <Droppable key={droppableId}\r\n                 droppableId={droppableId}\r\n                 {...props}>\r\n        {(provided, snapshot) => {\r\n          let className = `droppable ${this.props.className ?? ''} `;\r\n\r\n          if (snapshot.isDraggingOver)\r\n            className += 'dragging ';\r\n\r\n          return (\r\n            <div ref={provided.innerRef}\r\n                 className={className}\r\n                 data-type={type}\r\n                 {...provided.droppableProps}\r\n                 style={style}>\r\n              {children}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    );\r\n  }\r\n}\r\n\r\nexport type DroppableVirtualListProps = Partial<DroppableProps> & {\r\n  className?: string;\r\n  data: IPanel[];\r\n\r\n  itemContent: (index: number, panel: IPanel) => React.ReactElement;\r\n}\r\n\r\nexport class VirtualList extends React.Component<DroppableVirtualListProps> {\r\n\r\n  renderItemPlaceholder = (itemProps: ItemProps & { children: React.ReactNode }) => {\r\n    const { children, ...props } = itemProps;\r\n\r\n    return (\r\n      <div {...props} style={{ height: props['data-known-size'] ?? undefined }}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getItemSize = (el: HTMLElement) => {\r\n    const child = el.firstChild as HTMLElement;\r\n\r\n    return child?.clientHeight ?? el.clientHeight;\r\n  }\r\n  \r\n  render() {\r\n    const { data, droppableId, className, ...props } = this.props;\r\n\r\n    return (\r\n      <Droppable {...props}\r\n                 droppableId={droppableId}\r\n                 key={droppableId}>\r\n        {provided => {\r\n          let className = `droppable ${this.props.className ?? ''} `;\r\n\r\n          return <Virtuoso scrollerRef={provided.innerRef}\r\n                           data={data}\r\n                           style={{ height: '100%' }}\r\n                           components={{ Item: this.renderItemPlaceholder }}\r\n                           className={className}\r\n                           itemSize={this.getItemSize}\r\n                           itemContent={this.props.itemContent} />;\r\n        }}\r\n      </Droppable>\r\n    );\r\n  }\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { IPreset } from 'src/shared';\r\nimport { Search } from '../controls';\r\nimport { _api } from '../../reducers';\r\nimport _ from 'lodash';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\n\r\ntype Props = {\r\n  preset: IPreset;\r\n  pressets: IPreset[];\r\n\r\n  onPresetChange: (preset: IPreset) => void;\r\n  onSearch: (value: string) => void;\r\n}\r\n\r\ntype State = {\r\n  spin: string;\r\n}\r\n\r\nexport class Pressets extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    spin: null,\r\n  }\r\n\r\n  onFavoriteToggled = (e: React.MouseEvent, preset: IPreset) => {\r\n    const { spin } = this.state;\r\n    e.stopPropagation();\r\n\r\n    if (spin !== preset.ID)\r\n      this.setState({ spin: preset.ID });\r\n\r\n    this.onDebouncedFavoriteClick(preset);\r\n  }\r\n\r\n  onFavoritePreset = async (preset: IPreset) => {\r\n    if (!preset.IsFavorite)\r\n      this.props.onPresetChange(preset);\r\n\r\n    await _api.presets.favorite(preset.ID, !preset.IsFavorite);\r\n    this.setState({ spin: null });\r\n  }\r\n\r\n  onDebouncedFavoriteClick = _.debounce(this.onFavoritePreset, 100);\r\n\r\n  render() {\r\n    const { preset, pressets } = this.props;\r\n    const { spin } = this.state;\r\n\r\n    return (\r\n      <div className=\"presets-tab\">\r\n        <Search placeholder=\"Search Presets\" onSearch={this.props.onSearch} />\r\n        <div className=\"presets-wrapper\">\r\n          {pressets.map(p => {\r\n            let className = 'btn preset-btn ';\r\n            let spinIconClassName = 'spin-icon ';\r\n            let icon: IconProp = ['far', 'star'];\r\n\r\n            if (p.IsFavorite)\r\n              icon = ['fas', 'star'];\r\n\r\n            if (p.ID === preset?.ID) {\r\n              className += 'active';\r\n            }\r\n\r\n            if (spin === p.ID)\r\n              spinIconClassName += 'visible';\r\n\r\n            return (\r\n              <div key={p?.ID} className={className} onClick={() => this.props.onPresetChange(p)}>\r\n                <FontAwesomeIcon className={spinIconClassName} icon={['fas', 'sync']} spin />\r\n                <FontAwesomeIcon className='favorite-icon' icon={icon} onClick={e => this.onFavoriteToggled(e, p)} />\r\n                {p?.Name}\r\n                <div className=\"item-icon\">\r\n                  <FontAwesomeIcon icon={['fas', 'external-link-square-alt']} />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  onChangeIcon: () => void;\r\n  onRenameTabModal: () => void;\r\n  onDuplicateTab: () => void;\r\n}\r\n\r\nexport class Tab extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className=\"tabs-tab\">\r\n        <div className=\"button-list\">\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onChangeIcon}>Change tab icon</button>\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onRenameTabModal}>Rename Tab</button>\r\n          <button tabIndex={-1} className=\"btn btn-secondary\" onClick={this.props.onDuplicateTab}>Duplicate Tab</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Search } from '../controls';\r\nimport { Droppable, Draggable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IPanelType, WidgetTypes, ICustomStackProperty } from 'src/shared';\r\nimport { DropWidgetsType } from '../';\r\n\r\n\r\ntype Props = {\r\n  widgets: DropWidgetsType[];\r\n\r\n  renderWidget: (widget: ICustomStackProperty) => React.ReactNode;\r\n  onSearch: (value: string) => void;\r\n}\r\n\r\nexport class Widgets extends React.Component<Props> {\r\n\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDragging)\r\n      return { ...style, transform: 'none' };\r\n\r\n    if (!snapshot.isDropAnimating)\r\n      return { ...style, height: 'auto', width: 'auto', minWidth: '350px' };\r\n\r\n    return { ...style, height: 'auto', width: 'auto', minWidth: '350px', transitionDuration: '0.001s' };\r\n  }\r\n\r\n  render() {\r\n    const { widgets } = this.props;\r\n\r\n    return (\r\n      <div className=\"widgets-tab\">\r\n        <Search placeholder=\"Search Widgets\" onSearch={this.props.onSearch} />\r\n        <div className=\"layout-widgets\">\r\n          {widgets.map(w => (\r\n            <Droppable droppableId={w.id} key={w.id} isDropDisabled>\r\n              {(provided) => (\r\n                <div {...provided.droppableProps} \r\n                     ref={provided.innerRef}>\r\n                  <Draggable key={w.id} \r\n                             draggableId={w.id}\r\n                             index={0}>\r\n                    {(provided, snapshot) => {\r\n                      let className = 'layout-panel layout-widget draggable-widget';\r\n                      let itemIcon: JSX.Element = null;\r\n                      let widget = null;\r\n                      let dragging = null;\r\n\r\n                      switch (w.type) {\r\n                        case 'PANEL':\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'columns']} />;\r\n                          widget = { type: IPanelType.Panel, widgets: [] };\r\n                          break;\r\n\r\n                        case 'LIST':\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'list']} />;\r\n                          widget = { type: IPanelType.List, items: [{ label: 'Item 1', panels: [] }] };\r\n                          break;\r\n\r\n                        case WidgetTypes.Tabs:\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'table']} />;\r\n                          widget = { widget: WidgetTypes.Tabs, tabs: [{ label: 'Tab 1', widgets: [] }] };\r\n                          break;\r\n\r\n                        case WidgetTypes.Label:\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'font']} />;\r\n                          widget = { widget: WidgetTypes.Label, label: 'New label' };\r\n                          break;\r\n\r\n                        case WidgetTypes.Spacer:\r\n                          itemIcon = <FontAwesomeIcon icon={['fas', 'square']} />;\r\n                          widget = { widget: WidgetTypes.Spacer, label: '' };\r\n                          break;\r\n\r\n                        case WidgetTypes.Dial:\r\n                          itemIcon = <div className=\"item-icon\"><img src=\"/images/icons/Dial.svg\" alt=\"Slider\" /></div>;\r\n                          widget = { widget: WidgetTypes.Dial, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Slider:\r\n                          itemIcon = <div className=\"item-icon\"><img src=\"/images/icons/Sliders.svg\" alt=\"Slider\" /></div>;\r\n                          widget = { widget: WidgetTypes.Slider, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.ColorPicker:\r\n                          itemIcon = <div className=\"item-icon\">Color Picker</div>;\r\n                          widget = { widget: WidgetTypes.ColorPicker, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.MiniColorPicker:\r\n                          itemIcon = <div className=\"item-icon\">Mini Color Picker</div>;\r\n                          widget = { widget: WidgetTypes.MiniColorPicker, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.ColorPickerList:\r\n                          itemIcon = <div className=\"item-icon\">Color Picker List</div>;\r\n                          widget = { widget: WidgetTypes.ColorPickerList, items: [] };\r\n                          break;\r\n\r\n                        case WidgetTypes.Toggle:\r\n                          itemIcon = <div className=\"item-icon\">Toggle</div>;\r\n                          widget = { widget: WidgetTypes.Toggle, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Joystick:\r\n                          itemIcon = <div className=\"item-icon\"><img src=\"/images/icons/Joystick.svg\" alt=\"Slider\" /></div>;\r\n                          widget = { widget: WidgetTypes.Joystick, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Button:\r\n                          itemIcon = <div className=\"item-icon\">Button</div>;\r\n                          widget = { widget: WidgetTypes.Button, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Text:\r\n                          itemIcon = <div className=\"item-icon\">Text</div>;\r\n                          widget = { widget: WidgetTypes.Text, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Dropdown:\r\n                          itemIcon = <div className=\"item-icon\">Dropdown</div>;\r\n                          widget = { widget: WidgetTypes.Dropdown, property: null, propertyType: null };\r\n                          break;\r\n\r\n                        case WidgetTypes.Vector:\r\n                          itemIcon = <div className=\"item-icon\">Vector</div>;\r\n                          widget = { widget: WidgetTypes.Vector, property: null, propertyType: null };\r\n                          break;\r\n                      }\r\n \r\n                      if (snapshot.isDragging) {\r\n                        className += ' dragging';\r\n                        dragging = this.props.renderWidget(widget);\r\n\r\n                        if (!dragging)\r\n                          dragging = (\r\n                            <>\r\n                              <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                              {w.label}\r\n                              <div className=\"item-icon\">{itemIcon}</div>\r\n                            </>\r\n                          );\r\n                      }\r\n\r\n                      return (\r\n                        <>\r\n                          {snapshot.isDragging &&\r\n                            <div className=\"draggable-widget\">\r\n                              <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                              <div className=\"item-label\">{w.label}</div>\r\n                              <div className=\"item-icon\">{itemIcon}</div>\r\n                            </div>\r\n                          }\r\n                          <div {...provided.draggableProps}\r\n                               {...provided.dragHandleProps}\r\n                               className={className}\r\n                               ref={provided.innerRef}\r\n                               style={this.getStyle(provided.draggableProps.style, snapshot)}>\r\n                            {snapshot.isDragging ? dragging : (\r\n                              <>\r\n                                <img src=\"/images/GripDotsBlocks.svg\" alt=\"drag\" className=\"grip-handle\" />\r\n                                <span className=\"item-label\">{w.label}</span>\r\n                                <div className=\"item-icon\">{itemIcon}</div>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </>\r\n                      );\r\n                    }}\r\n                  </Draggable>\r\n                  <div style={{ display: 'none' }}>{provided.placeholder}</div>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Search } from '../controls';\r\nimport { Droppable, Draggable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport { IExposedFunction, IExposedProperty, IGroup, IPreset } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  groups: IGroup[];\r\n  preset: IPreset;\r\n\r\n  renderDraggableItem: (element: IExposedProperty & IExposedFunction, index: number) => void;\r\n  onWidgetsLock: (widgets: (IExposedProperty | IExposedFunction)[]) => void;\r\n  onSerach: (value: string) => void;\r\n}\r\n\r\ntype State = {\r\n  collapsed: Record<string, boolean>;\r\n}\r\n\r\nexport class Properties extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    collapsed: {}\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    const { preset } = this.props;\r\n\r\n    if (preset?.Name !== prevProps.preset?.Name)\r\n      this.setState({ collapsed: {} });\r\n  }\r\n\r\n  onToggleGroup = (key: string) => {\r\n    const { collapsed } = this.state;\r\n\r\n    this.setState({ collapsed: { ...collapsed, [key]: !collapsed[key] }  });\r\n  }\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    if (!snapshot.isDragging)\r\n      return { ...style, transform: 'none' };\r\n\r\n    if (!snapshot.isDropAnimating)\r\n      return style;\r\n\r\n    return { ...style, transitionDuration: '0.001s' };\r\n  }\r\n\r\n  renderGroup = (group: IGroup, index: number) => {\r\n    const { collapsed } = this.state;\r\n    const exposed = [...group.ExposedProperties, ...group.ExposedFunctions];\r\n    \r\n    if (!exposed.length)\r\n      return null;\r\n\r\n    let icon: IconProp = ['fas', 'caret-down'];\r\n    let className = 'items-list ';\r\n\r\n    if (collapsed[group.Name])\r\n      icon = ['fas', 'caret-right'];\r\n    else\r\n      className += 'expanded';\r\n\r\n    return (\r\n      <li key={group.Name}>\r\n        <Draggable draggableId={`${group.Name}_WIDGET`} index={index}>\r\n          {(provided, snapshot) => {\r\n\r\n            if (snapshot.isDragging)\r\n              this.props.onWidgetsLock(_.filter(exposed, p => !!p.Metadata?.Widget));\r\n\r\n            return (\r\n              <>\r\n                {snapshot.isDragging && (\r\n                  <div className=\"list-title\">\r\n                    {group.Name}\r\n                    <FontAwesomeIcon icon={icon} />\r\n                  </div>\r\n                )}\r\n                <div {...provided.draggableProps}\r\n                     {...provided.dragHandleProps}\r\n                     className=\"list-title\"\r\n                     onClick={this.onToggleGroup.bind(this, group.Name)}\r\n                     ref={provided.innerRef}\r\n                     style={this.getStyle(provided.draggableProps.style, snapshot)}>\r\n                  {group.Name}\r\n                  <FontAwesomeIcon icon={icon} />\r\n                </div>\r\n              </>\r\n            );\r\n          }}\r\n        </Draggable>\r\n        <Droppable key={group.Name}\r\n                   droppableId={`ADDWIDGET_${group.Name}`}\r\n                   isDropDisabled>\r\n          {(provided) => {\r\n            return (\r\n              <ul ref={provided.innerRef}\r\n                   className={className}\r\n                {...provided.droppableProps}>\r\n                {!collapsed[group.Name] && exposed.map(this.props.renderDraggableItem)}\r\n                <div style={{ display: 'none' }}>{provided.placeholder}</div>\r\n              </ul>\r\n            );\r\n          }}\r\n        </Droppable>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { groups } = this.props;\r\n\r\n    return (\r\n      <div className=\"properties-tab\">\r\n        <Search placeholder=\"Search Properties\" onSearch={this.props.onSerach} />\r\n        <div className=\"nav-list-container\">\r\n          <Droppable droppableId=\"properties-droppable\">\r\n            {provided => (\r\n              <ul ref={provided.innerRef}\r\n                  className=\"nav-list\"\r\n                {...provided.droppableProps}>\r\n                {groups.map(this.renderGroup)}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { _api } from 'src/reducers';\r\nimport _ from 'lodash';\r\nimport { Button, ColorPicker, Search, Slider, TabPane, Tabs, VectorControl, SliderWheel, ValueInput } from '../../controls';\r\nimport { AlertModal } from '../../../components';\r\nimport { AssetWidget } from '../../Widgets';\r\nimport { CorrectionColorPicker, PaginationContent } from './';\r\nimport { PropertyType, PropertyValue } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\n\r\nexport enum Section {\r\n  ColorCorrection = 'ColorCorrection',\r\n  LightCards      = 'LightCards',\r\n}\r\n\r\nexport enum CCRMode {\r\n  Global      = 'Global',\r\n  Highlights  = 'Highlights',\r\n  Midtones    = 'Midtones',\r\n  Shadows     = 'Shadows',\r\n  Color       = 'Color',\r\n}\r\n\r\nexport enum ColorProperty {\r\n  Gain        = 'Gain',\r\n  Gamma       = 'Gamma',\r\n  Saturation  = 'Saturation',\r\n  Contrast    = 'Contrast',\r\n  Offset      = 'Offset',\r\n}\r\n\r\nexport enum ColorMode {\r\n  Rgb         = 'RGB',\r\n  Hsv         = 'HSV'\r\n}\r\n\r\nenum ActorsGroup {\r\n  All       = 'All',\r\n  Favorites = 'Favorites',\r\n}\r\n\r\nexport enum SliderMode {\r\n  Infinity    = 'Infinity',\r\n  Sliders     = 'Sliders'\r\n}\r\n\r\nexport enum Sensitivity {\r\n  x025 = '0.25',\r\n  x05 = '0.5',\r\n  x1 = '1',\r\n  x2 = '2',\r\n  x5 = '5',\r\n}\r\n\r\ntype Action = {\r\n  timestamp: number;\r\n  target: string;\r\n  property: string;\r\n  value: any;\r\n}\r\n\r\ntype Props = {\r\n};\r\n\r\ntype State = {\r\n  selected: string;\r\n  actors: Record<string, string>;\r\n  values: Record<string, any>;\r\n  favorites: Record<string, boolean>;\r\n  mode: CCRMode;\r\n  value: any;\r\n  root: any;\r\n  colorProperty: ColorProperty;\r\n  range: { min: number, max: number };\r\n  search: string;\r\n  section: Section;\r\n  actorsGroup: ActorsGroup;\r\n  sliderMode: SliderMode;\r\n  sensitivity: Sensitivity;\r\n};\r\n\r\nexport class ColorCorrection extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    selected: '',\r\n    actors: {},\r\n    values: {},\r\n    favorites: {},\r\n    mode: CCRMode.Global,\r\n    value: {},\r\n    root: {},\r\n    colorProperty: ColorProperty.Gain,\r\n    range: { min: 0, max: 2 },\r\n    search: '',\r\n    section: Section.ColorCorrection,\r\n    actorsGroup: ActorsGroup.All,\r\n    sliderMode: SliderMode.Infinity,\r\n    sensitivity: Sensitivity.x1,\r\n  };\r\n\r\n  timer: NodeJS.Timeout;\r\n  actorsLength = 15;\r\n  updateSelection = false;\r\n  actionsStack: Action[] = [];\r\n  \r\n  async componentDidMount() {\r\n    try {\r\n      const favorites = localStorage.getItem('favorites');\r\n      if (favorites)\r\n        this.setState({ favorites: JSON.parse(favorites) });\r\n    } catch {\r\n    }\r\n\r\n    await this.onRefresh();\r\n    this.timer = setInterval(this.onRefresh, 1000);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State>) {\r\n    const { colorProperty, value, mode } = this.state;\r\n\r\n    if (colorProperty !== prevState.colorProperty || mode !== prevState.mode) {\r\n      const range = this.getRange(_.get(value, this.getColorProperty()));\r\n      this.setState({ range });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n    this.timer = null;\r\n  }\r\n\r\n  onRefresh = async () => {\r\n    await this.onRefreshActors();\r\n    await this.onRefreshValues();\r\n  }\r\n\r\n  onActorSelect = (selected: string) => {\r\n    const { values } = this.state;\r\n    const value = values[selected] ?? {};\r\n    this.setState({ selected, value }, () => this.onRefreshValues(true));\r\n  }\r\n\r\n  onToggleActorEnable = (selected: string) => {\r\n    const { values, section } = this.state;\r\n    const value = values[selected] ?? {};\r\n    switch (section) {\r\n      case Section.ColorCorrection:\r\n        this.onPropertyChange('Enabled', !value.Enabled);\r\n        break;\r\n    \r\n      case Section.LightCards:\r\n        this.onPropertyChange('bHidden', !value.bHidden);\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSpawnActor = async () => {\r\n    const { section } = this.state;\r\n    this.updateSelection = true;\r\n    let Class;\r\n\r\n    switch (section) {\r\n      case Section.ColorCorrection:\r\n        Class = '/Script/ColorCorrectRegions.ColorCorrectionRegion';\r\n        break;\r\n\r\n      case Section.LightCards:\r\n        Class = '/Script/DisplayCluster.DisplayClusterLightCardActor';\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'SpawnActor',\r\n      { Class }\r\n    );\r\n\r\n    await this.onRefreshActors();\r\n  }\r\n\r\n  onDeleteActor = async() => {\r\n    const { selected, section } = this.state;\r\n    if (!selected)\r\n      return;\r\n\r\n    if (!await AlertModal.show(`Delete ${section === Section.ColorCorrection ? 'Color Correct Region' : 'Light Card'}?`))\r\n      return;\r\n\r\n    await _api.proxy.function(selected, 'DestroyActor');\r\n    this.onRefreshActors();\r\n  }\r\n\r\n  onRefreshActors = async () => {\r\n    const { section } = this.state;\r\n    let Class;\r\n    switch (section) {\r\n      case Section.ColorCorrection:\r\n        Class = '/Script/ColorCorrectRegions.ColorCorrectRegion';\r\n        break;\r\n\r\n      case Section.LightCards:\r\n        Class = '/Script/DisplayCluster.DisplayClusterLightCardActor';\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    const actors = await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'FindAllActorsOfClass',\r\n      { Class }\r\n    ) ?? {};\r\n\r\n    const timestamp = Date.now();\r\n    const values = await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'GetValuesOfActorsByClass',\r\n      { Class }\r\n    ) ?? {};\r\n\r\n    _.remove(this.actionsStack, action => action.timestamp <= timestamp);\r\n\r\n    for (const actor in values)\r\n      values[actor] = JSON.parse(values[actor]);\r\n\r\n    for (const action of this.actionsStack)\r\n      _.set(values[action.target], action.property, action.value);\r\n\r\n    if (!_.isEqual(this.state.actors, actors) || !_.isEqual(this.state.values, values)) {\r\n      let { selected } = this.state;\r\n\r\n      if (selected && !actors[selected])\r\n        selected = undefined;\r\n\r\n      if (!selected)\r\n        selected = _.first(Object.keys(actors));\r\n\r\n      if (this.updateSelection)\r\n        selected = _.last(Object.keys(actors));\r\n\r\n      const value = values[selected];\r\n\r\n      this.updateSelection = false;\r\n      this.setState({ actors, values, selected, value });\r\n    }\r\n  }\r\n\r\n  getRootComponentPath = () => {\r\n    const { section, selected } = this.state;\r\n    if (!selected)\r\n      return selected;\r\n\r\n    let root = '.Root';\r\n    if (section === Section.LightCards)\r\n      root = '.DefaultSceneRoot';\r\n    \r\n\r\n    let index = selected.lastIndexOf(\"'\");\r\n    if (index < 0)\r\n      return `${selected}${root}`;\r\n\r\n    return selected.slice(0, index) + root + selected.slice(index);\r\n  }\r\n\r\n  onRefreshValues = async (update = false) => {\r\n    let { selected, range } = this.state;\r\n    if (!selected)\r\n      return;\r\n\r\n    //const value = await _api.proxy.put('/remote/object/property', { objectPath: selected, access: 'READ_ACCESS' });\r\n    const root = await _api.proxy.put('/remote/object/property', { objectPath: this.getRootComponentPath(), access: 'READ_ACCESS' });\r\n\r\n    if (!_.isEqual(this.state.root, root)) {\r\n      // if (update || _.isEmpty(this.state.value))\r\n      //   range = this.getRange(_.get(value, this.getColorProperty()));\r\n      this.setState({ /*value,*/ root, range });\r\n    }\r\n  }\r\n\r\n  onRootPropertyValueChangeInternal = async (propertyName: string, property: string, value: any) => {\r\n    const { selected, root } = this.state;\r\n    if (!selected)\r\n      return;\r\n\r\n    const propertyValue = _.set({}, _.compact([propertyName, property]), value);\r\n    _.merge(root, propertyValue);\r\n    this.setState({ root });\r\n\r\n    await _api.proxy.put('/remote/object/property', {\r\n      objectPath: this.getRootComponentPath(),\r\n      access: 'WRITE_TRANSACTION_ACCESS',\r\n      propertyName,\r\n      propertyValue\r\n    });\r\n  }\r\n\r\n  onPropertyValueChangeInternal = async (propertyName: string, property: string, value: any) => {\r\n    const { selected } = this.state;\r\n    if (!selected)\r\n      return;\r\n\r\n    const propertyValue = _.set({}, property, value);\r\n    const action: Action = { timestamp: Date.now(), target: selected, property, value };\r\n\r\n    this.actionsStack.push(action);\r\n\r\n    await _api.proxy.put('/remote/object/property', {\r\n      objectPath: selected,\r\n      access: 'WRITE_TRANSACTION_ACCESS',\r\n      propertyName,\r\n      propertyValue\r\n    });\r\n  }\r\n\r\n  onThrottledPropertyValueChange = _.throttle(this.onPropertyValueChangeInternal, 100);\r\n  onThrottledRootPropertyValueChange = _.throttle(this.onRootPropertyValueChangeInternal, 100);\r\n\r\n  onPropertyChange = (property: string, v: any) => {\r\n    const { value } = this.state;\r\n    _.set(value, property, v);\r\n    this.setState({ value });\r\n\r\n    const [propertyName] = property.split('.');\r\n    this.onThrottledPropertyValueChange(propertyName, property, v);\r\n  }\r\n\r\n  onReset = async (property: string, value: PropertyValue) => {\r\n    if (!await AlertModal.show('Are you sure you want to reset?'))\r\n      return;\r\n\r\n    this.onPropertyChange(property, value);  \r\n  }\r\n\r\n  onFavoriteToggle = () => {\r\n    const { selected, favorites, actorsGroup } = this.state;\r\n    const actor = favorites[selected];\r\n\r\n    if (actorsGroup === ActorsGroup.Favorites && !actor)\r\n      return;\r\n\r\n    favorites[selected] = !favorites[selected];\r\n    if (!favorites[selected])\r\n      delete favorites[selected];\r\n\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n    \r\n    this.setState({ favorites });\r\n  }\r\n\r\n  onSectionChange = (section: Section) => {\r\n    let { mode } = this.state;\r\n\r\n    switch (section) {\r\n      case Section.ColorCorrection:\r\n        mode = CCRMode.Global;\r\n        break;\r\n\r\n      case Section.LightCards:\r\n        mode = CCRMode.Color;\r\n        break;\r\n    }\r\n\r\n    this.setState({ section, mode, actors: {}, selected: undefined, root: undefined }, this.onRefresh);\r\n  }\r\n\r\n  onInfiniteWheelMove = (value: number, sign: number, min: number, max: number, property: string) => {\r\n    const { sensitivity } = this.state;\r\n    const step = sign * 0.0025 * (max - min) * +sensitivity;\r\n\r\n    value = Math.max(min, Math.min(max, value + step));\r\n    this.onPropertyChange(property, value);\r\n  }\r\n\r\n  getRange = (color) => {\r\n    const { mode, colorProperty } = this.state;\r\n    if (mode === CCRMode.Color)\r\n      return ({ min: 0, max: 1 });\r\n\r\n    let min = 0;\r\n    let max = 2;\r\n\r\n    if (colorProperty === ColorProperty.Offset) {\r\n      min = -1;\r\n      max = 1;\r\n    }\r\n\r\n    for (const key in color) {\r\n      if (color[key] > max)\r\n        max = color[key];\r\n    }\r\n\r\n    return { min, max };\r\n  }\r\n\r\n  getColorProperty = () => {\r\n    const { section, mode, colorProperty } = this.state;\r\n\r\n    if (section === Section.LightCards)\r\n      return 'Color';\r\n\r\n    return `ColorGradingSettings.${mode}.${colorProperty}`;\r\n  }\r\n\r\n  renderColorSlider = (property: string, min: number, max: number, reset: number, type: string) => {\r\n    return this.renderSlider(property, min, max, reset, 2, null, false, type);\r\n  }\r\n\r\n  renderSlider = (property: string, min: number, max: number, reset?: number, precision: number = 2, label?: string, disabled?: boolean, type: string = '') => {\r\n    const { value, sliderMode } = this.state;\r\n    const v = _.get(value, property);\r\n\r\n    let className = `control wrap ${property.replace(' ', '-').replace('.', '-')}-slider `;\r\n\r\n    if (disabled)\r\n      className += 'disabled ';\r\n\r\n    let slider = <Slider showLabel={true}\r\n                         precision={precision}\r\n                         value={v}\r\n                         onChange={value => this.onPropertyChange(property, value)}\r\n                         min={min}\r\n                         max={max} />;\r\n\r\n    if (sliderMode === SliderMode.Infinity)\r\n      slider = (\r\n        <div className=\"infinite-slider-container\">\r\n          <SliderWheel size={200}\r\n                       className={`infinite-slider ${type}`}\r\n                       onWheelMove={sign => this.onInfiniteWheelMove(v, sign, min, max, property)} />\r\n          <ValueInput draggable={false}\r\n                      precision={precision}\r\n                      min={min}\r\n                      max={max}\r\n                      value={v}\r\n                      onChange={value => this.onPropertyChange(property, value)} />\r\n        </div>\r\n      );\r\n\r\n\r\n    return (\r\n      <div className={className} key={property}>\r\n        <label>{label ?? _.startCase(_.last(property.split('.')))}</label>\r\n        {slider}\r\n        <FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.onPropertyChange(property, reset)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderToggle = (property: string, label?: string) => {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className={`prop ${property.replaceAll(' ', '-').replaceAll('.', '-')}-toggle`}>\r\n        <label>{label ?? _.startCase(property)}</label>\r\n        <div className={`boolean-toggle ${(!_.get(value, property)) && 'checked'} `}>\r\n          <label className=\"switch toggle-mode\">\r\n            <input type=\"checkbox\" checked={!_.get(value, property)} onChange={e => this.onPropertyChange(property, !e.target.checked)} />\r\n            <span className=\"slider inline\"></span>\r\n          </label>\r\n          <div className='labels'>\r\n            <div className='off'>ON</div>\r\n            <div className='on'>OFF</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSelect = (property: string, options: string[] | Record<string, string>) => {\r\n    const { value } = this.state;\r\n\r\n    let opt = [];\r\n    if (Array.isArray(options)) {\r\n      opt = options.map(value => ({ value, label: _.startCase(value) }));\r\n    } else {\r\n      for (const value in options)\r\n        opt.push({ value, label: options[value] });\r\n    }\r\n\r\n    return (\r\n      <div className='prop'>\r\n        <label>{_.startCase(property)}</label>\r\n        <select className='dropdown' \r\n                value={_.get(value, property)}\r\n                onChange={e => this.onPropertyChange(property, e.target.value)}>\r\n          {opt.map(option => <option value={option.value} key={option.value}>{option.label}</option>)}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  executeButton = (func: string) => {\r\n    const { selected } = this.state;\r\n    return _api.proxy.function(selected, func, {});\r\n  }\r\n\r\n  renderButton = (func: string) => {\r\n    return (\r\n      <div className=\"prop\">\r\n        <Button label={func} onExecute={() => this.executeButton(func)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGuidesColorPicker = () => {\r\n    const { value } = this.state;\r\n\r\n    const color = _.get(value, 'GuideColor');\r\n\r\n    return (\r\n      <div className=\"guides-color-picker\">\r\n        <div className=\"label\">Guide Color</div>\r\n        <div className=\"color-controls-row\">\r\n          <ColorPicker value={color}\r\n                       reset={true}\r\n                       mode={ColorMode.Rgb}\r\n                       type={PropertyType.LinearColor}\r\n                       onChange={value => this.onPropertyChange('GuideColor', value ?? { R: 1, G: 1, B: 0, A: 0 })} />\r\n          <div className=\"control-rows\">\r\n            {this.renderColorSlider('GuideColor.R', 0, 1, 1, 'red-slider')}\r\n            {this.renderColorSlider('GuideColor.G', 0, 1, 1, 'green-slider')}\r\n            {this.renderColorSlider('GuideColor.B', 0, 1, 1, 'blue-slider')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  isColorModeModified = (actor: string, mode: CCRMode) => {\r\n    const { values, section } = this.state;\r\n\r\n    const grading = _.get(values, [actor, (section === Section.ColorCorrection ? 'ColorGradingSettings' : 'color grading'), mode], {});\r\n    for (const color in grading) {\r\n      const def = (color === ColorProperty.Offset ? 0 : 1);\r\n      for (const property in grading[color]) {\r\n        const v = grading[color][property];\r\n        if (v !== def)\r\n          return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  renderChangeIndication = (actor: string, mode: CCRMode) => {\r\n    let className = 'indicator ';\r\n    if (this.isColorModeModified(actor, mode))\r\n      className += 'active ';\r\n\r\n    return (\r\n      <div className={className}>\r\n        <FontAwesomeIcon icon={['fas', 'circle']} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTabsIcons = () => {\r\n    const { favorites, selected } = this.state;\r\n\r\n    let icon: IconProp = ['far', 'star'];\r\n    if (favorites[selected])\r\n      icon = ['fas', 'star'];\r\n\r\n    return <>\r\n      <span className='tab-icon' onClick={this.onFavoriteToggle}><FontAwesomeIcon icon={icon} /></span>\r\n      {/* <span className='tab-icon'><FontAwesomeIcon icon={['fas', 'crosshairs']} /></span> */}\r\n    </>;\r\n  }\r\n\r\n  getActorClassName = (actor: string) => {\r\n    const { selected, section, values } = this.state;\r\n\r\n    let className = 'light-card ';\r\n    if (selected === actor)\r\n      className += 'active ';\r\n\r\n    let disabled;\r\n    const value = values[actor];\r\n    switch (section) {\r\n      case Section.ColorCorrection:\r\n        disabled = (value?.Enabled === false);\r\n        break;\r\n    \r\n      case Section.LightCards:\r\n        disabled = (value?.bHidden === true);\r\n        break;\r\n    }\r\n\r\n    if (disabled === true)\r\n      className += 'disabled ';\r\n\r\n    return className;\r\n  }\r\n\r\n  renderActorsContent = (pagination: number, items: number, actors: Record<string, any>, favorite: boolean) => {\r\n    const { search, favorites, section, values } = this.state;\r\n\r\n    let start = pagination * items;\r\n    let end = start + items;\r\n \r\n    if (favorite)\r\n      actors = Object.fromEntries(_.toPairs(actors).filter(([key, value]) => value));\r\n\r\n    let actorsKeys = Object.keys(actors);\r\n    if (search)\r\n      actorsKeys = actorsKeys.filter(actor => this.state.actors[actor].toLowerCase().includes(search));\r\n\r\n    return (\r\n      <>\r\n        {actorsKeys.slice(start, end).map(actor =>\r\n          <div key={actor}\r\n               className={this.getActorClassName(actor)}\r\n               onClick={() => this.onActorSelect(actor)}\r\n               onDoubleClick={() => this.onToggleActorEnable(actor)}>\r\n            {_.startCase(this.state.actors[actor])}\r\n            {!!favorites[actor] && \r\n              <FontAwesomeIcon className=\"icon-favorite\" icon={['fas', 'star']} />\r\n            }\r\n\r\n            { section === Section.ColorCorrection &&\r\n              <div className='change-indicators'>\r\n                {this.renderChangeIndication(actor, CCRMode.Global)}\r\n                {this.renderChangeIndication(actor, CCRMode.Highlights)}\r\n                {this.renderChangeIndication(actor, CCRMode.Midtones)}\r\n                {this.renderChangeIndication(actor, CCRMode.Shadows)}\r\n              </div>\r\n            }\r\n          </div>\r\n        )}\r\n        {!favorite && (\r\n          <div className=\"light-card add-button\"\r\n               onClick={this.onSpawnActor}>\r\n            <FontAwesomeIcon icon={['fas', 'plus']} />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderAdvancedContent = (pagination: number): Element[] => {\r\n    const contents = [];\r\n\r\n    if (pagination === 0)\r\n      contents.push(\r\n        this.renderSlider('ColorGradingSettings.ShadowsMax', 0, 1, 0),\r\n        this.renderSlider('ColorGradingSettings.HighlightsMax', 1, 10, 0),\r\n        this.renderSlider('ColorGradingSettings.HighlightsMin', -1, 1, 0),\r\n      );\r\n\r\n    if (pagination === 1)\r\n      contents.push(\r\n        this.renderSlider('Inner', 0, 1, 0.5),\r\n        this.renderSlider('Outer', 0, 1, 1, 3),\r\n        this.renderSlider('Priority', -1, 20, 0, 0),\r\n      );\r\n\r\n    return contents;\r\n  }\r\n\r\n  renderAppearanceContent = (pagination: number): Element[] => {\r\n    const contents = [];\r\n\r\n    if (pagination === 0)\r\n      contents.push(\r\n        this.renderSlider('Temperature', 0, 10_000, 6_500),\r\n        this.renderSlider('Tint', -1, 1, 0, 3),\r\n        this.renderSlider('Exposure', -2, 10, 0.5, 3, 'Exposure'),\r\n        this.renderSlider('Gain', -2, 10, 1, 3),\r\n      );\r\n\r\n    if (pagination === 1)\r\n      contents.push(\r\n        this.renderSlider('Opacity', 0, 1, 1, 3),\r\n        this.renderSlider('Feathering', 0, 1, 0, 3),\r\n        <div key=\"none1\" />,\r\n        <div key=\"none2\" />,\r\n      );\r\n\r\n    return contents;\r\n  }\r\n\r\n  renderOrientationContent = (pagination: number) => {\r\n    const contents = [];\r\n\r\n    if (pagination === 0)\r\n      contents.push(\r\n        this.renderSlider('DistanceFromCenter', -2_000, 2_000, 300),\r\n        this.renderSlider('Longitude', 0, 360, 0, 2),\r\n        this.renderSlider('Latitude', -90, 90, 0),\r\n        this.renderSlider('Spin', -360, 360, 0),\r\n        this.renderSlider('Pitch', -360, 360, 0),\r\n        this.renderSlider('Yaw', -360, 360, 0),\r\n      );\r\n\r\n    if (pagination === 1)\r\n      contents.push(\r\n        this.renderSlider('Scale.X', 0, 20, 2, 3, 'Scale X'),\r\n        this.renderSlider('Scale.Y', 0, 20, 2, 3, 'Scale Y'),\r\n        this.renderSlider('RadialOffset', -360, 360, 0),\r\n        <div key=\"empty\" />,\r\n      );\r\n\r\n    return contents;\r\n  }\r\n\r\n  renderPositionTab = () => {\r\n    const { root, sensitivity } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"control-rows no-space vector-controls\">\r\n          <div className=\"control\">\r\n            <VectorControl value={_.get(root, 'RelativeLocation')}\r\n                           label=\"Location\"\r\n                           propertyType={PropertyType.Vector}\r\n                           step={+sensitivity}\r\n                           defaultValue={{ X: 0, Y: 0, Z: 0}}\r\n                           onChange={(property, value) => this.onThrottledRootPropertyValueChange('RelativeLocation', property, value)} />\r\n          </div>\r\n          <div className=\"control\">\r\n            <VectorControl value={_.get(root, 'RelativeRotation')}\r\n                           label=\"Rotation\"\r\n                           propertyType={PropertyType.Rotator}\r\n                           step={+sensitivity}\r\n                           defaultValue={{ Pitch: 0, Roll: 0, Yaw: 0}}\r\n                           onChange={(property, value) => this.onThrottledRootPropertyValueChange('RelativeRotation', property, value)} />\r\n          </div>\r\n          <div className=\"control\">\r\n            <VectorControl value={_.get(root, 'RelativeScale3D')}\r\n                           label=\"Scale\"\r\n                           propertyType={PropertyType.Vector}\r\n                           step={+sensitivity}\r\n                           defaultValue={{ X: 1, Y: 1, Z: 1}}\r\n                           onChange={(property, value) => this.onThrottledRootPropertyValueChange('RelativeScale3D', property, value)} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderSection = () => {\r\n    const { section, value } = this.state;\r\n\r\n    switch (section) {\r\n      case Section.ColorCorrection:\r\n        return (\r\n          <Tabs rightIcon={this.renderTabsIcons()}\r\n                defaultActiveKey=\"default\">\r\n            <TabPane id=\"position\" tab=\"Position\">\r\n              {this.renderPositionTab()}\r\n            </TabPane>\r\n            <TabPane id=\"default\" tab=\"Default\">\r\n              <div className='props-row fit-dropdown'>\r\n                {this.renderSelect('Type', ['Sphere', 'Box', 'Cylinder', 'Cone'])}\r\n                {this.renderSelect('TemperatureType', ['LegacyTemperature', 'WhiteBalance', 'ColorTemperature'])}\r\n                {this.renderToggle('Enabled')}\r\n              </div>\r\n              <div className='control-rows'>\r\n                {this.renderSlider('Temperature', 0, 10_000, 6_500)}\r\n                {this.renderSlider('Intensity', 0, 1, 1)}\r\n                {this.renderSlider('Falloff', 0, 20, 0, 3)}\r\n                {this.renderSlider('Tint', -1, 1, 0, 3)}\r\n              </div>\r\n            </TabPane>\r\n            <TabPane id=\"advanced\" tab=\"Advanced\">\r\n              <div className='props-row'>\r\n                {this.renderToggle('Invert')}\r\n              </div>\r\n              <div className='multilines-content'>\r\n                <PaginationContent pages={2} key=\"advanced\">\r\n                  {({ pagination }) => this.renderAdvancedContent(pagination)}\r\n                </PaginationContent>\r\n              </div>\r\n            </TabPane>\r\n          </Tabs>\r\n        );\r\n\r\n      case Section.LightCards:\r\n        return (\r\n          <Tabs rightIcon={this.renderTabsIcons()}\r\n                defaultActiveKey=\"appearance\">\r\n            <TabPane id=\"appearance\" tab=\"Appearance\">\r\n              <div className=\"grid-row\">\r\n                <div className=\"props-row\">\r\n                  {this.renderSelect('Mask', ['Square', 'Circle', 'Polygon', 'UseTextureAlpha'])}\r\n                  <div className=\"prop asset-control\">\r\n                    <AssetWidget browse\r\n                                 reset={false}\r\n                                 type=\"Texture\"\r\n                                 typePath=\"/Script/Engine.Texture\"\r\n                                 label=\"Texture\"\r\n                                 onChange={v => this.onPropertyChange('Texture', v)}\r\n                                 value={_.get(value, 'Texture') ?? ''} />\r\n                    <span className=\"reset\"><FontAwesomeIcon icon={['fas', 'undo']} onClick={() => this.onPropertyChange('Texture', null)} /></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"multilines-content\">\r\n                <PaginationContent pages={2} key=\"appearance\">\r\n                  {({ pagination }) => this.renderAppearanceContent(pagination)}\r\n                </PaginationContent>\r\n              </div>\r\n            </TabPane>\r\n            <TabPane id=\"orientation\" tab=\"Orientation\">\r\n              <div className=\"multilines-content full-height\">\r\n                <PaginationContent pages={2} key=\"orientation\">\r\n                  {({ pagination }) => this.renderOrientationContent(pagination)}\r\n                </PaginationContent>\r\n              </div>\r\n            </TabPane>\r\n            {/* <TabPane id=\"guides\" tab=\"Guides\">\r\n              <div className='props-row'>\r\n                {this.renderToggle('bShowGuides', 'Show Guides')}\r\n              </div>\r\n              <div className='control-rows'>\r\n                {this.renderSlider('GuideScale', 0, 1, 0)}\r\n                {this.renderGuidesColorPicker()}\r\n              </div>\r\n            </TabPane> */}\r\n            <TabPane id=\"position\" tab=\"Position\">\r\n              {this.renderPositionTab()}\r\n            </TabPane>\r\n          </Tabs>\r\n        );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { selected, mode, actors, favorites, actorsGroup, section, value, colorProperty, range, sliderMode, sensitivity } = this.state;\r\n    const style: React.CSSProperties = {};\r\n    const property = this.getColorProperty();\r\n    const color = _.get(value, property);\r\n\r\n    style.position = 'relative';\r\n\r\n    let className = 'cc-group cc-panel ';\r\n\r\n    if (!selected)\r\n      className += 'disabled';\r\n\r\n    let availableFavorites = _.pickBy(favorites, (v, k) => !!actors[k]);\r\n\r\n    return (\r\n      <div className={`color-correction-wrapper custom-ui-wrapper ${section}`} tabIndex={-1}>\r\n        <div className='ipad-debug'></div>\r\n        <div className=\"group\">\r\n          <CorrectionColorPicker section={section}\r\n                                 property={property}\r\n                                 color={color}\r\n                                 colorProperty={colorProperty}\r\n                                 range={range}\r\n                                 mode={mode}\r\n                                 disabled={!selected}\r\n                                 sliderMode={sliderMode}\r\n                                 sensitivity={sensitivity}\r\n                                 onSectionChange={this.onSectionChange}\r\n                                 onPropertyChange={this.onPropertyChange}\r\n                                 onRangeUpdate={color => this.setState({ range: this.getRange(color) })}\r\n                                 onColorPropertyChange={colorProperty => this.setState({ colorProperty })}\r\n                                 onColorModeChange={mode => this.setState({ mode })}\r\n                                 isColorPropertyModified={mode => this.isColorModeModified(selected, mode)} />\r\n        </div>\r\n        <div className=\"group\">\r\n          <div className=\"cc-group shotbox cc-panel\">\r\n            <Tabs rightIcon={<>\r\n              <div className=\"trash-icon\" onClick={this.onDeleteActor}><FontAwesomeIcon icon={['fas', 'trash']} /></div>\r\n              <Search placeholder=\"Search\" onSearch={search => this.setState({ search })} />\r\n            </>}\r\n                  onTabChange={(actorsGroup: ActorsGroup) => this.setState({ actorsGroup })}\r\n                  defaultActiveKey={actorsGroup}>\r\n              <TabPane id={ActorsGroup.All} tab=\"All\" icon={['fas', 'square']}>\r\n                <PaginationContent pageItems={this.actorsLength}\r\n                                   total={Object.values(actors).length}\r\n                                   key=\"all\">\r\n                  {({ pagination }) => this.renderActorsContent(pagination, this.actorsLength, actors, false)}\r\n                </PaginationContent>\r\n              </TabPane>\r\n              <TabPane id={ActorsGroup.Favorites} tab=\"Favorites\" icon={['fas', 'star']}>\r\n                <PaginationContent pageItems={this.actorsLength + 1}\r\n                                   total={Object.values(availableFavorites).length}\r\n                                   key=\"favorites\">\r\n                  {({ pagination }) => this.renderActorsContent(pagination, this.actorsLength, availableFavorites, true)}\r\n                </PaginationContent>\r\n              </TabPane>\r\n            </Tabs>\r\n          </div>\r\n          <div className={className} style={style}>\r\n            <div className=\"body\">\r\n              {this.renderSection()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"group bottom-bar\">\r\n          <div className=\"cc-group inline-group\">\r\n            <div className=\"group-item operation-style bottom-tabs-style\">\r\n              <div className=\"label\">\r\n                Operation Style\r\n              </div>\r\n              <Tabs onlyHeader\r\n                    defaultActiveKey={sliderMode}\r\n                    onTabChange={(sliderMode: SliderMode) => this.setState({ sliderMode })}>\r\n                {Object.values(SliderMode).map(mode => <TabPane key={mode}\r\n                                                                tab={mode}\r\n                                                                id={mode} />)}\r\n              </Tabs>\r\n            </div>\r\n            <div className=\"group-item sensitivity-style bottom-tabs-style\">\r\n              <div className=\"label\">\r\n                Sensitivity\r\n              </div>\r\n              <Tabs onlyHeader\r\n                    defaultActiveKey={sensitivity}\r\n                    onTabChange={(sensitivity: Sensitivity) => this.setState({ sensitivity })}>\r\n                {Object.values(Sensitivity).map(mode => <TabPane key={mode}\r\n                                                                 tab={`x${mode}`}\r\n                                                                 id={mode} />)}\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32.2 10.5002C44.1 10.5002 53.8 20.3002 53.8 32.1002C53.8 43.9002 44 53.7002 32.2 53.7002C20.3 53.7002 10.6 43.9002 10.6 32.1002C10.6 20.3002 20.3 10.5002 32.2 10.5002ZM32.2 6.2002C17.8 6.2002 6.29999 17.7002 6.29999 32.1002C6.29999 46.5002 17.8 58.0002 32.2 58.0002C46.6 58.0002 58.1 46.5002 58.1 32.1002C58.1 17.7002 46.6 6.2002 32.2 6.2002Z\",\n  fill: \"url(#paint0_linear_61_48)\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32.2 54.8004C44.7369 54.8004 54.9 44.6373 54.9 32.1004C54.9 19.5635 44.7369 9.40039 32.2 9.40039C19.6631 9.40039 9.5 19.5635 9.5 32.1004C9.5 44.6373 19.6631 54.8004 32.2 54.8004Z\",\n  fill: \"url(#paint1_radial_61_48)\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32 53.7C43.9 53.7 53.6 44 53.6 32.1C53.6 20.2 43.9 10.5 32 10.5C20.1 10.5 10.4 20.2 10.4 32.1C10.4 44 20.1 53.7 32 53.7Z\",\n  fill: \"url(#paint2_radial_61_48)\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M39.9 31.6002C43.9 31.6002 47.1 28.4002 47.1 24.4002C47.1 20.4002 43.9 17.2002 39.9 17.2002C35.9 17.2002 32.7 20.4002 32.7 24.4002C32.7 28.3002 35.9 31.6002 39.9 31.6002Z\",\n  fill: \"url(#paint3_radial_61_48)\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"paint0_linear_61_48\",\n  x1: 51.7924,\n  y1: 15.5287,\n  x2: 0.912686,\n  y2: 58.6554,\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.4569,\n  stopColor: \"#E6E6E6\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#666666\"\n})), /*#__PURE__*/React.createElement(\"radialGradient\", {\n  id: \"paint1_radial_61_48\",\n  cx: 0,\n  cy: 0,\n  r: 1,\n  gradientUnits: \"userSpaceOnUse\",\n  gradientTransform: \"translate(39.081 22.4407) scale(20.1462)\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#CCCCCC\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#4D4D4D\"\n})), /*#__PURE__*/React.createElement(\"radialGradient\", {\n  id: \"paint2_radial_61_48\",\n  cx: 0,\n  cy: 0,\n  r: 1,\n  gradientUnits: \"userSpaceOnUse\",\n  gradientTransform: \"translate(36.948 22.9535) scale(30.7001)\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"white\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.3121,\n  stopColor: \"#B3B3B3\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.6357,\n  stopColor: \"#6A6A6A\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.7861,\n  stopColor: \"#4D4D4D\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#666666\"\n})), /*#__PURE__*/React.createElement(\"radialGradient\", {\n  id: \"paint3_radial_61_48\",\n  cx: 0,\n  cy: 0,\n  r: 1,\n  gradientUnits: \"userSpaceOnUse\",\n  gradientTransform: \"translate(39.9291 24.363) scale(7.2137)\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.4569,\n  stopColor: \"white\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#F2F2F2\",\n  stopOpacity: 0\n})));\n\nvar SvgCcIcon = function SvgCcIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    fill: \"none\",\n    className: \"ccr-icon\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCcIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/cc_icon.c50b3538.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M80 74H65V82H80V74Z\",\n  fill: \"white\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  opacity: 0.5,\n  d: \"M75.2 89H68.8L66 85H78L75.2 89Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M71.8119 28C61.2772 28 53 37.5455 53 46.7091C53 52.0546 56.3861 56.2546 60.1485 60.0727C62.4059 62.3636 64.2871 66.1818 66.9208 70H77.0792C79.7129 66.5636 81.5941 62.3636 83.8515 60.0727C87.6139 56.2546 91 52.0546 91 46.7091C90.6238 37.5455 82.3465 28 71.8119 28Z\",\n  fill: \"white\"\n});\n\nvar SvgLcIcon = function SvgLcIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 128,\n    viewBox: \"0 0 132 128\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLcIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/lc_icon.a55133d2.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as CCIcon } from '../../../assets/cc_icon.svg';\r\nimport { ReactComponent as LCIcon } from '../../../assets/lc_icon.svg';\r\nimport { ColorPicker, SliderWheel, TabPane, Tabs, ValueInput } from '../../controls';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Section, ColorProperty, CorrectionColorSlider } from './';\r\nimport { AlertModal } from 'src/components/modals';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { CCRMode, ColorMode, Sensitivity, SliderMode } from './ColorCorrection';\r\nimport { PropertyType, VectorProperty } from 'src/shared';\r\nimport _ from 'lodash';\r\n\r\n\r\ntype Props = {\r\n  section: Section;\r\n  property: string;\r\n  color: any;\r\n  colorProperty: ColorProperty;\r\n  range: { min: number, max: number };\r\n  mode: CCRMode;\r\n  sliderMode: SliderMode;\r\n  sensitivity: Sensitivity;\r\n  disabled: boolean;\r\n\r\n  onSectionChange: (section: Section) => void;\r\n  onColorPropertyChange: (colorProperty: ColorProperty) => void;\r\n  onPropertyChange: (property: string, v: any) => void;\r\n  onRangeUpdate: (color: any) => void;\r\n  onColorModeChange: (mode: CCRMode) => void;\r\n  isColorPropertyModified: (mode: CCRMode) => boolean;\r\n}\r\n\r\ntype State = {\r\n  colorMode: ColorMode,\r\n}\r\n\r\nexport class CorrectionColorPicker extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    colorMode: ColorMode.Rgb,\r\n  }\r\n\r\n  onReset = async (property: string, value) => {\r\n    if (!await AlertModal.show('Are you sure you want to reset?'))\r\n      return;\r\n\r\n    this.props.onPropertyChange(property, value);\r\n  }\r\n\r\n  onColorModeChange = () => {\r\n    let colorMode = ColorMode.Hsv;\r\n\r\n    if (this.state.colorMode === ColorMode.Hsv)\r\n      colorMode = ColorMode.Rgb;\r\n    \r\n    this.setState({ colorMode });\r\n  }\r\n\r\n  onColorChange = (v: any) => {\r\n    const { color, property } = this.props;\r\n\r\n    if (_.isObject(color))\r\n      v = { ...color, ...v };\r\n\r\n    return this.props.onPropertyChange(property, v);\r\n  }\r\n\r\n  onHsvWheelMove = (sign: number, hue?: number) => {\r\n    let { range, color, mode, sensitivity } = this.props;\r\n    let rgb = WidgetUtilities.colorToRgb(color, range.max);\r\n\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    if (hue)\r\n      hsv.h = hue / 360;\r\n    else {\r\n      let step = sign * 0.001 * +sensitivity;\r\n      if (hsv.h + step < 0)\r\n        step += 1;\r\n\r\n      hsv.h = hsv.h + step;\r\n    }\r\n\r\n    rgb = WidgetUtilities.hsv2rgb(hsv);\r\n    color = WidgetUtilities.rgbToColor(rgb, range.max, mode !== CCRMode.Color);\r\n\r\n    this.onColorChange(color);\r\n  }\r\n  \r\n  onShiftSliderMove = (sign: number) => {\r\n    const { colorProperty, property, color, sensitivity } = this.props;\r\n    const step = sign * 0.01 * +sensitivity;\r\n\r\n    if (!color)\r\n      return;\r\n\r\n    let sum = color.X + color.Y + color.Z;\r\n    let min = 0;\r\n\r\n    if (colorProperty === ColorProperty.Offset)\r\n      min = -1;\r\n\r\n    color.X = Math.max(min, color.X + ((color.X / sum) || 1) * step);\r\n    color.Y = Math.max(min, color.Y + ((color.Y / sum) || 1) * step);\r\n    color.Z = Math.max(min, color.Z + ((color.Z / sum) || 1) * step);\r\n\r\n    this.props.onPropertyChange(property, color);\r\n    this.props.onRangeUpdate(color);\r\n  }\r\n\r\n  getSectionProps = (value: Section) => {\r\n    const { section, onSectionChange } = this.props;\r\n    let className = 'cc-group mode-button ';\r\n\r\n    if (section === value)\r\n      className += 'active ';\r\n\r\n    return { className, onClick: () => onSectionChange(value) };\r\n  }\r\n\r\n  getColorResetValue = () => {\r\n    const { mode, colorProperty } = this.props;\r\n    if (mode === CCRMode.Color)\r\n      return ({ R: 1, G: 1, B: 1, A: 0});\r\n\r\n    if (colorProperty === ColorProperty.Offset)\r\n      return ({ X: 0, Y: 0, Z: 0, W: 0 });\r\n\r\n    return ({ X: 1, Y: 1, Z: 1, W: 1 });\r\n  }\r\n\r\n  getHsvValue = () => {\r\n    const { range, color } = this.props;\r\n\r\n    const rgb = WidgetUtilities.colorToRgb(color, range.max);\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    return hsv;\r\n  }\r\n\r\n  getValueColor = (): React.CSSProperties => {\r\n    const { color, mode } = this.props;\r\n\r\n    if (!color || mode === CCRMode.Color)\r\n      return { opacity: 0 };\r\n\r\n    const max = Math.max(color.X, color.Y, color.Z, 1);\r\n\r\n    const rgb = WidgetUtilities.colorToRgb(color, max);\r\n    const hsv = WidgetUtilities.rgb2Hsv(rgb);\r\n\r\n    let opacity = 0;\r\n    if (hsv.v)\r\n      opacity = Math.max(0, Math.min(1, +(1 - hsv.v).toFixed(4)));\r\n\r\n    return { opacity };\r\n  }\r\n\r\n  getPreviewColorStyles = (color: VectorProperty): React.CSSProperties => {\r\n    const { range } = this.props;\r\n    const rgb = WidgetUtilities.colorToRgb(color, range.max);\r\n\r\n    return { background: `rgb(${Math.round(rgb.R)},${Math.round(rgb.G)},${Math.round(rgb.B)})` };\r\n  }\r\n\r\n  getPropertyType = () => {\r\n    const { mode } = this.props;\r\n    let propertyType = PropertyType.Vector4;\r\n\r\n    if (mode === CCRMode.Color)\r\n      propertyType = PropertyType.LinearColor;\r\n\r\n    return propertyType;\r\n  }\r\n\r\n  renderColorSlider = (sliderProperty: string, label: string, className: string) => {\r\n    const { colorMode } = this.state;\r\n    const { color, colorProperty, property, range, sliderMode, sensitivity } = this.props;\r\n    const propertyType = this.getPropertyType();\r\n\r\n    return <CorrectionColorSlider className={className}\r\n                                  label={label}\r\n                                  mode={sliderMode}\r\n                                  sensitivity={+sensitivity}\r\n                                  color={color}\r\n                                  colorProperty={colorProperty}\r\n                                  property={property}\r\n                                  sliderProperty={sliderProperty}\r\n                                  range={range}\r\n                                  colorMode={colorMode}\r\n                                  propertyType={propertyType}\r\n                                  onPropertyChange={this.props.onPropertyChange}\r\n                                  onRangeUpdate={this.props.onRangeUpdate} />;\r\n  }\r\n\r\n  renderSliders = () => {\r\n    const propertyType = this.getPropertyType();\r\n\r\n    if (propertyType === PropertyType.LinearColor) {\r\n      return (\r\n        <>\r\n          {this.renderColorSlider('R', 'R', 'red-slider')}\r\n          {this.renderColorSlider('G', 'G', 'green-slider')}\r\n          {this.renderColorSlider('B', 'B', 'blue-slider')}\r\n          {this.renderColorSlider('A', 'A', 'alpha-slider')}      \r\n        </>\r\n      );\r\n    }\r\n    \r\n    if (this.state.colorMode === ColorMode.Hsv) {\r\n      return (\r\n        <>\r\n          {this.renderColorSlider('s', 'S', 'saturation-slider')}\r\n          {this.renderColorSlider('v', 'V', 'alpha-slider')}\r\n          {this.renderColorSlider('a', 'Y', 'alpha-slider')}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {this.renderColorSlider('X', 'R', 'red-slider')}\r\n        {this.renderColorSlider('Y', 'G', 'green-slider')}\r\n        {this.renderColorSlider('Z', 'B', 'blue-slider')}\r\n        {this.renderColorSlider('W', 'Y', 'alpha-slider')}      \r\n      </>\r\n    );\r\n  }\r\n\r\n  renderModifyIndicator = (mode: CCRMode) => {\r\n    if (!this.props.isColorPropertyModified?.(mode))\r\n      return null;\r\n\r\n    return <div className=\"change-indicator active\"><FontAwesomeIcon icon={['fas', 'circle']} /></div>;\r\n  }\r\n\r\n  render() {\r\n    const { property, color, colorProperty, range, mode, disabled, section } = this.props;\r\n    const { colorMode } = this.state;\r\n\r\n    const reset = this.getColorResetValue();\r\n    const hsv = this.getHsvValue();\r\n\r\n    const hue = hsv ? (hsv.h * 360).toFixed(1) : 0;\r\n    const style: React.CSSProperties = {};\r\n\r\n    if (disabled) {\r\n      style.opacity = 0.6;\r\n      style.pointerEvents = 'none';\r\n    }\r\n\r\n    let modes = Object.values(CCRMode);\r\n    if (section === Section.ColorCorrection)\r\n      modes = modes.filter(m => m !== CCRMode.Color);\r\n\r\n    return (\r\n      <div className=\"group\">\r\n        <div className=\"cc-group screen-mode-selectors\">\r\n          <div className=\"mode-selector\">\r\n            <div {...this.getSectionProps(Section.ColorCorrection)}>\r\n              <CCIcon />\r\n            </div>\r\n            <div {...this.getSectionProps(Section.LightCards)}>\r\n              <LCIcon />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"cc-group\" style={style}>\r\n          <div className=\"body\" style={{ width: \"calc(100% - 20px)\" }}>\r\n            {section === Section.ColorCorrection &&\r\n              <div className=\"mode-selectors\">\r\n                <Tabs onTabChange={this.props.onColorModeChange}\r\n                      onlyHeader\r\n                      defaultActiveKey={mode}>\r\n                  {modes.map(mode => <TabPane key={mode}\r\n                                              id={mode} \r\n                                              tab={mode}\r\n                                              view={() => this.renderModifyIndicator(mode)} />\r\n                  )}\r\n                </Tabs>\r\n              </div>\r\n            }\r\n            <div className=\"color-picker-singleton\">\r\n              <div className=\"color-wheel\">\r\n                <FontAwesomeIcon className=\"reset-icon\" icon={['fas', 'undo']} onClick={() => this.onReset(property, reset)} />\r\n                {colorMode === ColorMode.Rgb && <div className=\"color-picker-value\" style={this.getValueColor()} />}\r\n                <ColorPicker value={color}\r\n                             mode={colorMode}\r\n                             alpha={mode === CCRMode.Color}\r\n                             type={this.getPropertyType()}\r\n                             max={range.max}\r\n                             onChange={value => this.onColorChange(value ?? reset)} />\r\n                <div className=\"wheel-addon\">\r\n                  <div className=\"dot\" style={this.getPreviewColorStyles(color)}></div>\r\n                  <div className={`color-mode-toggle ${(colorMode === ColorMode.Hsv) && 'checked'} `}>\r\n                    <label className=\"switch toggle-mode\">\r\n                      <input type=\"checkbox\" checked={colorMode === ColorMode.Hsv} onChange={this.onColorModeChange} />\r\n                      <span className=\"slider inline\"></span>\r\n                    </label>\r\n                    <div className=\"labels\">\r\n                      <div className=\"off\">RGB</div>\r\n                      <div className=\"on\">HSV</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"shift-slider\">\r\n                {colorMode === ColorMode.Rgb && <>\r\n                  <SliderWheel vertical\r\n                               onWheelMove={this.onShiftSliderMove} />\r\n                  Value\r\n                </>\r\n                }\r\n              </div>\r\n              <div className=\"details-section\">\r\n                <div className=\"color-property-selection\">\r\n                  {section === Section.ColorCorrection && Object.values(ColorProperty).map(property =>\r\n                    <div key={property}\r\n                         onClick={() => this.props.onColorPropertyChange(property)}\r\n                         className={`mode-selector ${property === colorProperty ? 'active' : ''}`}>{property}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"color-properties\">\r\n                  <div className=\"sliders\">\r\n                    <div className=\"rgb-sliders\">\r\n                      {this.renderSliders()}\r\n                      <div className=\"slider-wheel-container hue-slider\">\r\n                        <span className=\"title\">Hue</span>\r\n                        <SliderWheel size={200} onWheelMove={sign => this.onHsvWheelMove(sign)} />\r\n                        <ValueInput draggable={false}\r\n                                    precision={1}\r\n                                    min={0}\r\n                                    max={360}\r\n                                    value={hue}\r\n                                    onChange={hue => this.onHsvWheelMove(1, hue)} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { SliderMode, ColorMode } from './ColorCorrection';\r\nimport { SliderWheel, Slider, ValueInput } from '../../controls';\r\nimport { ColorProperty } from './ColorCorrection';\r\nimport { WidgetUtilities } from 'src/utilities';\r\nimport { PropertyType } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  className?: string;\r\n  label: string;\r\n  mode: SliderMode;\r\n  sensitivity: number;\r\n  color: any;\r\n  colorProperty: ColorProperty;\r\n  property: string;\r\n  sliderProperty: string;\r\n  colorMode: ColorMode;\r\n  range: { min: number, max: number };\r\n  propertyType: PropertyType;\r\n\r\n  onPropertyChange: (property: string, v: any) => void;\r\n  onRangeUpdate: (color: any) => void;\r\n}\r\n\r\ntype State = {\r\n\r\n}\r\n\r\nexport class CorrectionColorSlider extends React.Component<Props, State> {\r\n\r\n  onChange = (key: string, sign: number, v?: number) => {\r\n    const { colorMode } = this.props;\r\n\r\n    if (colorMode === ColorMode.Rgb)\r\n      return this.onRgbChange(key, sign, v);\r\n\r\n    return this.onHsvChange(key, sign, v);\r\n  }\r\n\r\n  onRgbChange = (key: string, sign: number, v?: number) => {\r\n    const { sensitivity, color, colorProperty, property } = this.props;\r\n\r\n    if (!color)\r\n      return;\r\n\r\n    const step = sign * 0.01 * sensitivity;\r\n    color[key] += step;\r\n\r\n    if (v !== undefined)\r\n      color[key] = v;\r\n\r\n    if (colorProperty !== ColorProperty.Offset)\r\n      color[key] = Math.max(0, color[key]);\r\n\r\n    this.props.onPropertyChange(property, color);\r\n    this.props.onRangeUpdate(color);\r\n  }\r\n\r\n  onHsvChange = (key: string, sign: number, v?: number) => {\r\n    const { sensitivity, propertyType, range, colorProperty, property } = this.props;\r\n\r\n    if (!this.props.color)\r\n      return;\r\n\r\n    const step = sign * 0.01 * sensitivity;\r\n    const hsv = this.getHsv(range.max);\r\n\r\n    hsv[key] += step;\r\n\r\n    if (v !== undefined) {\r\n      if(key === 'v')\r\n        v = v / range.max;\r\n\r\n      hsv[key] = v;\r\n    }\r\n\r\n    hsv[key] = Math.max(hsv[key], 0.0001);\r\n    \r\n    const rgb = WidgetUtilities.hsv2rgb(hsv);\r\n    let color = rgb as any;\r\n\r\n    switch (propertyType) {\r\n      case PropertyType.Vector4:\r\n        color = WidgetUtilities.rgbToColor(rgb, range.max);\r\n        break;\r\n\r\n      case PropertyType.LinearColor:\r\n        color = WidgetUtilities.rgbToColor(rgb, range.max, false);\r\n        break;\r\n    }\r\n\r\n    if (rgb.A)\r\n      color.W = rgb.A;\r\n\r\n    if (colorProperty !== ColorProperty.Offset)\r\n      for (const key in color)\r\n        color[key] = Math.max(0, color[key]);\r\n\r\n    this.props.onPropertyChange(property, color);\r\n    this.props.onRangeUpdate(color);\r\n  }\r\n\r\n  getHsv = (max = 1) => {\r\n    const { color } = this.props;\r\n    const rgb = WidgetUtilities.colorToRgb(color, max);\r\n    \r\n    return WidgetUtilities.rgb2Hsv(rgb);\r\n  }\r\n\r\n  getValue = (key: string) => {\r\n    const { colorMode } = this.props;\r\n\r\n    if (colorMode === ColorMode.Rgb)\r\n      return this.getRgbValue(key);\r\n\r\n    return this.getHsvValue(key);\r\n  }\r\n\r\n  getRgbValue = (key: string) => {\r\n    const { color } = this.props;\r\n    const value = color?.[key] as number;\r\n\r\n    return value?.toFixed(3) ?? 0;\r\n  }\r\n\r\n  getHsvValue = (key: string) => {\r\n    const hsv = this.getHsv();\r\n    return hsv[key];\r\n  }\r\n  \r\n  getSSliderColor = () => {\r\n    const hsv = this.getHsv();\r\n    const rgb = WidgetUtilities.hsv2rgb({ h: hsv.h, s: 1, v: 1, a: hsv?.a });\r\n\r\n    return `linear-gradient(90deg, ${this.getVSliderMinColor()} 0%, rgba(${rgb.R}, ${rgb.G}, ${rgb.B}, ${rgb?.A ?? 1}) 100%)`;\r\n  }\r\n\r\n  getVSliderColor = () => {\r\n    const hsv = this.getHsv();\r\n    const rgb = WidgetUtilities.hsv2rgb({ h: hsv.h, s: hsv.s, v: 1, a: hsv?.a });\r\n\r\n    return `linear-gradient(90deg, rgba(0,0,0,${rgb?.A ?? 1}) 0%, rgba(${rgb.R}, ${rgb.G}, ${rgb.B}, ${rgb?.A ?? 1}) 100%)`;\r\n  }\r\n\r\n  getVSliderMinColor = () => {\r\n    const hsv = this.getHsv();\r\n    const rgb = WidgetUtilities.hsv2rgb({ h: hsv.h, s: 0, v: hsv.v, a: hsv?.a });\r\n\r\n    return `rgba(${rgb.R}, ${rgb.G}, ${rgb.B}, ${rgb?.A ?? 1})`;\r\n  }\r\n\r\n  render() {\r\n    let { className = '', mode, label, sliderProperty, range, colorMode } = this.props;\r\n    let sliderMax = Math.max(range.min, range.max);\r\n\r\n    const wheel = mode === SliderMode.Infinity;\r\n    const style: React.CSSProperties = {};\r\n\r\n    className += ` slider-wheel-container ${sliderProperty}-slider`;\r\n\r\n    if (!wheel)\r\n      className += ` slider`;\r\n\r\n    if (colorMode === ColorMode.Hsv && sliderProperty === 's') {\r\n      style.background = this.getSSliderColor();\r\n      sliderMax = 1;\r\n    };\r\n\r\n    if (colorMode === ColorMode.Hsv && sliderProperty === 'v') {\r\n      style.background = this.getVSliderColor();\r\n    };\r\n      \r\n    return (\r\n      <div className={className}>\r\n        <span className=\"title\">{label}</span>\r\n        {wheel &&\r\n          <SliderWheel size={200}\r\n                       style={style}\r\n                       onWheelMove={sign => this.onChange(sliderProperty, sign)} />\r\n        }\r\n        {!wheel &&\r\n          <Slider showLabel={false}\r\n                  style={style}\r\n                  value={+this.getValue(sliderProperty)}\r\n                  onChange={value => this.onChange(sliderProperty, 0, value)}\r\n                  min={range.min}\r\n                  max={sliderMax}\r\n                  size={200} />\r\n        }\r\n        <ValueInput draggable={false}\r\n                    precision={3}\r\n                    min={range.min}\r\n                    value={this.getValue(sliderProperty)}\r\n                    onChange={value => this.onChange(sliderProperty, 0, value)} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\n\r\ntype Props = {\r\n  pageItems?: number;\r\n  total?: number;\r\n  pages?: number;\r\n\r\n  children: ({ ...state }: State) => any;\r\n}\r\n\r\ntype State = {\r\n  pagination: number;\r\n}\r\n\r\nexport class PaginationContent extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    pagination: 0,\r\n  }\r\n\r\n  getIsDisabled = (dir: number) => {\r\n    const { pagination } = this.state;\r\n    const { pageItems, total, pages } = this.props;\r\n\r\n    let step = pagination + dir;\r\n\r\n    if (step < 0)\r\n      return true;\r\n\r\n    if (pages && step > pages - 1)\r\n      return true;\r\n\r\n    return (step * pageItems) >= total;\r\n  }\r\n\r\n  onPaginationClick = (dir: number, disabled: boolean) => {\r\n    if (disabled)\r\n      return;\r\n\r\n    let { pagination } = this.state;\r\n    pagination += dir;\r\n\r\n    this.setState({ pagination });\r\n  }\r\n\r\n  renderPaginationArrow = (dir: number) => {\r\n    let className = 'arrow up ';\r\n    const disabled = this.getIsDisabled(dir);\r\n\r\n    if (dir > 0)\r\n      className = className.replace('up', 'down');\r\n\r\n    if (disabled)\r\n      className += 'disabled ';\r\n\r\n    return (\r\n      <div className={className} \r\n           onClick={() => this.onPaginationClick(dir, disabled)}>\r\n        <div className='icon' />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <div className=\"content\" style={{ display: 'flex' }}>\r\n        <div className=\"body\" style={{ width: '100%' }}>\r\n          {children({ ...this.state })}\r\n        </div>\r\n        <div className=\"arrows-pagination\">\r\n          {this.renderPaginationArrow(-1)}\r\n          {this.renderPaginationArrow(1)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { _api } from 'src/reducers';\r\nimport _ from 'lodash';\r\nimport { ColorPicker, Slider } from '../controls';\r\nimport { PropertyType } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\ntype Props = {\r\n};\r\n\r\ntype State = {\r\n  selected: string;\r\n  actors: Record<string, string>;\r\n  value: any;\r\n};\r\n\r\n\r\nexport class LightCards extends React.Component<Props, State> {\r\n\r\n  timer: NodeJS.Timeout;\r\n  state: State = {\r\n    selected: '',\r\n    actors: {},\r\n    value: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.onRefresh();\r\n    this.timer = setInterval(this.onRefresh, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n    this.timer = null;\r\n  }\r\n\r\n  onRefresh = async () => {\r\n    await this.onRefreshActors();\r\n    await this.onRefreshValues();\r\n  }\r\n\r\n  onActorSelect = (selected: string) => {\r\n    this.setState({ selected }, this.onRefreshValues);\r\n  }\r\n\r\n  onSpawnActor = async () => {\r\n    await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'SpawnActor',\r\n      {\r\n        Class: '/nDisplay/LightCard/LightCard.LightCard_C'\r\n      });\r\n\r\n    await this.onRefreshActors();\r\n  }\r\n\r\n  onRefreshActors = async () => {\r\n    const actors: Record<string, string> = await _api.proxy.function(\r\n      '/Script/RemoteControlWebInterface.Default__RCWebInterfaceBlueprintLibrary',\r\n      'FindAllActorsOfClass',\r\n      {\r\n        Class: '/nDisplay/LightCard/LightCard.LightCard_C'\r\n      });\r\n\r\n    if (!_.isEqual(this.state.actors, actors)) {\r\n      let { selected } = this.state;\r\n      \r\n      if (selected && !actors[selected])\r\n        selected = undefined;\r\n\r\n      if (!selected)\r\n        selected = _.first(Object.keys(actors));\r\n        \r\n      this.setState({ actors, selected });\r\n    }\r\n \r\n  }\r\n\r\n  onRefreshValues = async () => {\r\n    const { selected } = this.state;\r\n    if (!selected)\r\n      return;\r\n\r\n    const value = await _api.proxy.put('/remote/object/property', { objectPath: selected, access: 'READ_ACCESS' });\r\n    if (!_.isEqual(this.state.value, value)) {\r\n      this.setState({ value });\r\n    }\r\n  }\r\n\r\n  onPropertyValueChangeInternal = async (propertyName: string, property: string, value: any) => {\r\n    const { selected } = this.state;\r\n    if (!selected)\r\n      return;\r\n    \r\n    const propertyValue = _.set({}, property, value);\r\n    await _api.proxy.put('/remote/object/property', { \r\n      objectPath: selected,\r\n      access: 'WRITE_ACCESS',\r\n      propertyName,\r\n      propertyValue\r\n    });\r\n  }\r\n\r\n  onThrottledPropertyValueChange = _.throttle(this.onPropertyValueChangeInternal, 100);\r\n\r\n  onPropertyChange = (property: string, v: any) => {\r\n    const { value } = this.state;\r\n    _.set(value, property, v);\r\n    this.setState({ value });\r\n\r\n    const [ propertyName ] = property.split('.');\r\n    this.onThrottledPropertyValueChange(propertyName, property, v);\r\n  }\r\n\r\n  renderColorPicker = (property: string) => {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <ColorPicker value={_.get(value, property)}\r\n                    type={PropertyType.LinearColor}\r\n                    alpha={true}\r\n                    onChange={value => this.onPropertyChange(property, value)} />\r\n    );\r\n  }\r\n\r\n  renderSlider = (property: string, min: number, max: number, label?: string) => {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className='control'>\r\n        <label>{label ?? _.startCase(property)}</label>\r\n        <Slider showLabel={true}\r\n                value={_.get(value, property)}\r\n                onChange={value => this.onPropertyChange(property, value)}\r\n                min={min}\r\n                max={max} />\r\n    </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { selected, actors } = this.state;\r\n\r\n    const style: React.CSSProperties = {};\r\n    if (!selected) {\r\n      style.opacity = 0.6;\r\n      style.pointerEvents = 'none';\r\n    }\r\n\r\n    return (\r\n      <div className=\"light-cards-wrapper  custom-ui-wrapper\" tabIndex={-1}>\r\n        <div className='group' style={style}>\r\n\r\n          <div className='group vertical'>\r\n            <div className='cc-group'>\r\n              <div className='cc-title'>Size and Position</div>\r\n              <div className='body'>\r\n                {this.renderSlider('DistanceFromCenter', 0, 10_000, 'Distance')}\r\n                {this.renderSlider('Scale.X', 0.01, 1)}\r\n                {this.renderSlider('Scale.Y', 0.01, 1)}\r\n                {this.renderSlider('Longitude', 0, 360)}\r\n                {this.renderSlider('Latitude', 0, 360)}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='cc-group'>\r\n              <div className='cc-title'>Guides</div>\r\n              <div className='body'>\r\n                {this.renderColorPicker('Color')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className='cc-group'>\r\n            <div className='cc-title'>Appearance</div>\r\n            <div className='body'>\r\n              {this.renderColorPicker('GuideColor')}\r\n\r\n              {this.renderSlider('Exposure', 0, 10)}\r\n              {this.renderSlider('Opacity', 0, 1)}\r\n              {this.renderSlider('Feathering', 0, 10)}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className='cc-group shotbox'>\r\n          <div className='body'>\r\n            {Object.keys(actors).map(actor => \r\n              <div key={actor}\r\n                  className={`light-card ${selected === actor ? 'active' : ''}`}\r\n                  onClick={() => this.onActorSelect(actor)}>\r\n                {_.startCase(actors[actor])}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"light-card active\"\r\n                onClick={() => this.onSpawnActor()}>\r\n              <FontAwesomeIcon icon={['fas', 'plus']} />\r\n            </div>                \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { _api } from 'src/reducers';\r\nimport _ from  'lodash';\r\nimport { IAsset } from 'src/shared';\r\nimport { SafeImage, ValueInput } from '../controls';\r\nimport { SearchModal } from '../';\r\nimport path from 'path';\r\n\r\n\r\ninterface IPlaylistData {\r\n  Description: string;\r\n  Items: string[];\r\n  PlaylistItems: IPlaylistItem[];\r\n}\r\n\r\ninterface IPlaylistItem {\r\n  Path: string;\r\n  IsPlaying?: boolean;\r\n\r\n  Sequence: string;\r\n\tStartFrameOffset: number;\r\n\tEndFrameOffset: number;\r\n\tbHoldAtFirstFrame: boolean;\r\n\tNumLoops: number;\r\n  PlaybackSpeed: number;\r\n\tbMute: boolean;\r\n}\r\n\r\ntype Props = {\r\n  visible?: boolean;\r\n};\r\n\r\ntype State = {\r\n  filter: string;\r\n  sequences: IAsset[];\r\n  playlist?: IAsset;\r\n  data?: IPlaylistData;\r\n  activeTooltip: number;\r\n};\r\n\r\nexport class Playlist extends React.Component<Props, State> {\r\n  player: string;\r\n  interval: NodeJS.Timer;\r\n\r\n  state: State = {\r\n    filter: '',\r\n    sequences: [],\r\n    activeTooltip: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.onclick = this.onDocumentClick;\r\n    this.onInitialize();\r\n    this.interval = setInterval(this.onCheckSequenceStatus, 300);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.onclick = null;\r\n    clearInterval(this.interval);\r\n    this.interval = null;\r\n  }\r\n\r\n  onInitialize = async () => {\r\n    const WorldContextObject = await _api.proxy.function(\"Object'/Engine/Transient.UnrealEdEngine_0:UnrealEditorSubsystem_0'\", 'GetEditorWorld');\r\n    if (!WorldContextObject)\r\n      return;\r\n\r\n    this.player = await _api.proxy.function(\"Object'/Script/SequencerPlaylists.Default__SequencerPlaylistPlayer'\", 'GetDefaultPlayer', { WorldContextObject });\r\n\r\n    const sequences = await _api.assets.search('', ['/Script/LevelSequence.LevelSequence'], '/Game', 200);\r\n    this.setState({ sequences });\r\n\r\n    const currentPlaylist = await _api.proxy.function(this.player, 'GetPlaylist');\r\n    if (currentPlaylist) {\r\n      const folder = path.dirname(currentPlaylist);\r\n      const [filename] = path.basename(currentPlaylist).split('.');\r\n\r\n      const playlistAsset = await _api.assets.search(filename, ['/Script/SequencerPlaylists.SequencerPlaylist'], folder, 200);\r\n      await this.onLoadPlaylist(playlistAsset[0]);\r\n    }\r\n  }\r\n\r\n  onSearchChange = (filter: string)  => {\r\n    this.setState({ filter });\r\n  }\r\n\r\n  onCheckSequenceStatus = async () => {\r\n    const { playlist, data } = this.state;\r\n    if (!playlist || !data?.Items)\r\n      return;\r\n\r\n    let changed = false;\r\n    for (const item of data.PlaylistItems) {\r\n      const playing = !!await _api.proxy.function(this.player, 'IsPlaying', { Item: item.Path });\r\n\r\n      if (playing !== item.IsPlaying) {\r\n        item.IsPlaying = playing;\r\n        changed = true;\r\n      }\r\n    }\r\n\r\n    if (changed)\r\n      this.forceUpdate();\r\n  }\r\n\r\n  onDocumentClick = (e: MouseEvent) => {\r\n    const { activeTooltip } = this.state;\r\n\r\n    if (e.defaultPrevented || activeTooltip === null)\r\n      return;\r\n\r\n    this.setState({ activeTooltip: null });\r\n  }\r\n\r\n  onTooltipClick = (e: React.MouseEvent, activeTooltip: number) => {\r\n    e.preventDefault();\r\n    this.setState({ activeTooltip });\r\n  }\r\n\r\n  onPlaylistBrowse = async () => {\r\n    const playlist = await SearchModal.open({ placeholder: 'Search Playlist', types: ['/Script/SequencerPlaylists.SequencerPlaylist'], prefix: '/Game', count: 200 });\r\n    if (!playlist)\r\n      return;\r\n\r\n    await _api.proxy.function(this.player, 'SetPlaylist', { InPlaylist: playlist.Path });\r\n    await this.onLoadPlaylist(playlist);\r\n  }\r\n\r\n  onLoadPlaylist = async (playlist: IAsset) => {\r\n    if (!playlist)\r\n      return;\r\n\r\n    const data = await _api.proxy.property.get<IPlaylistData>(playlist.Path);\r\n    data.PlaylistItems = [];\r\n    for (const itemPath of data.Items) {\r\n      const item = await _api.proxy.property.get<IPlaylistItem>(itemPath);\r\n      item.Path = itemPath;\r\n      data.PlaylistItems.push(item);\r\n    }\r\n\r\n    this.setState({ playlist, data, filter: '' });\r\n  }\r\n\r\n  onAddItem = async () => {\r\n    // const { playlist, data } = this.state;\r\n    // if (!playlist || !data?.Items)\r\n    //   return;\r\n\r\n    // data.Items.push('');\r\n    // await _api.proxy.property.set(playlist.Path, 'Items', data.Items);\r\n  }\r\n\r\n  onSequenceBrowse = async (item: IPlaylistItem) => {\r\n    const sequence = await SearchModal.open({ placeholder: 'Search Sequence', types: ['LevelSequence'], prefix: '/Game', count: 200 });    \r\n    if (sequence)\r\n      await this.onSetPlaylistItem(item, 'Sequence', sequence.Path);\r\n  }\r\n\r\n  onPlaylistAction = (action: string) => {\r\n    const { playlist } = this.state;\r\n    if (!playlist || !this.player)\r\n      return;\r\n\r\n    return _api.proxy.function(this.player, action);\r\n  }\r\n\r\n  onPlaylistItemAction = (item: IPlaylistItem, action: string) => {\r\n    const { playlist } = this.state;\r\n    if (!playlist || !this.player)\r\n      return;\r\n\r\n    return _api.proxy.function(this.player, action, { Item: item.Path });\r\n  }\r\n\r\n\r\n  onSetPlaylistItem = async (item: IPlaylistItem, property: string, value: any) => {\r\n    item[property] = value;\r\n    await _api.proxy.property.set(item.Path, property, value);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  renderPlaylistItem = (item: IPlaylistItem, index: number) => {\r\n    const { sequences } = this.state;\r\n\r\n    const url = _api.assets.thumbnailUrl(item.Sequence);\r\n\r\n    let playButtonClass: string = \"\";\r\n    if (item.IsPlaying)\r\n      playButtonClass = \"active\";\r\n\r\n    return (\r\n      <tr key={index} className={`playlist-item col col-${index + 1}`}>\r\n        <td className=\"col-actions\">\r\n          <div className=\"controls\">\r\n            <button tabIndex={-1} className={`btn btn-secondary playlist-play ${(item.IsPlaying) && 'playing'} `} onClick={() => this.onPlaylistItemAction(item, 'PlayItem')}>\r\n              <FontAwesomeIcon icon={['fas', 'play']} />\r\n            </button>\r\n            <button tabIndex={-1} className={`btn btn-secondary playlist-stop  ${(item.IsPlaying) && 'playing active'}`} onClick={() => this.onPlaylistItemAction(item, 'StopItem')}>\r\n              <FontAwesomeIcon icon={['fas', 'stop']} />\r\n            </button>\r\n            <button tabIndex={-1} className=\"btn btn-secondary playlist-rehold\" onClick={() => this.onPlaylistItemAction(item, 'ResetItem')}>\r\n              <FontAwesomeIcon icon={['fas', 'reply']} />\r\n            </button>\r\n          </div>\r\n        </td>\r\n\r\n        <td className='col-thumb'>\r\n          <div className=\"thumbnail-block\">\r\n            <SafeImage src={url} \r\n                        fallback=\"/images/assets/Sequencer.png\"\r\n                        alt={item.Sequence}\r\n                        className=\"box-image\" />\r\n          </div>\r\n        </td>\r\n        <td className='col-name'>\r\n          <select value={item.Sequence} onChange={e => this.onSetPlaylistItem(item, 'Sequence', e.target.value)}>\r\n            <option>None</option>\r\n            {sequences.map(seq => <option key={seq.Path} value={seq.Path}>{seq.Name}</option>)}\r\n          </select>\r\n          <span className=\"icon\" onClick={() => this.onSequenceBrowse(item)}>\r\n          <img src='/images/icons/playlistIcons/ContentBrowser.svg' className='playlist-icon'/>\r\n          </span>\r\n        </td>\r\n        <td className='col-control'>\r\n          <div className='input-container'>\r\n            <ValueInput value={item.StartFrameOffset} onChange={value => this.onSetPlaylistItem(item, 'StartFrameOffset', value)} precision={0} />\r\n          </div>\r\n          <div className='input-container'>\r\n            <ValueInput value={item.EndFrameOffset} onChange={value => this.onSetPlaylistItem(item, 'EndFrameOffset', value)} precision={0} />\r\n          </div>\r\n        </td>\r\n        <td className='col-control'>\r\n          \r\n          <div className='checkbox-container'>\r\n            <label className=\"container\">\r\n              <input type=\"checkbox\" checked={item.bHoldAtFirstFrame} onChange={e => this.onSetPlaylistItem(item, 'bHoldAtFirstFrame', e.target.checked)}/>\r\n              <span className=\"checkmark\">\r\n                <img src='/images/icons/playlistIcons/HoldFrame.svg' className='playlist-icon'/>\r\n              </span>\r\n            </label>\r\n          </div>\r\n        </td>\r\n        <td className='col-control'>\r\n          <div>\r\n            <ValueInput value={item.NumLoops} onChange={value => this.onSetPlaylistItem(item, 'NumLoops', value)} precision={0} />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { filter, playlist, data } = this.state;\r\n\r\n    let items = data?.PlaylistItems ?? [];\r\n    if (filter) {\r\n      const filterLowerCase = filter.toLowerCase();\r\n      items = _.filter(items, i => i.Sequence.toLowerCase().includes(filterLowerCase));\r\n    }\r\n\r\n    if (!playlist)\r\n      return (\r\n        <div className=\"playlist-wrapper\">\r\n          <div className=\"playlist-placeholder\">\r\n            <div className=\"playlist-placeholder-title\" onClick={this.onPlaylistBrowse}>\r\n              <img src='/images/icons/playlistIcons/PlaylistLoad.svg' className='playlist-icon large'/>\r\n              Load Playlist\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"playlist-wrapper\" tabIndex={-1}>\r\n        <div className=\"playlist-controls\">\r\n          <div>\r\n            <div className=\"playlist-header\" onClick={this.onPlaylistBrowse}>\r\n              <span className=\"icon\"><FontAwesomeIcon icon={['fas', 'folder']} /></span>\r\n              <h1>{playlist?.Name}</h1>\r\n            </div>\r\n            <span className=\"description\">{data?.Description}</span>\r\n          </div>\r\n          <div className=\"controls\">\r\n            <button tabIndex={-1} className=\"btn btn-secondary playlist-play\" onClick={() => this.onPlaylistAction('PlayAll')}>\r\n              <FontAwesomeIcon icon={['fas', 'play']} />\r\n            </button>\r\n            <button tabIndex={-1} className=\"btn btn-secondary playlist-stop\" onClick={() => this.onPlaylistAction('StopAll')}>\r\n              <FontAwesomeIcon icon={['fas', 'stop']} />\r\n            </button>\r\n            <button tabIndex={-1} className=\"btn btn-secondary playlist-rehold\" onClick={() => this.onPlaylistAction('ResetAll')}>\r\n              <FontAwesomeIcon icon={['fas', 'reply']} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"list-wrapper\">\r\n          <div className=\"search-block\">\r\n          <button tabIndex={-1} className=\"btn btn-secondary add-item\" onClick={this.onAddItem}><FontAwesomeIcon icon={['fas', 'plus']} /> Item</button>\r\n            <div className=\"search-field\">\r\n              <FontAwesomeIcon icon={['fas', 'search']} />\r\n              <input type=\"text\" value={filter} onChange={e => this.onSearchChange(e.target.value)} autoComplete=\"no\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"col col-control\">&nbsp;</th>\r\n                  <th className=\"col col-3\" colSpan={2}>Playlist Items</th>\r\n                  <th className=\"col col-control\">Offset</th>\r\n                  <th className=\"col col-control\">Hold</th>\r\n                  <th className=\"col col-control\">Loop</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {items.map(this.renderPlaylistItem)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ntype PlaylistTooltipProps = {\r\n  visible: boolean;\r\n}\r\n\r\n\r\nclass PlaylistTooltip extends React.Component<PlaylistTooltipProps> {\r\n  render() {\r\n    const { visible } = this.props;\r\n\r\n    if (!visible)\r\n      return null;\r\n\r\n    return (\r\n      <div className=\"playlist-tooltip\">\r\n        <div className=\"playlist-tooltip-header\">Item Details</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { IAsset } from 'src/shared';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { _api } from 'src/reducers';\r\nimport _ from  'lodash';\r\nimport { SafeImage } from '../controls';\r\n\r\ntype Props = {\r\n  visible?: boolean;\r\n};\r\n\r\ntype State = {\r\n  map: string;\r\n  search: string;\r\n  sortBy: string;\r\n  sortAsc: boolean;\r\n  snapshot?: IAsset;\r\n  snapshots: IAsset[];\r\n  filters: IAsset[];\r\n};\r\n\r\nexport class Snapshot extends React.Component<Props, State> {\r\n\r\n  state: State = {\r\n    map: '',\r\n    search: '',\r\n    sortBy: 'Metadata.CaptureTime',\r\n    sortAsc: false,\r\n    snapshots: [],\r\n    filters: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAssets();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.visible && !prevProps.visible)\r\n      this.fetchAssets();\r\n  }\r\n\r\n  fetchAssets = async () => {\r\n    let { map } = this.state;\r\n\r\n    if (!map) {\r\n\t    const editorSubsystem = await _api.proxy.function('/Script/UnrealEd.Default__EditorSubsystemBlueprintLibrary', 'GetEditorSubsystem', { Class: '/Script/UnrealEd.UnrealEditorSubsystem' });\r\n      map = await _api.proxy.function(editorSubsystem, 'GetEditorWorld', {});\r\n    }\r\n\r\n    const nativeFilters = await _api.assets.search('', ['/Script/LevelSnapshotFilters.LevelSnapshotFilter'], '/Game', {}, 50);\r\n\r\n    const filterArgs = {\r\n      EnableBlueprintNativeClassFiltering: true,\r\n      NativeParentClasses: ['/Script/LevelSnapshotFilters.LevelSnapshotBlueprintFilter'],\r\n    };\r\n    const bpFilters = _.filter(await _api.assets.search('', ['/Script/Engine.Blueprint'], '/Game', filterArgs, 50), f => !!f.Metadata['GeneratedClass']);\r\n\r\n    const filters = [...bpFilters, ...nativeFilters];\r\n\r\n    const { search, sortBy, sortAsc } = this.state;\r\n    const assets = await _api.assets.search(search, ['/Script/LevelSnapshots.LevelSnapshot'], '/Game', {}, 200);\r\n    let snapshots = _.filter(assets, asset => !map || asset.Metadata?.MapPath === map);\r\n    \r\n    snapshots = this.sortAssets(snapshots, sortBy, sortAsc);\r\n    this.setState({ snapshots, filters, map });\r\n  }\r\n\r\n  fetchAssetsDebounced = _.debounce(this.fetchAssets, 200);\r\n\r\n  sortAssets = (snapshots: IAsset[], sortBy: string, ascending: boolean) => {\r\n    return _.orderBy(snapshots, [sortBy], [ascending ? 'asc' : 'desc'] );\r\n  }\r\n\r\n  onSortChange = () => {\r\n    const { sortBy, sortAsc } = this.state;\r\n    const snapshots = this.sortAssets(this.state.snapshots, sortBy, sortAsc);\r\n\r\n    this.setState({ snapshots });\r\n  }\r\n\r\n  onSetSort = (sortBy: string) => {\r\n    let { sortAsc } = this.state;\r\n    sortAsc = (sortBy === this.state.sortBy) ? !sortAsc : true;\r\n    this.setState({ sortBy, sortAsc }, this.onSortChange);\r\n  }\r\n\r\n  onSearchChange = (search: string)  => {\r\n    this.setState({ search });\r\n    this.fetchAssetsDebounced();\r\n  }\r\n\r\n  showDetails = (snapshot?: IAsset) => {\r\n    this.setState({ snapshot });\r\n  }\r\n\r\n  onCreate = async () => {\r\n    const { map } = this.state;\r\n    if (await SaveModal.show(map))\r\n      this.fetchAssets();\r\n  }\r\n\r\n  onKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Escape' && this.state.snapshot)\r\n      this.setState({ snapshot: null });\r\n  }\r\n\r\n  renderSnapshot = (snapshot: IAsset, index: number) => {\r\n    let className = '';\r\n    if (snapshot === this.state.snapshot)\r\n      className = 'selected-row ';\r\n\r\n    \r\n    const url = _api.assets.thumbnailUrl(snapshot.Path);\r\n\r\n    return (\r\n      <tr key={index} className={className} onClick={() => this.showDetails(snapshot)}>\r\n        <td className=\"name\">\r\n          <div className=\"name-block\">\r\n            <SafeImage src={url} \r\n                        fallback=\"/images/assets/LevelSnapshot.png\"\r\n                        alt={snapshot.Name}\r\n                        className=\"box\" />\r\n            <p>{snapshot.Name}</p>\r\n          </div>\r\n        </td>\r\n\r\n        <td className=\"description\"><p>{snapshot.Metadata?.SnapshotDescription}</p></td>\r\n\r\n        <td className=\"created\"><p>{snapshot.Metadata?.CaptureTime}</p></td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderColumnHeader = (title: string, field: string) => {\r\n    const { sortBy, sortAsc } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <th className={title.toLowerCase()} onClick={() => this.onSetSort(field)}>\r\n          {title}\r\n          {sortBy === field &&\r\n            <FontAwesomeIcon icon={sortAsc ? 'sort-up' : 'sort-down'} className=\"sort-icon\" />\r\n          }\r\n        </th>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { map, search, filters, snapshot, snapshots } = this.state;\r\n\r\n    return (\r\n      <div className=\"snapshot-wrapper\" onClick={() => this.showDetails()} tabIndex={-1}>\r\n        <div className=\"list-wrapper\">\r\n          <div className=\"search-block\">\r\n            <button className=\"btn snapshot-btn\" onClick={this.onCreate}><p>TAKE SNAPSHOT</p></button>\r\n            <div className=\"search-field\">\r\n              <FontAwesomeIcon icon={['fas', 'search']} />\r\n              <input type=\"text\" value={search} onChange={e => this.onSearchChange(e.target.value)} autoComplete=\"no\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-wrapper\" onClick={e => e.stopPropagation()}>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  {this.renderColumnHeader('Name', 'Name')}\r\n                  {this.renderColumnHeader('Description', 'Metadata.SnapshotDescription')}\r\n                  {this.renderColumnHeader('Created', 'Metadata.CaptureTime')}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {snapshots.map(this.renderSnapshot)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <SnapshotPreview map={map} filters={filters} snapshot={snapshot} onClose={() => this.showDetails()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\ntype SnapshotPreviewProps = {\r\n  map: string;\r\n  snapshot?: IAsset;\r\n  filters: IAsset[];\r\n  onClose: () => void;\r\n};\r\n\r\ntype SnapshotPreviewState = {\r\n  filter?: string;\r\n  loading?: boolean;\r\n};\r\n\r\nclass SnapshotPreview extends React.Component<SnapshotPreviewProps, SnapshotPreviewState> {\r\n  state: SnapshotPreviewState = {\r\n  };\r\n\r\n  onLoad = async () => {\r\n    const { map, snapshot, onClose, filters } = this.props;\r\n    const { filter, loading } = this.state;\r\n    if (!snapshot || loading)\r\n      return;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n\r\n      let filterInstance;\r\n      if (filter) {\r\n        const filterAsset = _.find(filters, f => f.Path === filter);\r\n\r\n        switch (filterAsset?.Class) {\r\n          case 'Blueprint':\r\n            filterInstance  = await _api.proxy.function(\r\n              '/Script/LevelSnapshotFilters.Default__FilterBlueprintFunctionLibrary', \r\n              'CreateFilterByClass',\r\n              { \r\n                Class: filterAsset.Metadata['GeneratedClass']\r\n              }\r\n            );\r\n            break;\r\n\r\n          case 'LevelSnapshotFilter':\r\n            filterInstance = filterAsset.Path;\r\n            break;\r\n        }\r\n      }\r\n\r\n      await _api.proxy.function(\r\n        '/Script/LevelSnapshots.Default__LevelSnapshotsFunctionLibrary',\r\n        'ApplySnapshotToWorld',\r\n        {\r\n          WorldContextObject: map,\r\n          Snapshot: snapshot.Path,\r\n          OptionalFilter: filterInstance,\r\n        }\r\n      );\r\n\r\n    } catch {\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n    onClose?.();\r\n  }\r\n\r\n  render() {\r\n    const { snapshot, filters } = this.props;\r\n    const { filter, loading } = this.state;\r\n    let className = 'btn snapshot-btn ';\r\n    \r\n    if (!snapshot)\r\n      className += 'disabled';\r\n\r\n    return (\r\n      <div className=\"snapshot-preview-wrapper\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"preview-title\">\r\n          <span>{snapshot?.Metadata?.SnapshotName ? snapshot?.Name : <span className=\"hint-text\">Select a snapshot above</span>}</span>\r\n        </div>\r\n\r\n        {snapshot?.Path &&\r\n          <div className=\"preview-description\">\r\n            <div className=\"description-title\">Asset Path</div>\r\n            {snapshot?.Path}\r\n          </div>\r\n        }\r\n        <div className=\"controls-block\">\r\n          <div className=\"snapshot-dropdown\">\r\n            <div className=\"title\">Filter</div>\r\n            <select className=\"dropdown\" value={filter} onChange={e => this.setState({ filter: e.target.value })}>\r\n              <option value=\"\">[None]</option>\r\n              {filters?.map((asset, index) =>\r\n                <option key={index} value={asset.Path}>{_.head(asset.Name?.split('.'))}</option>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <button className={className} onClick={this.onLoad}>\r\n            {loading && <FontAwesomeIcon icon={['fas', 'sync-alt']} className=\"spin-icon\" spin />}\r\n            <p>APPLY SNAPSHOT</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\ntype SaveModalProps = {\r\n  map: string;\r\n  close: (result: boolean) => void;\r\n};\r\n\r\ntype SaveModalState = {\r\n  name: string;\r\n  path: string;\r\n  description: string;\r\n  loading?: boolean;\r\n};\r\n\r\nclass SaveModal extends React.Component<SaveModalProps, SaveModalState> {\r\n\r\n  state: SaveModalState = {\r\n    loading: true,\r\n    name: '',\r\n    path: '/Game/LevelSnapshots/',\r\n    description: '',\r\n  };\r\n\r\n  private static pending: (result?: boolean) => void;\r\n\r\n  public static show(map: string): Promise<boolean> {\r\n    SaveModal.pending?.(undefined);\r\n    SaveModal.pending = undefined;\r\n\r\n    const div = document.createElement('div');\r\n    document.getElementById('modal').prepend(div);\r\n\r\n    return new Promise<boolean>(resolve => {\r\n      SaveModal.pending = resolve;\r\n\r\n      ReactDOM.render(<SaveModal map={map} close={resolve} />, div);\r\n    })\r\n      .finally(() => {\r\n        const unmountResult = ReactDOM.unmountComponentAtNode(div);\r\n        if (unmountResult && div.parentNode)\r\n          div.parentNode.removeChild(div);\r\n      });\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    try {\r\n      const editor = '/Script/LevelSnapshotsEditor.Default__LevelSnapshotsEditorSettings';\r\n\r\n      const { RootLevelSnapshotSaveDir } = await _api.proxy.property.get(editor, 'RootLevelSnapshotSaveDir');\r\n      let path: string = RootLevelSnapshotSaveDir?.Path ?? '/Game/LevelSnapshots';\r\n\r\n      const { LevelSnapshotSaveDir } = await _api.proxy.property.get(editor, 'LevelSnapshotSaveDir');\r\n      if (LevelSnapshotSaveDir)\r\n        path += `/${LevelSnapshotSaveDir}`;\r\n\r\n      const { DefaultLevelSnapshotName } = await _api.proxy.property.get(editor, 'DefaultLevelSnapshotName');\r\n\r\n      let InWorldName = this.props.map;\r\n      const match = /([^/]+)\\..+$/.exec(this.props.map);\r\n      if (match?.[1])\r\n        InWorldName = match[1];      \r\n\r\n      \r\n      const PathFormatted = await _api.proxy.function(editor, 'ParseLevelSnapshotsTokensInText', { InTextToParse: path, InWorldName });\r\n      const NameFormatted = await _api.proxy.function(editor, 'ParseLevelSnapshotsTokensInText', { InTextToParse: DefaultLevelSnapshotName, InWorldName });\r\n\r\n      this.setState({ path: PathFormatted, name: NameFormatted });\r\n    } catch {\r\n\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  onOK = async () => {\r\n    const { name, path, description, loading } = this.state;\r\n    if (!name || loading)\r\n      return;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      await _api.proxy.function(\r\n        '/Script/LevelSnapshotsEditor.Default__LevelSnapshotsEditorFunctionLibrary',\r\n        'TakeAndSaveLevelSnapshotEditorWorld',\r\n        {\r\n          FileName: name,\r\n          FolderPath: path,\r\n          Description: description\r\n        }\r\n      );\r\n    } catch {\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n    this.props.close(true);\r\n  }\r\n\r\n  onCancel = () => {\r\n    if (!this.state.loading)\r\n      this.props.close(false);\r\n  }\r\n\r\n  onKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Escape')\r\n      this.onCancel();\r\n  }\r\n  \r\n  render() {\r\n    const { name, path, description, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"fullscreen\" onClick={this.onCancel} onKeyPress={this.onKeyPress} tabIndex={-1}>\r\n        <div className=\"save-asset-modal\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"save-row\">\r\n            TAKE SNAPSHOT\r\n            <FontAwesomeIcon icon={['fas', 'times']} onClick={this.onCancel} />\r\n          </div>\r\n\r\n          <div className=\"item-row\">\r\n            <div className=\"item-title\">Name</div>\r\n            <input className=\"item-content name-field\" \r\n                    value={name}\r\n                    onChange={e => this.setState({ name: e.target.value })}\r\n                    autoFocus\r\n                    autoComplete=\"no\"\r\n                    readOnly={loading} />\r\n          </div>\r\n\r\n          <div className=\"item-row\">\r\n            <div className=\"item-title\">Description</div>\r\n            <textarea className=\"item-content description-field\"\r\n                      readOnly={loading}\r\n                      rows={5}\r\n                      value={description}\r\n                      onChange={e => this.setState({ description: e.target.value })} />\r\n          </div>\r\n\r\n          <div className=\"item-row\">\r\n            <div className=\"item-title\">Save Dir</div>\r\n            <input className=\"item-content name\" value={path} onChange={e => this.setState({ path: e.target.value })} autoComplete=\"no\" readOnly={loading} />\r\n          </div>\r\n\r\n          <button className=\"btn snapshot-btn\" disabled={!name} onClick={this.onOK}>\r\n            {loading && \r\n              <FontAwesomeIcon icon={['fas', 'sync-alt']} className=\"spin-icon\" spin />\r\n            }\r\n            TAKE SNAPSHOT\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { _api } from 'src/reducers';\r\nimport _ from  'lodash';\r\nimport { IAsset } from 'src/shared';\r\nimport { SafeImage } from '../controls';\r\n\r\n\r\ntype Props = {\r\n  visible?: boolean;\r\n};\r\n\r\ntype State = {\r\n  search: string;\r\n  assets: IAsset[],\r\n};\r\n\r\nexport class Sequencer extends React.Component<Props, State> {\r\n  state: State = {\r\n    search: '',\r\n    assets: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAssets();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.visible && !prevProps.visible)\r\n      this.fetchAssets();\r\n  }\r\n\r\n  fetchAssets = async () => {\r\n    const { search } = this.state;\r\n    const assets = await _api.assets.search(search, ['/Script/LevelSequence.LevelSequence'], '/Game', 200);\r\n    this.setState({ assets });\r\n  }\r\n\r\n  fetchAssetsDebounced = _.debounce(this.fetchAssets, 200);\r\n\r\n  onSearchChange = (search: string)  => {\r\n    this.setState({ search });\r\n    this.fetchAssetsDebounced();\r\n  }\r\n\r\n  renderSequence = (asset: IAsset, index: number) => {\r\n    const url = _api.assets.thumbnailUrl(asset.Path);\r\n\r\n    return (\r\n      <tr key={index} className={`col col-${index + 1}`}>\r\n        <td>\r\n          <div className=\"name-block\">\r\n            <SafeImage src={url} \r\n                        fallback=\"/images/assets/Sequencer.png\"\r\n                        alt={asset.Name}\r\n                        className=\"box\" />\r\n            <p>{asset.Name}</p>\r\n          </div>\r\n        </td>\r\n        <td><p>{asset.Path}</p></td>\r\n        <td>\r\n          <div className=\"play-icon\" onClick={() => this.playSequence(asset)}>\r\n            <FontAwesomeIcon icon={['fas', 'play']} />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  playSequence = async (sequence: IAsset) => {\r\n    const sequencer = '/Script/LevelSequenceEditor.Default__LevelSequenceEditorBlueprintLibrary';\r\n    const editor = '/Script/EditorScriptingUtilities.Default__EditorAssetLibrary';\r\n    try {\r\n      await _api.proxy.put('/remote/object/call', { objectPath: editor, functionName: 'LoadAsset', parameters: { 'AssetPath': sequence.Path }  });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'OpenLevelSequence', parameters: { 'LevelSequence': sequence.Path }  });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'Pause' });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'SetCurrentTime', parameters: { NewFrame: 0 } });\r\n      await _api.proxy.put('/remote/object/call', { objectPath: sequencer, functionName: 'Play' });\r\n    } catch (err) {\r\n      console.log('Failed to play sequence', sequence);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { search, assets } = this.state;\r\n\r\n    return (\r\n      <div className=\"snapshot-wrapper sequencer-wrapper\" tabIndex={-1}>\r\n        <div className=\"list-wrapper\">\r\n          <div className=\"search-block\">\r\n            <div className=\"search-field\">\r\n              <FontAwesomeIcon icon={['fas', 'search']} />\r\n              <input type=\"text\" value={search} onChange={e => this.onSearchChange(e.target.value)} autoComplete=\"no\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"col col-2\">Name</th>\r\n                  <th className=\"col col-3\">Folder</th>\r\n                  <th className=\"col col-4\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {assets.map(this.renderSequence)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ReduxState } from 'src/reducers';\r\nimport { IScreen, IPayload, ScreenType } from 'src/shared';\r\nimport * as Screens from './Screens';\r\n\r\n\r\ntype PropsFromState = Partial<{\r\n  payload: IPayload;\r\n}>;\r\n\r\ntype Props = {\r\n  screen: IScreen;\r\n  visible?: boolean;\r\n};\r\n\r\nconst mapStateToProps = (state: ReduxState): PropsFromState => ({\r\n  payload: state.api.payload\r\n});\r\n\r\n@(connect(mapStateToProps) as any)\r\nexport class Screen extends React.Component<Props & PropsFromState> {\r\n\r\n  render() {\r\n    const { screen, payload, visible } = this.props;\r\n    if (!screen)\r\n      return null;\r\n\r\n    const props = {\r\n      payload,\r\n      visible,\r\n      data: screen.data,\r\n    };\r\n\r\n    switch (screen.type) {\r\n      case ScreenType.Snapshot:\r\n        return <Screens.Snapshot {...props} />;\r\n\r\n      case ScreenType.Sequencer:\r\n        return <Screens.Sequencer {...props} />;\r\n\r\n      case ScreenType.Playlist:\r\n        return <Screens.Playlist {...props} />;\r\n      \r\n      case ScreenType.ColorCorrection:\r\n        return <Screens.ColorCorrection {...props} />;\r\n      \r\n      case ScreenType.LightCards:\r\n        return <Screens.LightCards {...props} />;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}","import React from 'react';\r\nimport { ReactComponent as Logo } from '../assets/ue_logo.svg';\r\n\r\n\r\nexport class Login extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fullscreen login-screen\">\r\n        <div className='icon-wrapper'>\r\n          <div className=\"app-icon\">\r\n            <Logo className=\"logo\" />\r\n          </div>\r\n          <div>Remote Control Web App</div>\r\n        </div>\r\n        <div className='form'>\r\n          Password\r\n          <input type='password'/>\r\n          <div className='hint'>Configure the password in: <span className=\"breadcrumb\">Project Settings / Authentication / Password</span></div>\r\n          <label className='login-status'>Incorrect Password</label>\r\n        </div>\r\n     </div>\r\n    );\r\n  }\r\n};","import { useState, useEffect } from 'react';\r\nimport AgoraRTC, {\r\n  IAgoraRTCClient, IAgoraRTCRemoteUser, ILocalVideoTrack, ILocalAudioTrack } from 'agora-rtc-sdk-ng';\r\n\r\nlet localTracks = {audioTrack: undefined };\r\n//let localTracks = { videoTrack: undefined, audioTrack: undefined };\r\n\r\nexport default function useAgora(client: IAgoraRTCClient | undefined)\r\n  :\r\n   {\r\n      localAudioTrack: ILocalAudioTrack | undefined ,\r\n      //localVideoTrack: ILocalVideoTrack | undefined ,\r\n      joinState: boolean,\r\n      joinInProgress: boolean,\r\n      aiDenoiserState: boolean,\r\n      leave: Function,\r\n      join: Function,\r\n      controler: Function,\r\n      remoteUsers: IAgoraRTCRemoteUser[],\r\n    }\r\n    {\r\n  //const [localVideoTrack, setLocalVideoTrack] = useState<ILocalVideoTrack | undefined>(undefined);\r\n  const [localAudioTrack, setLocalAudioTrack] = useState<ILocalAudioTrack | undefined>(undefined);\r\n\r\n  const [joinState, setJoinState] = useState(false);\r\n\r\n  const [joinInProgress, setJoinInProgressState] = useState(false);\r\n\r\n  const [aiDenoiserState, setAIDenoiser] = useState(false);\r\n\r\n\r\n  const [remoteUsers, setRemoteUsers] = useState<IAgoraRTCRemoteUser[]>([]);\r\n  \r\n  let options = { appid: null, channel: null, uid: null, token: null };\r\n\r\n  //Call continuslly with early exit\r\n  async function join(appid: string, channel: string, token?: string, uid?: string | number | null) {\r\n\r\n    //Allow single channel only\r\n    if (!client || joinState || joinInProgress) return;\r\n\r\n    setJoinInProgressState(true);\r\n    // let microphoneAudioTrack = await AgoraRTC.createMicrophoneAudioTrack() ;\r\n\r\n    // let cameraVideoTrack = await AgoraRTC.createCameraVideoTrack();\r\n\r\n    // localTracks = { videoTrack: cameraVideoTrack, audioTrack: microphoneAudioTrack };\r\n\r\n    // await client.join(appid, channel, token || null);\r\n\r\n    // @ts-ignore\r\n    [options.uid, localTracks.audioTrack] = await Promise.all([\r\n      //IB: Added uid to allow for selecting id for each client that joins manually.\r\n      client.join(appid, channel, token, uid),\r\n      // IB: End\r\n      AgoraRTC.createMicrophoneAudioTrack(),\r\n      //AgoraRTC.createCameraVideoTrack(),\r\n    ]);\r\n\r\n    setLocalAudioTrack(localTracks.audioTrack);\r\n    //setLocalVideoTrack(localTracks.videoTrack);\r\n    \r\n    // @ts-ignore\r\n    await client.publish(Object.values(localTracks));\r\n\r\n    (window as any).client = client;\r\n    //(window as any).videoTrack = localTracks.videoTrack;\r\n\r\n    setJoinState(true);\r\n    setJoinInProgressState(false);\r\n  }\r\n\r\n  async function leave() {\r\n    if (localAudioTrack) {\r\n      localAudioTrack.stop();\r\n      localAudioTrack.close();\r\n    }\r\n   // if (localVideoTrack) {\r\n   //   localVideoTrack.stop();\r\n   //   localVideoTrack.close();\r\n   // }\r\n    setRemoteUsers([]);\r\n    setJoinState(false);\r\n    await client?.leave();\r\n  }\r\n\r\n  async function controler(flag: boolean){\r\n    //await enableDenoiser4AudioTrack?.controler(flag);\r\n    //console.log(\"execute controler function with flag: \" + flag);\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!client) return;\r\n    setRemoteUsers(client.remoteUsers);\r\n\r\n    const handleUserPublished = async (user: IAgoraRTCRemoteUser, mediaType: 'audio' | 'video') => {\r\n      await client.subscribe(user, mediaType);\r\n      // toggle rerender while state of remoteUsers changed.\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    const handleUserUnpublished = (user: IAgoraRTCRemoteUser) => {\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    const handleUserJoined = (user: IAgoraRTCRemoteUser) => {\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    const handleUserLeft = (user: IAgoraRTCRemoteUser) => {\r\n      setRemoteUsers(remoteUsers => Array.from(client.remoteUsers));\r\n    };\r\n    client.on('user-published', handleUserPublished);\r\n    client.on('user-unpublished', handleUserUnpublished);\r\n    client.on('user-joined', handleUserJoined);\r\n    client.on('user-left', handleUserLeft);\r\n\r\n    return () => {\r\n      client.off('user-published', handleUserPublished);\r\n      client.off('user-unpublished', handleUserUnpublished);\r\n      client.off('user-joined', handleUserJoined);\r\n      client.off('user-left', handleUserLeft);\r\n    };\r\n  }, [client]);\r\n\r\n  return {\r\n    localAudioTrack,\r\n    //localVideoTrack,\r\n    joinState,\r\n    joinInProgress,\r\n    aiDenoiserState,\r\n    leave,\r\n    join,\r\n    controler,\r\n    remoteUsers,\r\n  };\r\n}","import { ILocalVideoTrack, IRemoteVideoTrack, ILocalAudioTrack, IRemoteAudioTrack } from \"agora-rtc-sdk-ng\";\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nexport interface VideoPlayerProps {\r\n  videoTrack: ILocalVideoTrack | IRemoteVideoTrack | undefined;\r\n  audioTrack: ILocalAudioTrack | IRemoteAudioTrack | undefined;\r\n}\r\n\r\nconst MediaPlayer = (props: VideoPlayerProps) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    if (!container.current) return;\r\n    props.videoTrack?.play(container.current);\r\n    return () => {\r\n      props.videoTrack?.stop();\r\n    };\r\n  }, [container, props.videoTrack]);\r\n  useEffect(() => {\r\n    if(props.audioTrack){\r\n      props.audioTrack?.play();\r\n    }\r\n    return () => {\r\n      props.audioTrack?.stop();\r\n    };\r\n  }, [props.audioTrack]);\r\n  return (\r\n    <div ref={container}  className=\"video-player\" style={{ width: \"320px\", height: \"240px\"}}></div>\r\n  );\r\n};\r\n\r\nexport default MediaPlayer;","import React, { useState,useEffect } from 'react';\r\nimport AgoraRTC from 'agora-rtc-sdk-ng';\r\nimport useAgora from './hooks/useAgora';\r\nimport MediaPlayer from './components/MediaPlayer';\r\nimport './Call.css';\r\n\r\ninterface IAuth {\r\n  uid: string;\r\n  token: string;\r\n}\r\n\r\nconst client = AgoraRTC.createClient({ codec: 'h264', mode: 'rtc' });\r\n/*async function getToken(channel:string): Promise<any> \r\n{\r\nlet result : IAuth = {token:\"\",uid:\"\"};\r\n\r\n  const request: RequestInit = { method:'GET', mode: 'cors', redirect: 'follow', headers: new Headers({\r\n    'Authorization':'fhWJWc2gwn088XxmsJCAgoDn'})};\r\n    // WARNING: Currently using token-free API.\r\n    const res = await (fetch('https://v1r7dh4ice.execute-api.us-east-1.amazonaws.com/prod/api/token?channels='+channel, request))\r\n  .catch((error) => {\r\n    console.error(\"Error Getting Token:\"+ error);\r\n   });\r\n  if(res instanceof Response)\r\n  {\r\n    let answer = await res.json();\r\n  if (!res.ok){\r\n      return result;\r\n  }\r\n  for (let i in answer.channels) {\r\n    result.token = answer.channels[i];\r\n    result.uid = answer.uid;\r\n }\r\nreturn result;\r\n  }\r\nelse\r\n    return result;\r\n}*/\r\n\r\n//Added to allow for passing of app ID token and channel\r\nfunction findGetParameter(parameterName : string) : string{\r\n  var result = '',\r\n      tmp = [];\r\n      window.location.search\r\n      .substr(1)\r\n      .split(\"&\")\r\n      .forEach(function (item) {\r\n        tmp = item.split(\"=\");\r\n        if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\r\n      });\r\n  return result;\r\n}\r\n\r\nfunction DeprecatedCall(props) {\r\n  const appid = \"7e6df1173bb44ad3bedd070112748cf6\";\r\n  const {\r\n    localAudioTrack, //localVideoTrack, \r\n    joinState, joinInProgress, aiDenoiserState,leave, join, controler, remoteUsers\r\n  } = useAgora(client);\r\n\r\n  return (\r\n    <div className='call'>\r\n      <form className='call-form'>\r\n        <div className='button-group'>\r\n          <button id='Audio Channel' type='button' className='btn btn-primary btn-sm voice-button' style={{display: !joinState ? 'inline' : 'none'}} onClick={async () => { \r\n           const codeFromQueryParameter = findGetParameter('code');\r\n           // IB: When testing locally, we need to pass in the \"test\" channel ID for Agora testing.\r\n           //Otherwise, use photonRoom var set in session storage.\r\n           const accessCode =  sessionStorage.photonRoom!=='' && sessionStorage.photonRoom != null? sessionStorage.photonRoom : 'test';\r\n            // IB: Pass in Random generated userID from parent.\r\n            join(appid,accessCode, null,parseInt(props.userID));\r\n            }}>Join Voice Channel</button>\r\n          <button id='leave' type='button' className='btn btn-primary btn-sm voice-button' style={{display: joinState ? 'inline' : 'none',color:'#5abaf9'}} onClick={() => {leave()}}>Leave Voice Channel</button>\r\n        </div>\r\n      </form>\r\n      {/*Hidden to avoid taking extra UI space, as video will not be part of our call*/}\r\n      <div className='player-container' style={{display:'none'}} > \r\n        <div className='local-player-wrapper' >\r\n        </div>\r\n        {remoteUsers.map(user => (<div className='remote-player-wrapper' key={user.uid}>\r\n            <p className='remote-player-text'>{`remoteVideo(${user.uid})`}</p>\r\n            <MediaPlayer videoTrack={undefined/*<div>user.videoTrack*/} audioTrack={user.audioTrack}></MediaPlayer>\r\n          </div>))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeprecatedCall;\r\n","import React from 'react';\r\nimport { ITab, IPreset } from '../shared';\r\nimport { _api } from '../reducers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconName } from '@fortawesome/fontawesome-svg-core';\r\nimport { Droppable, Draggable, DraggableStateSnapshot } from 'react-beautiful-dnd';\r\nimport DeprecatedCall from '../Call';\r\n\r\ntype State = {\r\n  allTabsVisible: boolean;\r\n};\r\n\r\ntype Props = {\r\n  preset: IPreset;\r\n  tabs: ITab[];\r\n  selected: number;\r\n    //IB: Including User ID\r\n    agoraUserID:string;\r\n    // IB: End of Additions\r\n  editable?: boolean;\r\n  locked: boolean;\r\n  undo: boolean;\r\n  redo: boolean;\r\n\r\n  onLockedChange: () => void;\r\n  onChange: (index: number) => void;\r\n  onNewTab: () => void;\r\n  onDeleteTab: (tab: number) => Promise<void>;\r\n};\r\n\r\nexport class Tabs extends React.Component<Props> {\r\n  ref = React.createRef<HTMLDivElement>();\r\n  state: State = { \r\n    allTabsVisible: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (prevProps.tabs !== this.props.tabs || \r\n        prevProps.selected !== this.props.selected ||\r\n        prevProps.editable !== this.props.editable) \r\n      this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  setRef = (innerRef: (el) => void, el) => {\r\n    this.ref = { current: el };\r\n\r\n    innerRef(el);\r\n  }\r\n\r\n  getStyle = (style: React.CSSProperties, snapshot: DraggableStateSnapshot): React.CSSProperties => {\r\n    let transform = style.transform;\r\n    transform = transform?.replace(/(, (-|)[0-9]+)/, ', 0') || '';    \r\n\r\n    return { ...style, transform };\r\n  }\r\n\r\n  onResize = () => {\r\n    const wrapper = this.ref?.current;\r\n    if (!wrapper)\r\n      return;\r\n\r\n    const { children } = wrapper;\r\n    let childrenWidth = 0;\r\n    for (let el of children)\r\n      childrenWidth += el.clientWidth;\r\n    \r\n    this.setState({ allTabsVisible: childrenWidth < wrapper.clientWidth });\r\n    this.onTabChange(this.props.selected);\r\n  }\r\n\r\n  onTabChange = (index: number): void => {\r\n    const wrapper = this.ref.current;\r\n    if (index < 0 || index >= this.props.tabs?.length || !wrapper)\r\n      return;\r\n      \r\n    if (this.props.selected !== index)\r\n      this.props.onChange?.(index);\r\n\r\n    const { children, scrollLeft, clientWidth } = wrapper;\r\n\r\n    let offsetStart = 0;\r\n    for (let i = 0; i < index; i++)\r\n      offsetStart += children[i]?.clientWidth ?? 0;\r\n\r\n    const offsetEnd = offsetStart + children[index]?.clientWidth;\r\n    const visibleLeft = scrollLeft <= offsetStart;\r\n    const visibleRight = offsetEnd <= scrollLeft + clientWidth;\r\n    \r\n    if (!visibleRight)\r\n      wrapper.scrollTo(offsetEnd - clientWidth, 0);\r\n\r\n    if (!visibleLeft) \r\n      wrapper.scrollTo(offsetStart, 0);\r\n  }\r\n\r\n  renderTab = (tab: ITab, index: number) => {\r\n    const { editable, selected } = this.props;\r\n    const id = `tab-${index}`;\r\n\r\n    return(\r\n      <Draggable key={id} \r\n                 draggableId={id}\r\n                 index={index}\r\n                 isDragDisabled={!editable}>\r\n        {(provided, snapshot) => (\r\n          <div className={`tab ${index === selected && 'selected'}`}\r\n               ref={provided.innerRef}\r\n               {...provided.draggableProps}\r\n               {...provided.dragHandleProps}\r\n               style={{ ...this.getStyle(provided.draggableProps.style, snapshot) }}\r\n               onPointerDown={() => this.onTabChange(index)}\r\n               tabIndex={-1}>\r\n            <div className=\"icon\" >\r\n              {!!tab.icon && <FontAwesomeIcon icon={[\"fas\", tab.icon as IconName]} />}\r\n            </div>\r\n            <div className=\"label\">{tab.name}</div>\r\n            {editable && selected === index &&\r\n              <div className=\"delete-tab\" onClick={this.props.onDeleteTab.bind(this, index)}><FontAwesomeIcon icon={['fas', 'times']} /></div>\r\n            }\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { tabs, selected, editable, preset, locked, undo, redo } = this.props;\r\n    const { allTabsVisible } = this.state;\r\n\r\n    let leftTabClassName = 'arrow left ';\r\n    if (selected === 0 || allTabsVisible)\r\n      leftTabClassName += 'disabled';\r\n\r\n    let rightTabClassName = 'arrow right ';\r\n    if (selected === tabs?.length - 1 || allTabsVisible)\r\n      rightTabClassName += 'disabled ';\r\n\r\n    let iconUndoClassName = 'icon ';\r\n    if (!undo)\r\n      iconUndoClassName += 'disabled';\r\n      \r\n    let iconRedoClassName = 'icon ';\r\n    if (!redo)\r\n      iconRedoClassName += 'disabled';\r\n\r\n    return (\r\n      <div className=\"tabs-wrapper\">\r\n        <div className=\"tabs-wrapper-inner\">\r\n          <Droppable droppableId=\"header-tabs\" \r\n                     direction=\"horizontal\" \r\n                     type=\"HEADER_TABS\"\r\n                     isDropDisabled={!editable}>\r\n            {provided => (\r\n              <div ref={this.setRef.bind(this, provided.innerRef)}\r\n                   className=\"tabs-drop-list\"\r\n                   {...provided.droppableProps}>\r\n                {tabs?.map(this.renderTab)}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n        <DeprecatedCall userID={this.props.agoraUserID}/>\r\n        <div className=\"tab-navigation\">\r\n          {!!editable && \r\n            <div className=\"tab new-tab\" onClick={() => this.props.onNewTab()}><FontAwesomeIcon icon={['fas', 'plus']} /></div>\r\n          }\r\n          <div className={leftTabClassName} onClick={() => this.onTabChange(selected - 1)}><FontAwesomeIcon icon={['fas', 'caret-left']} /></div>\r\n          <div className={rightTabClassName} onClick={() => this.onTabChange(selected + 1)}><FontAwesomeIcon icon={['fas', 'caret-right']} /></div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n} ","import React from 'react';\r\nimport { ConnectionSignal } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  signal: ConnectionSignal;\r\n}\r\n\r\nexport class SignalIcon extends React.Component<Props> {\r\n  render() {\r\n    const { signal } = this.props;\r\n    if (signal === ConnectionSignal.Good)\r\n      return null;\r\n\r\n    return (\r\n      <div className={`signal-icon ${signal.toLowerCase()}`}>\r\n        <span className=\"bar-1\"></span>\r\n        <span className=\"bar-2\"></span>\r\n        <span className=\"bar-3\"></span>\r\n        <span className=\"bar-4\"></span>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { ScreenType } from 'src/shared';\r\n\r\n\r\ntype Props = {\r\n  onAddScreen: (screen: ScreenType) => void;\r\n}\r\n\r\nexport class EmptyTab extends React.Component<Props> {\r\n\r\n  screens = [\r\n    { type: ScreenType.Stack, title: 'Build Your Own UI' },\r\n    { type: ScreenType.ColorCorrection, title: 'Color Correction' },\r\n    { type: ScreenType.Playlist, title: 'Playlist' },\r\n    { type: ScreenType.Snapshot, title: 'Snapshot' },\r\n    { type: ScreenType.Sequencer, title: 'Sequencer' },\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel\">\r\n        <div className=\"empty-tab-container\">\r\n          <ul className=\"screens-list\">\r\n            {this.screens.map(({ type, title }) => (\r\n              <li className=\"screen-type-item\" key={type}>\r\n                <button className=\"btn btn-secondary\" onClick={() => this.props.onAddScreen(type)}>{title}</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport { WidgetProperties } from 'src/utilities';\r\n\r\nimport './style.less';\r\n\r\n/*\r\n  There are 2 ways to create custom widgets:\r\n  1. As all other \"built-in\" widgets\r\n      1) Add a new enum entry to the WidgetTypes enum\r\n      2) Offer new WidgetType to the compatible property types in WidgetUtilities::compatibleWidgets\r\n      3) Add a case in Widget.tsx to render your new widget\r\n      4) if needed add configuration parameters in WidgetConfig.tsx\r\n\r\n  2. Self contained widget \r\n      By registering a React component (class or a function component), see example bellow:\r\n\r\n*/\r\n\r\n\r\n// Uncomment bellow to register this custom widget example\r\n//\r\n//\r\n// WidgetUtilities.registerWidget(\r\n//   'MyCustomWidget',                            // Name of this custom widget\r\n//   [PropertyType.Float, PropertyType.Double],   // a list of supported property types\r\n//   props => <CustomWidget {...props} />         // render function\r\n// );\r\n\r\nexport class CustomWidget extends React.Component<WidgetProperties<number>> {\r\n\r\n  renderButton = (value: number, text: string) => {\r\n    let className = 'btn ';\r\n    if (Math.abs(value - this.props.value) < 0.01)\r\n      className += 'btn-primary ';\r\n    else\r\n      className += 'btn-secondary ';\r\n\r\n    return (\r\n      <button className={className} onClick={() => this.props.onChange?.(value)}>{text}</button>\r\n    );\r\n  }\r\n\r\n  render () {\r\n\r\n    return (\r\n      <div className=\"custom-wrapper\">\r\n        {this.renderButton(0, 'Off')}\r\n        {this.renderButton(0.5, 'Semi')}\r\n        {this.renderButton(1, 'On')}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { _api, ReduxState } from './reducers';\r\nimport { ConnectionStatus, Tabs, Screen, Stack, RenameModal, AlertModal, IconModal, PropertiesDrawer, Login, SignalIcon, EmptyTab } from './components';\r\nimport { IPreset, IView, ITab, TabLayout, WidgetTypes, ICustomStackProperty, IPanelType, ScreenType, IPanel, ICustomStackListItem, IHistory, ConnectionSignal } from './shared';\r\nimport { fas, IconName } from '@fortawesome/free-solid-svg-icons';\r\nimport { BeforeCapture, DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport _ from 'lodash';\r\nimport './example/CustomWidget';\r\n\r\n\r\ntype PropsFromState = Partial<{\r\n  keyCorrect?: boolean;\r\n  connected?: boolean;\r\n  loading?: boolean;\r\n  isOpen?: boolean;\r\n  view: IView;\r\n  presets: IPreset[]\r\n  preset: IPreset;\r\n  signal?: ConnectionSignal;\r\n  lockedUI: boolean,\r\n  undo: IHistory[],\r\n  redo: IHistory[],\r\n  initialize?: () => void;\r\n}>;\r\n\r\nconst mapStateToProps = (state: ReduxState): PropsFromState => ({\r\n  connected: state.api.status.connected,\r\n  keyCorrect: state.api.status.keyCorrect,\r\n  loading: state.api.status.loading,\r\n  isOpen: state.api.status.isOpen,\r\n  presets: _.values(state.api.presets),\r\n  preset: state.api.presets[state.api.preset],\r\n  view: state.api.view,\r\n  lockedUI: state.api.lockedUI,\r\n  signal: state.api.status.signal,\r\n  undo: state.api.undo,\r\n  redo: state.api.redo,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch): PropsFromState => ({\r\n  initialize: async () => dispatch(_api.initialize()),\r\n});\r\n\r\nconst characters ='0123456789';\r\n//IB: Range of number IDs is 0 - 10000\r\n// We will use the range 1-9999\r\nfunction generateAgoraUserID():string {\r\n// The maximum is exclusive and the minimum is inclusive\r\n    let min = Math.ceil(1);\r\n    let max = Math.floor(10000);\r\n    let result = Math.floor(Math.random() * (max - min) + min).toString(); \r\n    return result;\r\n  }\r\n\r\ntype DropElement = {\r\n  id: string;\r\n  path: string;\r\n  type: string;\r\n  accept: string[];\r\n}\r\n\r\ntype DropBoundaries = {\r\n  id: string;\r\n  top: number;\r\n  bottom: number;\r\n}\r\n\r\ntype State = {\r\n  tab: number;\r\n  editable?: boolean;\r\n  panel?: number;\r\n  dragging?: string;\r\n  droppable?: string;\r\n  selected?: string;\r\n  hoverTab?: string;\r\n  vector?: ICustomStackProperty;\r\n};\r\n\r\n\r\n@(connect(mapStateToProps, mapDispatchToProps) as any)\r\nexport class App extends React.Component<PropsFromState, State> {\r\n\r\n  state: State = {\r\n    tab: 0,\r\n    panel: 0,\r\n  };\r\n\r\n  //IB: Store Custom User ID\r\n  agoraID = generateAgoraUserID();\r\n  // IB: End Custom State info\r\n\r\n  appRef = React.createRef<HTMLDivElement>();\r\n  panelRef = React.createRef<HTMLDivElement>();\r\n\r\n  widget: any[] = null;\r\n  dropElements: Record<string, DropElement> = {};\r\n  dropBoundaries: DropBoundaries[] = [];\r\n  hoverDelay = null;\r\n  buildInfo: string = '';\r\n\r\n  componentDidMount() {\r\n    this.props.initialize();\r\n    document.onpointermove = this.onPointerMove;\r\n    this.getBuildInfo()\r\n        .then(info => this.buildInfo = info);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsFromState, prevState: State) {\r\n    const { preset } = this.props;\r\n    const { editable } = this.state;\r\n\r\n    if (preset?.Name !== prevProps.preset?.Name)\r\n      this.setState({ tab: 0 });\r\n\r\n    if (editable !== prevState.editable)\r\n      this.setState({ selected: null });\r\n\r\n    if (this.props.connected && !prevProps.connected)\r\n      this.checkVersionMatch();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.onpointermove = null;\r\n  }\r\n\r\n  getBuildInfo = async (): Promise<string> => {\r\n    try {\r\n      const req = await fetch('/version.json');\r\n      return await req.text();\r\n    } catch {\r\n    }\r\n  }\r\n\r\n  checkVersionMatch = async () => {\r\n    const buildInfo = await this.getBuildInfo();\r\n    if (!this.buildInfo || !buildInfo)\r\n      return;\r\n\r\n    if (this.buildInfo === buildInfo)\r\n      return;\r\n\r\n    const reload = await AlertModal.show('The web app seems to be outdated, reload?');\r\n    if (reload)\r\n      document.location.reload();\r\n  }\r\n\r\n  onDropElementAdd = (id: string, path: string = '', accept: string[], type) => {\r\n    this.dropElements[id] = { id, path, accept, type };\r\n\r\n    return id;\r\n  }\r\n\r\n  onPointerMove = (e: PointerEvent) => {\r\n    const { dragging, droppable } = this.state;\r\n\r\n    if (!dragging)\r\n      return;\r\n\r\n    const elements = document.elementsFromPoint(e.clientX, e.clientY);\r\n    const tab = elements.find(el => !!el?.getAttribute('data-prefix'));\r\n\r\n    if (tab) {\r\n      const prefix = tab.getAttribute('data-prefix');\r\n      const id = tab.getAttribute('data-value');\r\n\r\n      clearTimeout(this.hoverDelay);\r\n      return this.hoverDelay = setTimeout(() => this.setState({ hoverTab: `${prefix}_${id}` }), 300);\r\n    }\r\n\r\n    clearTimeout(this.hoverDelay);\r\n\r\n    const el = elements.find(el => !!el?.getAttribute('data-rbd-droppable-id'));\r\n    const attr = el?.getAttribute('data-rbd-droppable-id');\r\n\r\n    if (!attr || droppable === attr)\r\n      return;\r\n\r\n    const dropTypes = this.dropElements[attr]?.accept || [];\r\n    const type = _.last(dragging.split('_'));\r\n\r\n    if (dropTypes.includes(type) || _.first(dropTypes) === 'ALL')\r\n      this.setState({ droppable: attr });\r\n  }\r\n\r\n  onKeyDown = async (e: React.KeyboardEvent) => {\r\n    if (!e.ctrlKey && !e.metaKey && e.key !== 'Delete')\r\n      return;\r\n\r\n    const { tab, selected, editable } = this.state;\r\n\r\n    if (e.key === 'Delete') {\r\n      if (!editable || !selected || e.target instanceof HTMLInputElement)\r\n        return;\r\n\r\n      const { view } = this.props;\r\n      const tab = view.tabs?.[this.state.tab];\r\n      const [path, index] = selected?.split('_');\r\n\r\n      const widgets = _.get(tab.panels, path, tab.panels) as ICustomStackProperty[];\r\n\r\n      if (!widgets.length)\r\n        return;\r\n\r\n      if (!e.shiftKey) {\r\n        if (!await AlertModal.show('Are you sure you want to delete ?'))\r\n          return;\r\n      }\r\n\r\n      widgets.splice(+index, 1);\r\n      _api.views.set(view);\r\n\r\n      return this.appRef?.current?.focus();\r\n    }\r\n\r\n    let tabNumber = parseInt(e.key);\r\n    if (!isNaN(tabNumber)) {\r\n      const { view } = this.props;\r\n\r\n      // tabNumber == 1-9 tab #index, 0 - last tab\r\n      tabNumber = tabNumber || view.tabs?.length || 1;\r\n\r\n      this.onTabChange(tabNumber - 1);\r\n      e.preventDefault();\r\n\r\n      return;\r\n    }\r\n\r\n    switch (e.nativeEvent.code) {\r\n      case 'KeyE':\r\n        e.preventDefault();\r\n        this.setState({ editable: !this.state.editable });\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        this.onTabChange(tab - 1);\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        this.onTabChange(tab + 1);\r\n        break;\r\n    }\r\n  }\r\n\r\n  isEditable = (tab: number): boolean => {\r\n    const { view } = this.props;\r\n\r\n    if (!view.tabs?.length)\r\n      return false;\r\n\r\n    const { layout, panels } = view.tabs[tab] ?? {};\r\n    switch (layout) {\r\n      case TabLayout.Stack:\r\n        return !panels?.length;\r\n\r\n      case TabLayout.Screen:\r\n        return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  onTabChange = (tab: number) => {\r\n    const { view } = this.props;\r\n\r\n    tab = Math.min(Math.max(0, tab), view.tabs?.length - 1) || 0;\r\n    const editable = this.isEditable(tab) || this.state.editable;\r\n    this.setState({ tab, vector: null, editable });\r\n  }\r\n\r\n  getNewTabName = (): string => {\r\n    let last = 0;\r\n    for (const tab of this.props.view?.tabs ?? []) {\r\n      const match = /^Tab (\\d+)$/i.exec(tab.name);\r\n      const index = parseInt(match?.[1]);\r\n      if (!isNaN(index) && index > last)\r\n        last = index;\r\n    }\r\n\r\n    return `Tab ${last + 1}`;\r\n  }\r\n\r\n  getRandomIcon = (): IconName => {\r\n    const iconPack = Object.keys(fas);\r\n    const keys = iconPack.map(key => fas[key].iconName);\r\n    const index = Math.round(performance.now() * 10000) % keys.length;\r\n    return keys[index];\r\n  }\r\n\r\n  onNewTab = (panels: IPanel[] = []) => {\r\n    const { view } = this.props;\r\n\r\n    this.createNewTabInternal(panels, null, TabLayout.Empty);\r\n    _api.views.set(view);\r\n\r\n    this.onTabChange(view.tabs.length - 1);\r\n    this.setState({ editable: true });\r\n  }\r\n\r\n  onNewTabs = (items: ICustomStackListItem[]) => {\r\n    const { view } = this.props;    \r\n\r\n    for (const item of items)\r\n      this.createNewTabInternal(item.panels, item.label);\r\n\r\n    _api.views.set(view);\r\n\r\n    this.onTabChange(view.tabs.length - 1);\r\n    this.setState({ editable: true });\r\n  }\r\n\r\n  createNewTabInternal = (panels: IPanel[] = [], name?: string, layout = TabLayout.Stack) => {\r\n    const { view } = this.props;\r\n\r\n    view.tabs.push({\r\n      name: name ?? this.getNewTabName(),\r\n      icon: this.getRandomIcon(),\r\n      layout,\r\n      panels\r\n    });\r\n  }\r\n\r\n  onDuplicateTab = () => {\r\n    const { view } = this.props;\r\n    const { tab } = this.state;\r\n\r\n    const duplicatedTab: ITab = {\r\n      ...view.tabs[tab],\r\n      name: this.getNewTabName(),\r\n    };\r\n\r\n    view.tabs.push(duplicatedTab);\r\n    _api.views.set(view);\r\n    this.onTabChange(view.tabs.length - 1);\r\n    this.setState({ editable: true });\r\n  }\r\n\r\n  onScreenAdd = (type: ScreenType) => {\r\n    const { view } = this.props;\r\n    let tab = view.tabs[this.state.tab];\r\n\r\n    delete tab.panels;\r\n\r\n    switch (type) {\r\n      case ScreenType.ColorCorrection:\r\n        tab = { ...tab, name: 'Color Correction', icon: 'palette', layout: TabLayout.Screen, screen: { type: ScreenType.ColorCorrection }, };\r\n        break;\r\n\r\n      case ScreenType.LightCards:\r\n        tab = { ...tab, name: 'Light Cards', icon: 'adjust', layout: TabLayout.Screen, screen: { type: ScreenType.LightCards }, };\r\n        break;\r\n\r\n      case ScreenType.Playlist:\r\n        tab = { ...tab, name: 'Playlists', icon: 'play', layout: TabLayout.Screen, screen: { type: ScreenType.Playlist }, };\r\n        break;\r\n\r\n      case ScreenType.Sequencer:\r\n        tab = { ...tab, name: 'Sequences', icon: 'play', layout: TabLayout.Screen, screen: { type: ScreenType.Sequencer }, };\r\n        break;\r\n\r\n      case ScreenType.Snapshot:\r\n        tab = { ...tab, name: 'Snapshot', icon: 'save', layout: TabLayout.Screen, screen: { type: ScreenType.Snapshot }, };\r\n        break;\r\n\r\n      case ScreenType.Stack:\r\n        tab = { ...tab, panels: [], layout: TabLayout.Stack };\r\n        break;\r\n    }\r\n\r\n    view.tabs[this.state.tab] = tab;\r\n    _api.views.set(view);\r\n  }\r\n\r\n  onSetTabsDrawer = (editable: boolean) => {\r\n    this.setState({ editable });\r\n  }\r\n\r\n  onPresetChanged = (preset: IPreset) => {\r\n    if (preset.ID !== this.props.preset?.ID)\r\n      _api.presets.select(preset);\r\n  }\r\n\r\n  onTabRename = async () => {\r\n    const { view } = this.props;\r\n    const { tab } = this.state;\r\n\r\n    const oldName = view.tabs[tab].name;\r\n    const name = await RenameModal.rename(oldName, 'Tab title');\r\n    if (!name || name === oldName)\r\n      return;\r\n\r\n    view.tabs[tab].name = name;\r\n    _api.views.set(view);\r\n  }\r\n\r\n  onTabDelete = async (tab: number) => {\r\n    if (!await AlertModal.show('Are you sure you want to delete this tab?'))\r\n      return;\r\n\r\n    const { view } = this.props;\r\n    if (tab < 0 || tab >= view.tabs.length)\r\n      return;\r\n\r\n    view.tabs.splice(tab, 1);\r\n    _api.views.set(view);\r\n    tab = Math.min(tab, view.tabs.length - 1);\r\n\r\n    this.setState({ tab });\r\n  }\r\n\r\n  onTabIconChange = async () => {\r\n    const { view } = this.props;\r\n    const tab = view.tabs[this.state.tab];\r\n    if (!tab)\r\n      return;\r\n\r\n    const newIcon = await IconModal.show(tab.icon);\r\n\r\n    if (newIcon) {\r\n      tab.icon = newIcon;\r\n      _api.views.set(view);\r\n    }\r\n  }\r\n\r\n  setVectorDrawer = (widget?: ICustomStackProperty) => {\r\n    let vector = null;\r\n    if (widget?.widgets?.length)\r\n      vector = widget;\r\n\r\n    this.setState({ vector });\r\n  }\r\n\r\n  resetDragState = (state: any = {}) => {\r\n    this.widget = null;\r\n\r\n    this.setState({ dragging: null, droppable: null, selected: null, ...state });\r\n  }\r\n\r\n  onBeforeCapture = (initial: BeforeCapture) => {\r\n    let { selected } = this.state;\r\n    if (!initial.draggableId.startsWith('REORDER'))\r\n      selected = null;\r\n\r\n    this.setState({ dragging: initial.draggableId, selected });\r\n  }\r\n\r\n  onDragEnd = (result: DropResult) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination)\r\n      return this.resetDragState();\r\n\r\n    const { view } = this.props;\r\n\r\n    if (result.type === 'HEADER_TABS') {\r\n      const tab = view.tabs[source.index];\r\n\r\n      view.tabs.splice(source.index, 1);\r\n      view.tabs.splice(destination.index, 0, tab);\r\n      _api.views.set(view);\r\n\r\n      this.onTabChange(destination.index);\r\n\r\n      return this.resetDragState();\r\n    };\r\n\r\n    const tab = view.tabs?.[this.state.tab];\r\n    const drop = this.dropElements[destination.droppableId];\r\n\r\n    if (['TABS-REORDER', 'LIST-REORDER'].includes(result.type)) {\r\n      let tabs = _.get(tab?.panels, drop.path, tab?.panels);\r\n\r\n      if (result.type === 'TABS-REORDER')\r\n        tabs = tabs.tabs;\r\n\r\n      if (result.type === 'LIST-REORDER')\r\n        tabs = tabs.items;\r\n\r\n      const drag = tabs[source.index];\r\n\r\n      tabs.splice(source.index, 1);\r\n      tabs.splice(destination.index, 0, drag);\r\n\r\n      return _api.views.set(view);\r\n    };\r\n\r\n    if (!drop)\r\n      return this.resetDragState();\r\n\r\n    const sourcePath = this.dropElements[source.droppableId]?.path;\r\n    const dropPath = drop?.path;\r\n    const dragType = _.last(draggableId.split('_'));\r\n\r\n    const index = source.index;\r\n\r\n    if (!tab.panels)\r\n      tab.panels = [];\r\n\r\n    const panels = [...tab.panels];\r\n    const dropDestination = _.get(tab?.panels, dropPath, tab?.panels);\r\n\r\n    if (!this.widget?.length) {\r\n      this.widget = _.get(tab?.panels, sourcePath, tab?.panels).splice(index, 1);\r\n\r\n      if (dropPath === sourcePath && [WidgetTypes.Button, WidgetTypes.ColorPicker, WidgetTypes.MiniColorPicker, WidgetTypes.Toggle].includes(this.widget[0]?.widget as WidgetTypes)) {\r\n        if (destination.droppableId !== source.droppableId && source.index < destination.index)\r\n          destination.index -= 1;\r\n      }\r\n    }\r\n\r\n    let el = [...this.widget];\r\n\r\n    switch (dragType) {\r\n      case 'PANEL':\r\n        break;\r\n\r\n      case 'LIST':\r\n        el = [{ type: IPanelType.List, items: [{ label: 'Item 1', panels }] }];\r\n        dropDestination.splice(0, dropDestination.length);\r\n        break;\r\n\r\n      default:\r\n        if (['ROOT', 'LIST'].includes(drop.type))\r\n          el = [{ type: IPanelType.Panel, widgets: el }];\r\n        break;\r\n    }\r\n\r\n    dropDestination.splice(destination.index, 0, ...el);\r\n\r\n    this.resetDragState({ selected: `${dropPath}_${destination.index}_${_.first(el).property || null}` });\r\n    _api.views.set(view);\r\n  }\r\n\r\n  onSelected = (selected: string) => {\r\n    if (!this.state.editable)\r\n      return;\r\n\r\n    this.setState({ selected });\r\n  }\r\n\r\n  onResetSelection = (e: React.MouseEvent) => {\r\n    this.setState({ selected: null });\r\n  }\r\n\r\n  renderTab = () => {\r\n    const { view } = this.props;\r\n    if (!view.tabs || !view.tabs.length)\r\n      return null;\r\n\r\n    const index = this.state.tab;\r\n    const tab = view.tabs[index];\r\n    if (!tab)\r\n      return null;\r\n\r\n    let visible = true;\r\n    const style: React.CSSProperties = {};\r\n    if (this.state.tab !== index) {\r\n      visible = false;\r\n      style.display = 'none';\r\n    }\r\n\r\n    let content = null;\r\n    switch (tab.layout) {\r\n      case TabLayout.Stack:\r\n        content = this.renderStack(tab, visible, index);\r\n        break;\r\n\r\n      case TabLayout.Screen:\r\n        content = this.renderScreen(tab, visible);\r\n        break;\r\n\r\n      case TabLayout.Empty:\r\n        content = <EmptyTab onAddScreen={this.onScreenAdd} />;\r\n    }\r\n\r\n    return (\r\n      <section id=\"panels\" key={index} className={`layout-${tab.layout}`} style={style}>\r\n        {content}\r\n      </section>\r\n    );\r\n  }\r\n\r\n  renderStack = (tab: ITab, visible: boolean, index: number) => {\r\n    const { editable, dragging, droppable, selected, hoverTab, vector } = this.state;\r\n    const tabKey = `${tab.name}-${index}`;\r\n\r\n    return (\r\n      <div ref={this.panelRef} className=\"panel\" onClick={this.onResetSelection}>\r\n        <Stack \r\n               agoraUserID={this.agoraID}\r\n               panels={tab.panels}\r\n               editable={editable}\r\n               visible={visible}\r\n               dragging={dragging}\r\n               droppable={droppable}\r\n               selected={selected}\r\n               tabKey={tabKey}\r\n               hoverTab={hoverTab}\r\n               vector={vector}\r\n               onSelected={this.onSelected}\r\n               getDroppableId={this.onDropElementAdd}\r\n               onSetVectorDrawer={this.setVectorDrawer} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderScreen = (tab: ITab, visible: boolean) => {\r\n    return (\r\n      <div className=\"panel\">\r\n        <Screen screen={tab.screen} visible={visible} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onUpdateView = (update: boolean) => {\r\n    const { view } = this.props;\r\n\r\n    if (update)\r\n      this.setState({ selected: null });\r\n\r\n    _api.views.set(view);\r\n  }\r\n\r\n  onLockedChange = () => {\r\n    const { lockedUI } = this.props;\r\n    _api.lockUI(!lockedUI);\r\n  }\r\n\r\n  checkPassphrase = async (passphrase: string): Promise<boolean> => {\r\n    return await _api.passphrase.login(passphrase);\r\n  }\r\n\r\n  renderStatus = () => {\r\n    const { keyCorrect, connected, loading, isOpen, preset } = this.props;\r\n\r\n    if (!connected)\r\n      return <ConnectionStatus />;\r\n\r\n    if (!keyCorrect && !isOpen)\r\n      return <Login />;\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className=\"fullscreen\">\r\n          <div className=\"app-icon\">\r\n            <FontAwesomeIcon icon={['fas', 'sync-alt']} spin />\r\n          </div>\r\n          <div>Loading Preset Data...</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    //if (!preset)\r\n      //return <h1 className=\"fullscreen opaque\">No Preset Available</h1>;\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { view, preset, presets, lockedUI, undo, redo, signal } = this.props;\r\n    const { tab, editable, selected } = this.state;\r\n\r\n    let appClassName = 'tabs-closed ';\r\n\r\n    if (editable)\r\n      appClassName = appClassName.replace('closed', 'open');\r\n\r\n    if (lockedUI)\r\n      appClassName += 'locked ';  \r\n\r\n    return (\r\n      <DragDropContext onBeforeCapture={this.onBeforeCapture}\r\n                       onDragEnd={this.onDragEnd}>\r\n        <div id=\"app\"\r\n             className={appClassName}\r\n             tabIndex={1}\r\n             ref={this.appRef}\r\n             onKeyDown={this.onKeyDown} >\r\n          {this.renderStatus()}\r\n\r\n          {lockedUI && \r\n            <div className='locked-layer' />\r\n          }\r\n          <nav id=\"top-bar\">\r\n            <div className=\"app-icon\">\r\n              <img src=\"/images/favicon/32x32.png\" alt=\"Unreal Engine\" />\r\n            </div>\r\n           \r\n            <Tabs preset={preset}\r\n                  agoraUserID={this.agoraID}\r\n                  tabs={view.tabs}\r\n                  selected={tab}\r\n                  onChange={this.onTabChange}\r\n                  onNewTab={this.onNewTab}\r\n                  editable={editable}\r\n                  locked={lockedUI}\r\n                  undo={!!undo.length}\r\n                  redo={!!redo.length}\r\n                  onDeleteTab={this.onTabDelete}\r\n                  onLockedChange={this.onLockedChange} />\r\n          </nav>\r\n\r\n          {!!preset &&\r\n            <PropertiesDrawer preset={preset}\r\n                              presets={presets}\r\n                              editable={editable}\r\n                              tab={tab}\r\n                              view={view}\r\n                              panels={view.tabs[tab]?.panels || []}\r\n                              selected={selected}\r\n                              onChangeIcon={this.onTabIconChange}\r\n                              onRenameTabModal={this.onTabRename}\r\n                              onDuplicateTab={this.onDuplicateTab}                              \r\n                              onPresetChange={this.onPresetChanged}\r\n                              onUpdateView={this.onUpdateView}\r\n                              onSelected={this.onSelected}\r\n                              onNewTabs={this.onNewTabs}\r\n                              lockWidget={widget => this.widget = widget} />\r\n          }\r\n          {this.renderTab()}\r\n          <SignalIcon signal={signal} />\r\n        </div>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}","import { IconPack, library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\n\r\nlibrary.add(fas as IconPack, far as IconPack);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\nimport { App } from './App';\r\nimport './styles/style.less';\r\nimport './IconLibrary';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}